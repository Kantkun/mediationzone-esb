<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE exportmultiplex SYSTEM "jar:/mz/dtd/export_multiplex.dtd">
<exportmultiplex category="Template" ref_path="workflow_data[Internal]/storable[workflow_data]/storable[Data]">
   <Multiplex_Ref ref_path="exportmultiplex[Workflow_Table]/storable[InstanceTable]">
      <int name="Field Count" value="4"/>
      <int name="Node ID 0" value="2147483647"/>
      <int name="Node ID 1" value="-1653812177"/>
      <int name="Node ID 2" value="-308909210"/>
      <int name="Node ID 3" value="1811779486"/>
      <string name="Node Name 0" value="Workflow"/>
      <string name="Node Name 1" value="RequestTCP"/>
      <string name="Node Name 2" value="matchRequestToResponse"/>
      <string name="Node Name 3" value="matchCCMSReqToRes"/>
   </Multiplex_Ref>
   <storable name="Execution Config" storable-id="dr.WorkflowExecutionConfig" ver="8.0">
      <object name="Debug Type">
         <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
            <object name="Value">
               <enum name="Object Internal" storable-id="dr.DebugType" value="EVENT"/>
            </object>
         </storable>
      </object>
      <boolean name="Debug Type active" value="true"/>
      <string name="Debug Type extref key" null="true"/>
      <enum name="Debug Type fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
      <boolean name="Debug Type mod" value="false"/>
      <boolean name="Debug Type pres" value="true"/>
      <object name="Execution Settings">
         <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
            <object name="Value">
               <storable name="Object Internal" storable-id="dr.ExecutionSettings" ver="2.0">
                  <enum name="dist" storable-id="dr.WorkflowDistType" value="ROUND_ROBIN"/>
                  <list classname="java.util.LinkedList" name="ecList">
                     <storable name="0" storable-id="dr.PicoInstanceEntity" ver="1.0">
                        <string name="Name" value="ecsa1"/>
                        <int name="Type" value="3"/>
                     </storable>
                     <storable name="1" storable-id="dr.PicoInstanceEntity" ver="1.0">
                        <string name="Name" value="ecsa2"/>
                        <int name="Type" value="3"/>
                     </storable>
                  </list>
                  <boolean name="enabled" value="true"/>
                  <list classname="java.util.LinkedList" name="groupList"/>
               </storable>
            </object>
         </storable>
      </object>
      <boolean name="Execution Settings active" value="true"/>
      <string name="Execution Settings extref key" null="true"/>
      <enum name="Execution Settings fit" storable-id="dr.DRFieldInstanceType" value="INSTANCE"/>
      <boolean name="Execution Settings mod" value="false"/>
      <boolean name="Execution Settings pres" value="true"/>
      <object name="Number of Files to Keep">
         <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
            <object name="Value">
               <int name="Object Internal" value="0"/>
            </object>
         </storable>
      </object>
      <boolean name="Number of Files to Keep active" value="true"/>
      <string name="Number of Files to Keep extref key" null="true"/>
      <enum name="Number of Files to Keep fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
      <boolean name="Number of Files to Keep mod" value="false"/>
      <boolean name="Number of Files to Keep pres" value="true"/>
      <object name="Throughput MIM">
         <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
            <object name="Value">
               <null name="Object Internal"/>
            </object>
         </storable>
      </object>
      <boolean name="Throughput MIM active" value="true"/>
      <string name="Throughput MIM extref key" null="true"/>
      <enum name="Throughput MIM fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
      <boolean name="Throughput MIM mod" value="false"/>
      <boolean name="Throughput MIM pres" value="true"/>
      <object name="Transaction Handler">
         <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
            <object name="Value">
               <null name="Object Internal"/>
            </object>
         </storable>
      </object>
      <boolean name="Transaction Handler active" value="true"/>
      <string name="Transaction Handler extref key" null="true"/>
      <enum name="Transaction Handler fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
      <boolean name="Transaction Handler mod" value="false"/>
      <boolean name="Transaction Handler pres" value="true"/>
   </storable>
   <list classname="java.util.ArrayList" name="Field Types">
      <storable name="0" storable-id="dr.WorkflowData$FieldAndType" ver="1.0">
         <string name="Field Name" value="Execution - Execution Settings"/>
         <enum name="Field Type" storable-id="dr.DRFieldInstanceType" value="INSTANCE"/>
         <int name="Node Id" value="2147483647"/>
         <string name="Node Name" value="Workflow"/>
      </storable>
      <storable name="1" storable-id="dr.WorkflowData$FieldAndType" ver="1.0">
         <string name="Field Name" value="TCP/IP - Port"/>
         <enum name="Field Type" storable-id="dr.DRFieldInstanceType" value="INSTANCE"/>
         <int name="Node Id" value="-1653812177"/>
         <string name="Node Name" value="RequestTCP"/>
      </storable>
      <storable name="2" storable-id="dr.WorkflowData$FieldAndType" ver="1.0">
         <string name="Field Name" value="Configuration - Profile"/>
         <enum name="Field Type" storable-id="dr.DRFieldInstanceType" value="DEFAULT"/>
         <int name="Node Id" value="-308909210"/>
         <string name="Node Name" value="matchRequestToResponse"/>
      </storable>
      <storable name="3" storable-id="dr.WorkflowData$FieldAndType" ver="1.0">
         <string name="Field Name" value="Configuration - Profile"/>
         <enum name="Field Type" storable-id="dr.DRFieldInstanceType" value="DEFAULT"/>
         <int name="Node Id" value="1811779486"/>
         <string name="Node Name" value="matchCCMSReqToRes"/>
      </storable>
   </list>
   <int name="Flow Counters Interval" value="0"/>
   <list classname="java.util.ArrayList" name="Logged error MIM"/>
   <list classname="java.util.ArrayList" name="Nodes">
      <storable name="0" storable-id="dr.WfNode" ver="2.0">
         <string name="Classname"><![CDATA[com.digitalroute.mz.pulse.agent.PulseCollectorAgentInspRT]]></string>
         <array classname="com.digitalroute.wf.WfNodeConfig" name="Configuration" size="1">
            <storable name="0" storable-id="dr.WfNodeConfig" ver="1.0">
               <string name="Classname"><![CDATA[com.digitalroute.mz.pulse.agent.PulseCollectorAgentInspRT]]></string>
               <storable name="Data" storable-id="dr.PulseData" ver="7.0">
                  <object name="Center Value">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <double name="Object Internal" value="1.0"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Center Value active" value="false"/>
                  <string name="Center Value extref key" null="true"/>
                  <enum name="Center Value fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Center Value mod" value="false"/>
                  <boolean name="Center Value pres" value="true"/>
                  <object name="Data">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <string name="Object Internal" value=""/>
                        </object>
                     </storable>
                  </object>
                  <object name="Data Entered">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <boolean name="Object Internal" value="true"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Data Entered active" value="true"/>
                  <string name="Data Entered extref key" null="true"/>
                  <enum name="Data Entered fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Data Entered mod" value="false"/>
                  <boolean name="Data Entered pres" value="true"/>
                  <object name="Data Size">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <int name="Object Internal" value="1"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Data Size active" value="false"/>
                  <string name="Data Size extref key" null="true"/>
                  <enum name="Data Size fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Data Size mod" value="false"/>
                  <boolean name="Data Size pres" value="true"/>
                  <object name="Data Unit">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <enum name="Object Internal" storable-id="dr.PulseDataSizeUnit" value="Bytes"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Data Unit active" value="false"/>
                  <string name="Data Unit extref key" null="true"/>
                  <enum name="Data Unit fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Data Unit mod" value="false"/>
                  <boolean name="Data Unit pres" value="true"/>
                  <boolean name="Data active" value="true"/>
                  <string name="Data extref key" null="true"/>
                  <enum name="Data fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Data mod" value="false"/>
                  <boolean name="Data pres" value="true"/>
                  <object name="Fixed Interval">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <long name="Object Internal" value="1"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Fixed Interval active" value="false"/>
                  <string name="Fixed Interval extref key" null="true"/>
                  <enum name="Fixed Interval fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Fixed Interval mod" value="false"/>
                  <boolean name="Fixed Interval pres" value="true"/>
                  <object name="Interval Type">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <string name="Object Internal" value="Single"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Interval Type active" value="true"/>
                  <string name="Interval Type extref key" null="true"/>
                  <enum name="Interval Type fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Interval Type mod" value="false"/>
                  <boolean name="Interval Type pres" value="true"/>
                  <object name="Poisson Rate">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <double name="Object Internal" value="1.0"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Poisson Rate active" value="false"/>
                  <string name="Poisson Rate extref key" null="true"/>
                  <enum name="Poisson Rate fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Poisson Rate mod" value="false"/>
                  <boolean name="Poisson Rate pres" value="true"/>
                  <object name="Random Order">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <boolean name="Object Internal" value="false"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Random Order active" value="true"/>
                  <string name="Random Order extref key" null="true"/>
                  <enum name="Random Order fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Random Order mod" value="false"/>
                  <boolean name="Random Order pres" value="true"/>
                  <object name="Random data">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <boolean name="Object Internal" value="false"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Random data active" value="true"/>
                  <string name="Random data extref key" null="true"/>
                  <enum name="Random data fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Random data mod" value="false"/>
                  <boolean name="Random data pres" value="true"/>
                  <object name="Range End">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <int name="Object Internal" value="10"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Range End active" value="false"/>
                  <string name="Range End extref key" null="true"/>
                  <enum name="Range End fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Range End mod" value="false"/>
                  <boolean name="Range End pres" value="true"/>
                  <object name="Range Start">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <int name="Object Internal" value="0"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Range Start active" value="false"/>
                  <string name="Range Start extref key" null="true"/>
                  <enum name="Range Start fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Range Start mod" value="false"/>
                  <boolean name="Range Start pres" value="true"/>
                  <object name="Rate Value Value">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <long name="Object Internal" value="1"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Rate Value Value active" value="false"/>
                  <string name="Rate Value Value extref key" null="true"/>
                  <enum name="Rate Value Value fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Rate Value Value mod" value="false"/>
                  <boolean name="Rate Value Value pres" value="true"/>
                  <object name="Sequential Order">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <boolean name="Object Internal" value="true"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Sequential Order active" value="true"/>
                  <string name="Sequential Order extref key" null="true"/>
                  <enum name="Sequential Order fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Sequential Order mod" value="false"/>
                  <boolean name="Sequential Order pres" value="true"/>
                  <object name="Sequential Range">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <boolean name="Object Internal" value="false"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Sequential Range active" value="true"/>
                  <string name="Sequential Range extref key" null="true"/>
                  <enum name="Sequential Range fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Sequential Range mod" value="false"/>
                  <boolean name="Sequential Range pres" value="true"/>
                  <object name="Start Value">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <long name="Object Internal" value="1"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Start Value active" value="false"/>
                  <string name="Start Value extref key" null="true"/>
                  <enum name="Start Value fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Start Value mod" value="false"/>
                  <boolean name="Start Value pres" value="true"/>
                  <object name="Stop Value">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <long name="Object Internal" value="10"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Stop Value active" value="false"/>
                  <string name="Stop Value extref key" null="true"/>
                  <enum name="Stop Value fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Stop Value mod" value="false"/>
                  <boolean name="Stop Value pres" value="true"/>
                  <object name="Time Unit">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <enum name="Object Internal" storable-id="dr.PulseTimeUnit" value="SECONDS"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Time Unit active" value="true"/>
                  <string name="Time Unit extref key" null="true"/>
                  <enum name="Time Unit fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Time Unit mod" value="false"/>
                  <boolean name="Time Unit pres" value="true"/>
                  <object name="Width Value">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <double name="Object Internal" value="1.0"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Width Value active" value="false"/>
                  <string name="Width Value extref key" null="true"/>
                  <enum name="Width Value fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Width Value mod" value="false"/>
                  <boolean name="Width Value pres" value="true"/>
               </storable>
            </storable>
         </array>
         <string name="Name" value="PulseTest"/>
      </storable>
      <storable name="1" storable-id="dr.WfNode" ver="2.0">
         <string name="Classname" value="com.digitalroute.wfc.analysis.AnalysisRealtimeInsp"/>
         <array classname="com.digitalroute.wf.WfNodeConfig" name="Configuration" size="1">
            <storable name="0" storable-id="dr.WfNodeConfig" ver="1.0">
               <string name="Classname" value="com.digitalroute.wfc.analysis.AnalysisRealtimeInsp"/>
               <storable name="Data" storable-id="dr.StuffyMapperData" ver="1.0">
                  <object name="Source code">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <string name="Object Internal"><![CDATA[//ultra
import ultra.CBS.UFL_DSP_Header;
import ultra.CBS.UFL_MBASE_Header;
import ultra.CBS.UFL_Aggregation;
import ultra.Ultra.UFL_AXC805000;
import ultra.Ultra.UFL_CM4876005;
import ultra.Ultra.UFL_CM4876006;
import ultra.Ultra.UFL_MBASE_CFC810001IR;
import ultra.Ultra.UFL_MBASE_CFC810010IR;
import ultra.Ultra.UFL_MBASE_LN87322;

//edit by: Prapas Ngootip [23/01/19]
import ultra.Ultra.UFL_GLS696;
import ultra.RESTClient;
//add by: Prapas Ngootip [18/02/2019]
import ultra.ws.SMS.PRF_WS_SMSService.cycles;
import ultra.ws.SMS.PRF_WS_SMSService.tns;
import ultra.SMS.UFL_SMSMatcher;

import ultra.TCPIP;
import ultra.ws.CCMS.PRF_WS_CCMSService.cycles;
import ultra.ws.CCMS.PRF_WS_CCMSService.tns;
import ultra.ws.LEG.PRF_WS_EscrtService.cycles;
import ultra.ws.LEG.PRF_WS_EscrtService.tns;
import ultra.EMAIL.UFL_EmailMatcher;
import ultra.Ultra.UFL_SYSLOG;

//apl
import apl.CM.APL_CMSService;
import apl.EMAIL.APL_EMAILService;
import apl.SMS.APL_SMSService;
import apl.CCMS.APL_CCMSService;
import apl.LEG.APL_LEGLegalService;
import apl.LEG.APL_EscrtService;
import apl.Common.APL_Common_Utilities;
import apl.NCB.APL_NCBService;
//edit by: Prapas Ngootip [23/01/19]
import apl.TRG.APL_TRGService;

import ultra.FNT;
    mimPublish( global, "SaveSLRequestNCBToDisk" , any );
    
consume {
    string acqRefNo = generateAcquireReferenceNumber();
    bytearray socketRequest = null;
    bytearray socketResponse = null;
    
    try{
        if(instanceOf(input,DSP_Header_TgIn)){
            DSP_Header_TgIn incoming = (DSP_Header_TgIn) input;
            
            debug(""); debug("");
            debug("== all message ==");
            debug(baToStr(incoming.data, "IBM-Thai"));
            debug(""); debug("");
            
            list<MBASE_Header_With_Payload_TI> mbaseList = listCreate(MBASE_Header_With_Payload_TI);
            udrDecode("MBASE_Header_With_Payload_Decode",mbaseList,incoming.data);
            MBASE_Header_With_Payload_TI mbase = listGet(mbaseList,0);
            
            debug("mbase data");
            debug(baToStr(mbase.data,"IBM-Thai"));
            debug("end mbase data");
            
            debug("Transaction code :" + mbase.mbaseHeader.HDTCOD);
            //check transaction code
            //Trigger SL Task
            if (mbase.mbaseHeader.HDTCOD == "GLS696"){
                string restRequest = baToStr(mbase.data,"IBM-Thai");
                RESTCycleUDR restUDR = udrCreate(RESTCycleUDR);
                RESTRequest restReq = udrCreate(RESTRequest);
                
                map<string,string> header = mapCreate(string,string);
                mapSet(header,"Accept","*/*" );
                
                restReq.Header = header;
                //Set HTTP method
                restReq.Method = "GET";
                //Set resource URI
                debug(restRequest);
                restReq.ResourceURI = restRequest;        
    
                restUDR.Request = restReq;
                restUDR.Context = acqRefNo;
                udrRoute(restUDR,"requestTrigger"); 
    
                debug("===rest===");
                debug(restUDR);
                debug("===end rest===");
                
                socketRequest = createContentMessageGLS696(acqRefNo,incoming);    
                udrRoute(socketRequest,"responseTCP");  
                
                debug("Request Socket");
                debug(baToStr(socketRequest, "IBM-Thai"));
                debug("End Request Socket");
            }
            
            if (mbase.mbaseHeader.HDTCOD == "CM4876005"){
                list<CM4876005_RQ_TI> aList = listCreate(CM4876005_RQ_TI);
                udrDecode("CM4876005_RQ_Decode",aList,mbase.data);
                CM4876005_RQ_TI CM4876005 = listGet(aList,0);  
                //debug(""); debug("");
                //debug("== CMS message ==");
                //debug(CM4876005); 
                //debug(""); debug("");
                udrRoute(CM4876005,"processPython");
                
                socketRequest = createContentMessageCM4876005(acqRefNo,incoming);    
                udrRoute(socketRequest,"responseTCP");  
                
               
                
                debug("Request Socket");
                debug(baToStr(socketRequest, "IBM-Thai"));
                debug("End Request Socket");       
            }
            
            // Send email 
            if (mbase.mbaseHeader.HDTCOD == "AXC805000"){
                EmailMatcher UFLMail = createEmailStructor(acqRefNo,incoming);
                debug("sendmail");
                debug(UFLMail);
                debug("end sendmail");
                udrRoute(UFLMail,"processPython");
            }
            
            // SMS
            if(mbase.mbaseHeader.HDTCOD == "AXC804000"){ 
            
                /*SMSMatcher UFLSMS = createSMSStructor(acqRefNo,incoming);
                debug("=== AXC804000 ===");
                debug(UFLSMS);
                debug("=== End AXC804000 ===");
                udrRoute(UFLSMS,"processPython");*/
                WSCycle_sendSMS requestSOAP = udrCreate(WSCycle_sendSMS);    
                requestSOAP = createSOAP_SendSMS(acqRefNo, incoming);
                    
                debug("soap request");
                debug(requestSOAP);
                debug("end");
                udrRoute(requestSOAP,"requestSMSSOAP");
                    
                //aggregation soap to SMS
                Matcher match = udrCreate(Matcher);
                match.uuid = acqRefNo;
                match.tcpRequest = incoming;
                udrRoute(match, "ccmsAggregation");
                
                //save log
                Logger log = udrCreate(Logger);
                log.uuid = acqRefNo;
                log.channelName = "SMS";
                log.serviceName = "sendSMS";
                log.xmlString = (string) requestSOAP;
                log.socketString = baToStr(udrEncode("DSP_Header_Encoder",incoming),"IBM-Thai");
                log.logType = "request";
                //get execution context
                log.exContext = (string) mimGet("Workflow", "Execution Context");
                udrRoute(log,"saveReqLog");

            }
            //iLegal
            if (mbase.mbaseHeader.HDTCOD == "LN87322" || mbase.mbaseHeader.HDTCOD == "LN88322"){
                    WSCycle_input requestSOAP = udrCreate(WSCycle_input);
                    requestSOAP =  createRequestLN87322(acqRefNo, incoming);
                    
                    debug("soap request");
                    debug(requestSOAP);
                    debug("end");
                    udrRoute(requestSOAP,"requestEscrtSOAP");
                    
                    //aggregation soap to CCMS
                    Matcher match = udrCreate(Matcher);
                    match.uuid = acqRefNo;
                    match.tcpRequest = incoming;
                    udrRoute(match, "ccmsAggregation");
                    
                    //save log
                    Logger log = udrCreate(Logger);
                    log.uuid = acqRefNo;
                    log.channelName = "LEG";
                    log.serviceName = "UpdateCStatus";
                    log.xmlString = (string) requestSOAP;
                    log.socketString = baToStr(udrEncode("DSP_Header_Encoder",incoming),"IBM-Thai");
                    log.logType = "request";
                    //get execution context
                    log.exContext = (string) mimGet("Workflow", "Execution Context");
                    udrRoute(log,"saveReqLog");
            }
            
            //CCMS
            if (mbase.mbaseHeader.HDTCOD == "DD20001"){
                if(mbase.mbaseHeader.HDFCID == "S"){  //inquirystockcard
                    WSCycle_inquiryStockCard requestSOAP = udrCreate(WSCycle_inquiryStockCard);
                    requestSOAP = createSOAP_InquiryStockCard(acqRefNo, incoming);
                    
                    debug("soap request");
                    debug(requestSOAP);
                    debug("end");
                    udrRoute(requestSOAP,"requestSOAP");
                    
                    //aggregation soap to CCMS
                    Matcher match = udrCreate(Matcher);
                    match.uuid = acqRefNo;
                    match.tcpRequest = incoming;
                    udrRoute(match, "ccmsAggregation");
                    
                    //save log
                    Logger log = udrCreate(Logger);
                    log.uuid = acqRefNo;
                    log.channelName = "CCMS";
                    log.serviceName = "inquiryStockCard";
                    log.xmlString = (string) requestSOAP;
                    log.socketString = baToStr(udrEncode("DSP_Header_Encoder",incoming),"IBM-Thai");
                    log.logType = "request";
                    //get execution context
                    log.exContext = (string) mimGet("Workflow", "Execution Context");
                    udrRoute(log,"saveReqLog");     
                }else{
                    WSCycle_inquiryCard requestSOAP = udrCreate(WSCycle_inquiryCard);
                    requestSOAP = createSOAP_InquiryCard(acqRefNo, incoming);
                    
                    debug("soap request");
                    debug(requestSOAP);
                    debug("end");
                    udrRoute(requestSOAP,"requestSOAP");
                    
                    //aggregation soap to CCMS
                    Matcher match = udrCreate(Matcher);
                    match.uuid = acqRefNo;
                    match.tcpRequest = incoming;
                    udrRoute(match, "ccmsAggregation");
                    
                    //save log
                    Logger log = udrCreate(Logger);
                    log.uuid = acqRefNo;
                    log.channelName = "CCMS";
                    log.serviceName = "inquiryCard";
                    log.xmlString = (string) requestSOAP;
                    log.socketString = baToStr(udrEncode("DSP_Header_Encoder",incoming),"IBM-Thai");
                    log.logType = "request";
                    //get execution context
                    log.exContext = (string) mimGet("Workflow", "Execution Context");
                    udrRoute(log,"saveReqLog");  
                } 
            }
            
            if (mbase.mbaseHeader.HDTCOD == "DD22001"){
                WSCycle_addInstantCard requestSOAP = udrCreate(WSCycle_addInstantCard);    
                requestSOAP = createSOAP_AddInstantCard(acqRefNo, incoming);
                    
                debug("soap request");
                debug(requestSOAP);
                debug("end");
                udrRoute(requestSOAP,"requestSOAP");
                    
                //aggregation soap to CCMS
                Matcher match = udrCreate(Matcher);
                match.uuid = acqRefNo;
                match.tcpRequest = incoming;
                udrRoute(match, "ccmsAggregation");
                
                //save log
                Logger log = udrCreate(Logger);
                log.uuid = acqRefNo;
                log.channelName = "CCMS";
                log.serviceName = "addInstantCard";
                log.xmlString = (string) requestSOAP;
                log.socketString = baToStr(udrEncode("DSP_Header_Encoder",incoming),"IBM-Thai");
                log.logType = "request";
                //get execution context
                log.exContext = (string) mimGet("Workflow", "Execution Context");
                udrRoute(log,"saveReqLog");  
            }
            
            if (mbase.mbaseHeader.HDTCOD == "DD22002"){
                WSCycle_replaceCard requestSOAP = udrCreate(WSCycle_replaceCard);    
                requestSOAP = createSOAP_ReplaceCard(acqRefNo, incoming);
                    
                debug("soap request");
                debug(requestSOAP);
                debug("end");
                udrRoute(requestSOAP,"requestSOAP");
                    
                //aggregation soap to CCMS
                Matcher match = udrCreate(Matcher);
                match.uuid = acqRefNo;
                match.tcpRequest = incoming;
                udrRoute(match, "ccmsAggregation");
                
                //save log
                Logger log = udrCreate(Logger);
                log.uuid = acqRefNo;
                log.channelName = "CCMS";
                log.serviceName = "replaceCard";
                log.xmlString = (string) requestSOAP;
                log.socketString = baToStr(udrEncode("DSP_Header_Encoder",incoming),"IBM-Thai");
                log.logType = "request";
                //get execution context
                log.exContext = (string) mimGet("Workflow", "Execution Context");
                udrRoute(log,"saveReqLog");
            }
            
            if (mbase.mbaseHeader.HDTCOD == "DD22003"){
                WSCycle_updateRelatedAccounts requestSOAP = udrCreate(WSCycle_updateRelatedAccounts); 
                requestSOAP = createSOAP_UpdateRelatedAccounts(acqRefNo, incoming);
                    
                debug("soap request");
                debug(requestSOAP);
                debug("end");
                udrRoute(requestSOAP,"requestSOAP");
                    
                //aggregation soap to CCMS
                Matcher match = udrCreate(Matcher);
                match.uuid = acqRefNo;
                match.tcpRequest = incoming;
                udrRoute(match, "ccmsAggregation");
                
                //save log
                Logger log = udrCreate(Logger);
                log.uuid = acqRefNo;
                log.channelName = "CCMS";
                log.serviceName = "updateRelatedAccounts";
                log.xmlString = (string) requestSOAP;
                log.socketString = baToStr(udrEncode("DSP_Header_Encoder",incoming),"IBM-Thai");
                log.logType = "request";
                //get execution context
                log.exContext = (string) mimGet("Workflow", "Execution Context");
                udrRoute(log,"saveReqLog");
            }
            
            //NCB
            if(mbase.mbaseHeader.HDTCOD == "CFC810000"){
                //get cfc810001 object.
                list<CFC810001I_RQ_TI> cfc810001List = listCreate(CFC810001I_RQ_TI);
                bytearray mbaseData = refillTrimedColumn(mbase.data,sizeOf_CFC180001IR_Rq);
                udrDecode("CFC810001I_RQ_Decode",cfc810001List,mbaseData);
                //udrDecode("CFC810001I_RQ_Decode",cfc810001List,mbase.data);
                CFC810001I_RQ_TI cfc810001 = listGet(cfc810001List,0);
                
                //response cfc810001 back to SL
                socketResponse = createResponseSocketCFC810001(acqRefNo, incoming);
                //socketResponse = refillTrimedColumn(socketResponse,getSizeOfCFC180001IR());
                
                udrRoute(socketResponse,"responseTCP");
                
                string requestRefNumber = strTrim(cfc810001.ReferenceNumber);
                date logDatetime = dateCreateNow();
                
                //save request socket to disk.
                debug("Start save socket data to disk.");
                bytearray dspBa = udrEncode("DSP_Header_Encoder",incoming);
                FNTUDR fntudr = udrCreate(FNTUDR);                
                string logDatetimefnt; dateToString(logDatetimefnt, logDatetime, "yyyyMMdd_HHmmss_SSS");            
                int random = randomInt(99999);
                string randomStr = (string)random;
                while(strLength(randomStr) < 5){
                    randomStr = "0" + randomStr;
                }
                string saveFileName = logDatetimefnt + "_" + randomStr + "_" + requestRefNumber + "_request_from_sl.req"; 
                udrRoute(createMultiForwardingUDR("/request_from_sl_log", saveFileName, dspBa),"SaveReq");            
                debug("SL request socket saved to disk.");
                
                 //save request socket in text type to disk
                string nowDateStr; dateToString(nowDateStr, dateCreateNow(), "yyyyMMdd");
                string saveFileNameTxtType = logDatetimefnt + "_" + randomStr + "_" + requestRefNumber + "_request_from_sl.log";
                string logRequestSocketStr = baToStr(dspBa, "IBM-Thai");
                bytearray logRequestSocketBa; strToBA(logRequestSocketBa, logRequestSocketStr, "UTF-8"); 
                udrRoute(createMultiForwardingUDR("/request_from_sl_txt_log/" + nowDateStr, saveFileNameTxtType, logRequestSocketBa),"SaveReq");
                debug("request socket text from SL saved");
                
                /*
                //save filename to action log.
                debug("Start save action log");
                string actionLogDatetimeFull; dateToString(actionLogDatetimeFull, logDatetime, "yyyy-MM-dd HH:mm:ss_SSS");
                string actionLogDatetime; dateToString(actionLogDatetime, logDatetime, "yyyyMMdd");
                string actionLogFileName = actionLogDatetime + "_request_from_SL_log.log";
                string actionLogPath = "/home/mzadmin/mzdata/ncb_log/action_log/" + actionLogDatetime;
                
                list<string> fileList = fileListFiles(actionLogPath);
                boolean foundFile = false;
                string loadActionLogStr = "";
                if(fileList != null){
                    for(int i = 0 ; i < listSize(fileList); i++){
                        if(listGet(fileList,i) == actionLogFileName){
                            foundFile = true;                        
                        }
                    }
                    if(foundFile){
                        debug("File found. "  + actionLogFileName);
                        bytearray loadActionLog = readFileBinary(actionLogPath + "/" + actionLogFileName);
                        loadActionLogStr = baToStr(loadActionLog);
                        string deleteFileResult = fileDelete(actionLogPath + "/" + actionLogFileName);
                        if(deleteFileResult==null){
                            debug("delete origin file success.");
                        }else{
                            debug("delete origin file failure. " + deleteFileResult);
                        }
                    }
                }
                
                string actionMessage = loadActionLogStr + actionLogDatetimeFull + " RefNo: " + requestRefNumber + " SL request socket saved. (" + saveFileName + ") \r\n";
                bytearray contentBa; strToBA(contentBa, actionMessage);
                
                udrRoute(createMultiForwardingUDR("/action_log/" + actionLogDatetime, actionLogFileName, contentBa),"SaveReq");
                debug("Action log saved.");
                */
            }
            
        }

        /*if(instanceOf(input,PulseUDR)){
            debug("pulse");
            CM4876005_RQ_TI CM4876005 = udrCreate(CM4876005_RQ_TI);
            
            CM4876005.GFBANK = "33";
            CM4876005.GFCRDT = "20180824";
            CM4876005.GFSEQN = "00366";
            CM4876005.GFIPAD = "";
            CM4876005.GFFNAM = "LN040.XLS";
            CM4876005.GFFDNM = "/CMS/DCR/IN/20180623";
            CM4876005.GFHMNM = "FTP20180601";
            CM4876005.GFFTYP = "1";      

            udrRoute(CM4876005,"processPython");
        }*/
        
        if(instanceOf(input,EmailMatcher)){
            EmailMatcher email = (EmailMatcher) input;
            
            if(email.EMLSTATUS_STATUS=="Success"){
                socketResponse = createSocketMessageEmail(acqRefNo,email.tcpRequest);
            }else{
                socketResponse = createSocketMessageEmailRejected(acqRefNo,email.tcpRequest,email.EMLSTATUS_STATUS);
            }
            
            debug("REQUEST SOCKET");
            debug(baToStr(socketResponse, "IBM-Thai"));
            debug("END REQUEST SOCKET");
            //save log
            Logger log = udrCreate(Logger);
            log.uuid = acqRefNo;
            log.channelName = "CMS";
            log.serviceName = "Email";
            log.socketString = baToStr(socketResponse,"IBM-Thai");
            log.logType = "response";
            log.exContext = (string) mimGet("Workflow", "Execution Context");
            udrRoute(log,"saveReqLog");
            
            udrRoute(socketResponse,"responseTCP");
        }
        
        if(instanceOf(input,CM4876005_RS_TI)){
            CM4876005_RS_TI incoming = (CM4876005_RS_TI) input;
            debug("CM4876005");
            debug("");debug("");
            debug(incoming);
            
            CM4876006_TI req = udrCreate(CM4876006_TI);
            //set value
            req.GFBANK = incoming.GFBANK;
            req.GFCRDT = incoming.GFCRDT;
            req.GFSEQN = incoming.GFSEQN;
            req.GFFNAM = incoming.GFFNAM;
            req.GFFDNM = incoming.GFFDNM;
            req.GFHMNM = incoming.GFHMNM;
            req.WKTFNM = "txt";
            if (incoming.CMSFLG != "E"){
                req.WKFLAG = "Y";
            }else{
                req.WKFLAG = "N";
            }
            
            req.WKERRDC = incoming.ERRMSG;
            
            socketResponse = createContentMessageCM4876006(acqRefNo, req);
            
            debug("REQUEST SOCKET");
            debug(baToStr(socketResponse, "IBM-Thai"));
            debug("END REQUEST SOCKET");
            
            
            //debug("Set SL IP and Port");
            //set SL port
            /*RequestUDR tcpReq = udrCreate(RequestUDR);
            RemoteHostConfig remoteCon = udrCreate(RemoteHostConfig);
            remoteCon.host = "172.29.64.11";
            remoteCon.port = 18371;
            tcpReq.remoteHost = remoteCon;
            tcpReq.data = socketResponse;*/
            //debug("tcpip request");
            //debug(tcpReq);
            //debug("end request");
                    
            //send request result
            udrRoute(socketResponse,"toSocket");
            //save log
            Logger log = udrCreate(Logger);
            log.uuid = acqRefNo;
            log.channelName = "CMS";
            log.serviceName = "ConvertExcel";
            log.socketString = baToStr(socketResponse,"IBM-Thai");
            log.logType = "response";
            log.exContext = (string) mimGet("Workflow", "Execution Context");
            udrRoute(log,"saveReqLog");
            
            Matcher match = udrCreate(Matcher);
            match.uuid = acqRefNo;
            match.socketRequest = socketResponse;
            udrRoute(match, "toAggregation");
        }
    }
    catch(ExceptionDetails ex){
        debug("Exception: " + ex.message);    
    }
}]]></string>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Source code active" value="true"/>
                  <string name="Source code extref key" null="true"/>
                  <enum name="Source code fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Source code mod" value="false"/>
                  <boolean name="Source code pres" value="true"/>
                  <object name="UDR types">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <array classname="com.digitalroute.devkit.drudr.DRTypeInfo" name="Object Internal" size="4">
                              <storable name="0" storable-id="dr.UltraClientInfo" ver="1.0">
                                 <string name="FormatName" value="Ultra.UFL_CM4876005"/>
                                 <string name="TypeName" value="Ultra.UFL_CM4876005.CM4876005_RS_TI"/>
                              </storable>
                              <storable name="1" storable-id="dr.UltraClientInfo" ver="1.0">
                                 <string name="FormatName" value="CBS.UFL_DSP_Header"/>
                                 <string name="TypeName" value="CBS.UFL_DSP_Header.DSP_Header_TgIn"/>
                              </storable>
                              <storable name="2" storable-id="dr.UltraClientInfo" ver="1.0">
                                 <string name="FormatName" value="EMAIL.UFL_EmailMatcher"/>
                                 <string name="TypeName" value="EMAIL.UFL_EmailMatcher.EmailMatcher"/>
                              </storable>
                              <storable name="3" storable-id="dr.DRTypeInfo" ver="1.0">
                                 <string name="TypeName" value="PulseUDR"/>
                              </storable>
                           </array>
                        </object>
                     </storable>
                  </object>
                  <boolean name="UDR types active" value="true"/>
                  <string name="UDR types extref key" null="true"/>
                  <enum name="UDR types fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="UDR types mod" value="false"/>
                  <boolean name="UDR types pres" value="true"/>
               </storable>
            </storable>
         </array>
         <string name="Name" value="RequestHandler"/>
      </storable>
      <storable name="10" storable-id="dr.WfNode" ver="2.0">
         <string name="Classname" value="com.digitalroute.wfc.analysis.AnalysisRealtimeInsp"/>
         <array classname="com.digitalroute.wf.WfNodeConfig" name="Configuration" size="1">
            <storable name="0" storable-id="dr.WfNodeConfig" ver="1.0">
               <string name="Classname" value="com.digitalroute.wfc.analysis.AnalysisRealtimeInsp"/>
               <storable name="Data" storable-id="dr.StuffyMapperData" ver="1.0">
                  <object name="Source code">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <string name="Object Internal"><![CDATA[import ultra.CBS.UFL_DSP_Header;
import ultra.CBS.UFL_MBASE_Header;
import apl.Common.APL_Common_MBASE;
import apl.Common.APL_Common_Utilities;
import apl.CBS.APL_UtilityService_MBASE;
import ultra.TCPIP;

consume {
     
    if(instanceOf(input,PulseUDR)){
        debug("--- Pulse keep alive ---");
        
        int sizeOfContent = 0;
        string uniqKey = generateAcquireReferenceNumberV2();
        bytearray socketRequest = null;
        debug("UUID : " + uniqKey);
        socketRequest = generateHandShakeConnectionRequest(uniqKey);
        debug(baToStr(socketRequest, "IBM-Thai"));
        
        //set SL port
        /*RequestUDR tcpReq = udrCreate(RequestUDR);
        RemoteHostConfig remoteCon = udrCreate(RemoteHostConfig);
        remoteCon.host = "172.29.64.11";
        remoteCon.port = 1841;
        tcpReq.remoteHost = remoteCon;
        tcpReq.data = socketRequest;*/
        udrRoute(socketRequest);
    }
    
    debug("--- END ----------------------");
}]]></string>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Source code active" value="true"/>
                  <string name="Source code extref key" null="true"/>
                  <enum name="Source code fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Source code mod" value="false"/>
                  <boolean name="Source code pres" value="true"/>
                  <object name="UDR types">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <array classname="com.digitalroute.devkit.drudr.DRTypeInfo" name="Object Internal" size="1">
                              <storable name="0" storable-id="dr.DRTypeInfo" ver="1.0">
                                 <string name="TypeName" value="PulseUDR"/>
                              </storable>
                           </array>
                        </object>
                     </storable>
                  </object>
                  <boolean name="UDR types active" value="true"/>
                  <string name="UDR types extref key" null="true"/>
                  <enum name="UDR types fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="UDR types mod" value="false"/>
                  <boolean name="UDR types pres" value="true"/>
               </storable>
            </storable>
         </array>
         <string name="Name" value="CreateKeepAliveSocket"/>
      </storable>
      <storable name="11" storable-id="dr.WfNode" ver="2.0">
         <string name="Classname"><![CDATA[com.digitalroute.mz.pulse.agent.PulseCollectorAgentInspRT]]></string>
         <array classname="com.digitalroute.wf.WfNodeConfig" name="Configuration" size="1">
            <storable name="0" storable-id="dr.WfNodeConfig" ver="1.0">
               <string name="Classname"><![CDATA[com.digitalroute.mz.pulse.agent.PulseCollectorAgentInspRT]]></string>
               <storable name="Data" storable-id="dr.PulseData" ver="7.0">
                  <object name="Center Value">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <double name="Object Internal" value="1.0"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Center Value active" value="false"/>
                  <string name="Center Value extref key" null="true"/>
                  <enum name="Center Value fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Center Value mod" value="false"/>
                  <boolean name="Center Value pres" value="true"/>
                  <object name="Data">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <string name="Object Internal" value=""/>
                        </object>
                     </storable>
                  </object>
                  <object name="Data Entered">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <boolean name="Object Internal" value="true"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Data Entered active" value="true"/>
                  <string name="Data Entered extref key" null="true"/>
                  <enum name="Data Entered fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Data Entered mod" value="false"/>
                  <boolean name="Data Entered pres" value="true"/>
                  <object name="Data Size">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <int name="Object Internal" value="1"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Data Size active" value="false"/>
                  <string name="Data Size extref key" null="true"/>
                  <enum name="Data Size fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Data Size mod" value="false"/>
                  <boolean name="Data Size pres" value="true"/>
                  <object name="Data Unit">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <enum name="Object Internal" storable-id="dr.PulseDataSizeUnit" value="Bytes"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Data Unit active" value="false"/>
                  <string name="Data Unit extref key" null="true"/>
                  <enum name="Data Unit fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Data Unit mod" value="false"/>
                  <boolean name="Data Unit pres" value="true"/>
                  <boolean name="Data active" value="true"/>
                  <string name="Data extref key" null="true"/>
                  <enum name="Data fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Data mod" value="false"/>
                  <boolean name="Data pres" value="true"/>
                  <object name="Fixed Interval">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <long name="Object Internal" value="45"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Fixed Interval active" value="true"/>
                  <string name="Fixed Interval extref key" null="true"/>
                  <enum name="Fixed Interval fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Fixed Interval mod" value="false"/>
                  <boolean name="Fixed Interval pres" value="true"/>
                  <object name="Interval Type">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <string name="Object Internal" value="Fixed"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Interval Type active" value="true"/>
                  <string name="Interval Type extref key" null="true"/>
                  <enum name="Interval Type fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Interval Type mod" value="false"/>
                  <boolean name="Interval Type pres" value="true"/>
                  <object name="Poisson Rate">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <double name="Object Internal" value="1.0"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Poisson Rate active" value="false"/>
                  <string name="Poisson Rate extref key" null="true"/>
                  <enum name="Poisson Rate fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Poisson Rate mod" value="false"/>
                  <boolean name="Poisson Rate pres" value="true"/>
                  <object name="Random Order">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <boolean name="Object Internal" value="false"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Random Order active" value="true"/>
                  <string name="Random Order extref key" null="true"/>
                  <enum name="Random Order fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Random Order mod" value="false"/>
                  <boolean name="Random Order pres" value="true"/>
                  <object name="Random data">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <boolean name="Object Internal" value="false"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Random data active" value="true"/>
                  <string name="Random data extref key" null="true"/>
                  <enum name="Random data fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Random data mod" value="false"/>
                  <boolean name="Random data pres" value="true"/>
                  <object name="Range End">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <int name="Object Internal" value="10"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Range End active" value="false"/>
                  <string name="Range End extref key" null="true"/>
                  <enum name="Range End fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Range End mod" value="false"/>
                  <boolean name="Range End pres" value="true"/>
                  <object name="Range Start">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <int name="Object Internal" value="0"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Range Start active" value="false"/>
                  <string name="Range Start extref key" null="true"/>
                  <enum name="Range Start fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Range Start mod" value="false"/>
                  <boolean name="Range Start pres" value="true"/>
                  <object name="Rate Value Value">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <long name="Object Internal" value="1"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Rate Value Value active" value="false"/>
                  <string name="Rate Value Value extref key" null="true"/>
                  <enum name="Rate Value Value fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Rate Value Value mod" value="false"/>
                  <boolean name="Rate Value Value pres" value="true"/>
                  <object name="Sequential Order">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <boolean name="Object Internal" value="true"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Sequential Order active" value="true"/>
                  <string name="Sequential Order extref key" null="true"/>
                  <enum name="Sequential Order fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Sequential Order mod" value="false"/>
                  <boolean name="Sequential Order pres" value="true"/>
                  <object name="Sequential Range">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <boolean name="Object Internal" value="false"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Sequential Range active" value="true"/>
                  <string name="Sequential Range extref key" null="true"/>
                  <enum name="Sequential Range fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Sequential Range mod" value="false"/>
                  <boolean name="Sequential Range pres" value="true"/>
                  <object name="Start Value">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <long name="Object Internal" value="1"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Start Value active" value="false"/>
                  <string name="Start Value extref key" null="true"/>
                  <enum name="Start Value fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Start Value mod" value="false"/>
                  <boolean name="Start Value pres" value="true"/>
                  <object name="Stop Value">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <long name="Object Internal" value="10"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Stop Value active" value="false"/>
                  <string name="Stop Value extref key" null="true"/>
                  <enum name="Stop Value fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Stop Value mod" value="false"/>
                  <boolean name="Stop Value pres" value="true"/>
                  <object name="Time Unit">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <enum name="Object Internal" storable-id="dr.PulseTimeUnit" value="MINUTES"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Time Unit active" value="true"/>
                  <string name="Time Unit extref key" null="true"/>
                  <enum name="Time Unit fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Time Unit mod" value="false"/>
                  <boolean name="Time Unit pres" value="true"/>
                  <object name="Width Value">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <double name="Object Internal" value="1.0"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Width Value active" value="false"/>
                  <string name="Width Value extref key" null="true"/>
                  <enum name="Width Value fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Width Value mod" value="false"/>
                  <boolean name="Width Value pres" value="true"/>
               </storable>
            </storable>
         </array>
         <string name="Name" value="Pulse_KeepAlive"/>
      </storable>
      <storable name="12" storable-id="dr.WfNode" ver="2.0">
         <string name="Classname" value="com.digitalroute.wfc.ws.WSForwarderInsp"/>
         <array classname="com.digitalroute.wf.WfNodeConfig" name="Configuration" size="1">
            <storable name="0" storable-id="dr.WfNodeConfig" ver="1.0">
               <string name="Classname" value="com.digitalroute.wfc.ws.WSForwarderInsp"/>
               <storable name="Data" storable-id="dr.WSForwarderData" ver="6.3">
                  <object name="cdataSupport">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <boolean name="Object Internal" value="false"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="cdataSupport active" value="true"/>
                  <string name="cdataSupport extref key" null="true"/>
                  <enum name="cdataSupport fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="cdataSupport mod" value="false"/>
                  <boolean name="cdataSupport pres" value="true"/>
                  <object name="enableBasicAuthentication">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <boolean name="Object Internal" value="false"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="enableBasicAuthentication active" value="true"/>
                  <string name="enableBasicAuthentication extref key" null="true"/>
                  <enum name="enableBasicAuthentication fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="enableBasicAuthentication mod" value="false"/>
                  <boolean name="enableBasicAuthentication pres" value="true"/>
                  <object name="httpPassword">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <password name="Object Internal" value="DR_DEFAULT_KEY-017BB0B8FB061C1876D43DD75468AA40"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="httpPassword active" value="false"/>
                  <string name="httpPassword extref key" null="true"/>
                  <enum name="httpPassword fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="httpPassword mod" value="false"/>
                  <boolean name="httpPassword pres" value="true"/>
                  <object name="httpUsername">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <string name="Object Internal" value=""/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="httpUsername active" value="false"/>
                  <string name="httpUsername extref key" null="true"/>
                  <enum name="httpUsername fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="httpUsername mod" value="false"/>
                  <boolean name="httpUsername pres" value="true"/>
                  <object name="http_address">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <string name="Object Internal"><![CDATA[https://ghbccmspr01.it.ghbank.co.th/ccms-ws/services/CcmsService]]></string>
                        </object>
                     </storable>
                  </object>
                  <boolean name="http_address active" value="true"/>
                  <string name="http_address extref key" null="true"/>
                  <enum name="http_address fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="http_address mod" value="false"/>
                  <boolean name="http_address pres" value="true"/>
                  <object name="profile">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <storable name="Object Internal" storable-id="dr.DRConfiguration" ver="1.0">
                              <string name="Folder" value="CCMS"/>
                              <string name="Key" value="MZ1520533806266"/>
                              <string name="Name" value="PRF_WS_CCMSService"/>
                              <string name="Type" value="WS Profile"/>
                           </storable>
                        </object>
                     </storable>
                  </object>
                  <boolean name="profile active" value="true"/>
                  <string name="profile extref key" null="true"/>
                  <enum name="profile fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="profile mod" value="false"/>
                  <boolean name="profile pres" value="true"/>
                  <object name="serverTimeout">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <int name="Object Internal" value="22000"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="serverTimeout active" value="true"/>
                  <string name="serverTimeout extref key" null="true"/>
                  <enum name="serverTimeout fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="serverTimeout mod" value="false"/>
                  <boolean name="serverTimeout pres" value="true"/>
               </storable>
            </storable>
         </array>
         <string name="Name" value="CCMSService_WSDL"/>
      </storable>
      <storable name="13" storable-id="dr.WfNode" ver="2.0">
         <string name="Classname" value="com.digitalroute.wfc.analysis.AnalysisRealtimeInsp"/>
         <array classname="com.digitalroute.wf.WfNodeConfig" name="Configuration" size="1">
            <storable name="0" storable-id="dr.WfNodeConfig" ver="1.0">
               <string name="Classname" value="com.digitalroute.wfc.analysis.AnalysisRealtimeInsp"/>
               <storable name="Data" storable-id="dr.StuffyMapperData" ver="1.0">
                  <object name="Source code">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <string name="Object Internal"><![CDATA[import ultra.ws.CCMS.PRF_WS_CCMSService.cycles;
import ultra.ws.CCMS.PRF_WS_CCMSService.tns;
import ultra.CBS.UFL_Aggregation;

consume {
    //debug(input);
    if(instanceOf(input, AbstractCcmsServiceWSCycle)){
        debug("=== CCMS Webservice ===");
        debug((AbstractCcmsServiceWSCycle) input);
        debug("=== End CCMS Webservice ===");
        
        AbstractCcmsServiceWSCycle resp = (AbstractCcmsServiceWSCycle) input;
        
        Matcher match = udrCreate(Matcher);
        match.uuid = (string) resp.context;
        match.soapResponse = resp;
        udrRoute(match);    
    }else if(instanceOf(input, AbstractEscrtServiceWSCycle)){
        debug("=== Ilegal outbound Webservice ===");
        debug((AbstractEscrtServiceWSCycle) input);
        debug("=== End Ilegal outbound Webservice ===");
        
        AbstractEscrtServiceWSCycle resp = (AbstractEscrtServiceWSCycle) input;
        Matcher match = udrCreate(Matcher);
        match.uuid = (string) resp.context;
        match.soapResponse = resp;
        udrRoute(match);    
    }else if(instanceOf(input, AbstractAisServiceWSCycle)){
        debug("=== SMS Webservice ===");
        debug((AbstractAisServiceWSCycle) input);
        debug("=== End SMS Webservice ===");
        
        AbstractAisServiceWSCycle resp = (AbstractAisServiceWSCycle) input;
        
        Matcher match = udrCreate(Matcher);
        match.uuid = (string) resp.context;
        match.soapResponse = resp;
        udrRoute(match);    
    }else{
        debug("=== Timeout CCMS Webservice ===");
        debug(input);
        debug("=== End timeout CCMS Webservice ===");
    }
}]]></string>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Source code active" value="true"/>
                  <string name="Source code extref key" null="true"/>
                  <enum name="Source code fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Source code mod" value="false"/>
                  <boolean name="Source code pres" value="true"/>
                  <object name="UDR types">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <array classname="com.digitalroute.devkit.drudr.DRTypeInfo" name="Object Internal" size="3">
                              <storable name="0" storable-id="dr.DRTypeInfo" ver="1.0">
                                 <string name="TypeName"><![CDATA[ws.SMS.PRF_WS_SMSService.cycles.AbstractAisServiceWSCycle]]></string>
                              </storable>
                              <storable name="1" storable-id="dr.DRTypeInfo" ver="1.0">
                                 <string name="TypeName"><![CDATA[ws.CCMS.PRF_WS_CCMSService.cycles.AbstractCcmsServiceWSCycle]]></string>
                              </storable>
                              <storable name="2" storable-id="dr.DRTypeInfo" ver="1.0">
                                 <string name="TypeName"><![CDATA[ws.LEG.PRF_WS_EscrtService.cycles.AbstractEscrtServiceWSCycle]]></string>
                              </storable>
                           </array>
                        </object>
                     </storable>
                  </object>
                  <boolean name="UDR types active" value="true"/>
                  <string name="UDR types extref key" null="true"/>
                  <enum name="UDR types fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="UDR types mod" value="false"/>
                  <boolean name="UDR types pres" value="true"/>
               </storable>
            </storable>
         </array>
         <string name="Name" value="packetSOAPWating"/>
      </storable>
      <storable name="14" storable-id="dr.WfNode" ver="2.0">
         <string name="Classname"><![CDATA[com.digitalroute.wfc.aggregation.AggregationRealtimeInsp]]></string>
         <array classname="com.digitalroute.wf.WfNodeConfig" name="Configuration" size="1">
            <storable name="0" storable-id="dr.WfNodeConfig" ver="1.0">
               <string name="Classname"><![CDATA[com.digitalroute.wfc.aggregation.AggregationRealtimeInsp]]></string>
               <storable name="Data" storable-id="dr.AggregationConfig" ver="10.6">
                  <object name="Commit Count">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <int name="Object Internal" value="1000"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Commit Count active" value="true"/>
                  <string name="Commit Count extref key" null="true"/>
                  <enum name="Commit Count fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Commit Count mod" value="false"/>
                  <boolean name="Commit Count pres" value="true"/>
                  <object name="Commit Timeout">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <int name="Object Internal" value="60"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Commit Timeout active" value="true"/>
                  <string name="Commit Timeout extref key" null="true"/>
                  <enum name="Commit Timeout fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Commit Timeout mod" value="false"/>
                  <boolean name="Commit Timeout pres" value="true"/>
                  <object name="Default Timeout">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <int name="Object Internal" value="60"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Default Timeout active" value="true"/>
                  <string name="Default Timeout extref key" null="true"/>
                  <enum name="Default Timeout fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Default Timeout mod" value="false"/>
                  <boolean name="Default Timeout pres" value="true"/>
                  <object name="Defragmentation">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <enum name="Object Internal" storable-id="dr.DefragType" value="NONE"/>
                        </object>
                     </storable>
                  </object>
                  <object name="Defragmentation After Each Batch Time Limit">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <int name="Object Internal" value="5"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Defragmentation After Each Batch Time Limit active" value="false"/>
                  <string name="Defragmentation After Each Batch Time Limit extref key" null="true"/>
                  <enum name="Defragmentation After Each Batch Time Limit fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Defragmentation After Each Batch Time Limit mod" value="false"/>
                  <boolean name="Defragmentation After Each Batch Time Limit pres" value="true"/>
                  <object name="Defragmentation After Number of Batches">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <int name="Object Internal" value="1"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Defragmentation After Number of Batches active" value="false"/>
                  <string name="Defragmentation After Number of Batches extref key" null="true"/>
                  <enum name="Defragmentation After Number of Batches fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Defragmentation After Number of Batches mod" value="false"/>
                  <boolean name="Defragmentation After Number of Batches pres" value="true"/>
                  <object name="Defragmentation File Age Limit">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <int name="Object Internal" value="5"/>
                        </object>
                     </storable>
                  </object>
                  <object name="Defragmentation File Age Limit Time Unit">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <string name="Object Internal" value="MINUTES"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Defragmentation File Age Limit Time Unit active" value="false"/>
                  <string name="Defragmentation File Age Limit Time Unit extref key" null="true"/>
                  <enum name="Defragmentation File Age Limit Time Unit fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Defragmentation File Age Limit Time Unit mod" value="false"/>
                  <boolean name="Defragmentation File Age Limit Time Unit pres" value="true"/>
                  <boolean name="Defragmentation File Age Limit active" value="false"/>
                  <string name="Defragmentation File Age Limit extref key" null="true"/>
                  <enum name="Defragmentation File Age Limit fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Defragmentation File Age Limit mod" value="false"/>
                  <boolean name="Defragmentation File Age Limit pres" value="true"/>
                  <boolean name="Defragmentation active" value="false"/>
                  <string name="Defragmentation extref key" null="true"/>
                  <enum name="Defragmentation fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Defragmentation mod" value="false"/>
                  <boolean name="Defragmentation pres" value="true"/>
                  <object name="Disable Timeout">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <boolean name="Object Internal" value="false"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Disable Timeout active" value="true"/>
                  <string name="Disable Timeout extref key" null="true"/>
                  <enum name="Disable Timeout fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Disable Timeout mod" value="false"/>
                  <boolean name="Disable Timeout pres" value="true"/>
                  <object name="Interval Timeout">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <int name="Object Internal" value="60"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Interval Timeout active" value="true"/>
                  <string name="Interval Timeout extref key" null="true"/>
                  <enum name="Interval Timeout fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Interval Timeout mod" value="false"/>
                  <boolean name="Interval Timeout pres" value="true"/>
                  <object name="Main script">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <string name="Object Internal"><![CDATA[sessionInit {
    session.match = udrCreate(Matcher);    
}

consume {
    debug(input.uuid);
    if (input.tcpRequest!=null) {
        debug("Socket Request");
        session.match.tcpRequest = input.tcpRequest;
    }
    
    if (input.soapResponse!=null) {
        debug("SOAP Response");
        session.match.soapResponse = input.soapResponse;
    }
    
    /*if (input.inquiryStockCardRes!=null){
        debug("InquiryStockCard Response");
        session.match.inquiryStockCardRes = input.inquiryStockCardRes;
    }*/
    
    if (session.match.soapResponse!=null && session.match.tcpRequest!=null) {
        //if(session.match.inquiryStockCardRes!=null){
        debug("Matched");
        udrRoute(session.match);
        sessionRemove(session);
        //} 
    } else {
        debug("Unmatched");
    }
}

timeout {
    debug("Session is timeout. Removing session");
    sessionRemove(session);
}]]></string>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Main script active" value="true"/>
                  <string name="Main script extref key" null="true"/>
                  <enum name="Main script fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Main script mod" value="false"/>
                  <boolean name="Main script pres" value="true"/>
                  <object name="No Match">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <int name="Object Internal" value="0"/>
                        </object>
                     </storable>
                  </object>
                  <object name="No Match Router">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <string name="Object Internal" value="response"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="No Match Router active" value="true"/>
                  <string name="No Match Router extref key" null="true"/>
                  <enum name="No Match Router fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="No Match Router mod" value="false"/>
                  <boolean name="No Match Router pres" value="true"/>
                  <boolean name="No Match active" value="true"/>
                  <string name="No Match extref key" null="true"/>
                  <enum name="No Match fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="No Match mod" value="false"/>
                  <boolean name="No Match pres" value="true"/>
                  <object name="No Storage Behaviour">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <int name="Object Internal" value="0"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="No Storage Behaviour active" value="true"/>
                  <string name="No Storage Behaviour extref key" null="true"/>
                  <enum name="No Storage Behaviour fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="No Storage Behaviour mod" value="false"/>
                  <boolean name="No Storage Behaviour pres" value="true"/>
                  <object name="No Storage Router">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <null name="Object Internal"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="No Storage Router active" value="true"/>
                  <string name="No Storage Router extref key" null="true"/>
                  <enum name="No Storage Router fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="No Storage Router mod" value="false"/>
                  <boolean name="No Storage Router pres" value="true"/>
                  <object name="Null Timeout">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <int name="Object Internal" value="2"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Null Timeout active" value="true"/>
                  <string name="Null Timeout extref key" null="true"/>
                  <enum name="Null Timeout fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Null Timeout mod" value="false"/>
                  <boolean name="Null Timeout pres" value="true"/>
                  <object name="Profile Key">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <storable name="Object Internal" storable-id="dr.DRConfiguration" ver="1.0">
                              <string name="Folder" value="CCMS"/>
                              <string name="Key" value="MZ1528971514969"/>
                              <string name="Name" value="PRF_Aggregation_CCMSService"/>
                              <string name="Type" value="Aggregation Profile"/>
                           </storable>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Profile Key active" value="true"/>
                  <string name="Profile Key extref key" null="true"/>
                  <enum name="Profile Key fit" storable-id="dr.DRFieldInstanceType" value="DEFAULT"/>
                  <boolean name="Profile Key mod" value="false"/>
                  <boolean name="Profile Key pres" value="true"/>
                  <object name="Read Only">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <boolean name="Object Internal" value="false"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Read Only active" value="true"/>
                  <string name="Read Only extref key" null="true"/>
                  <enum name="Read Only fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Read Only mod" value="false"/>
                  <boolean name="Read Only pres" value="true"/>
               </storable>
            </storable>
         </array>
         <string name="Name" value="matchCCMSReqToRes"/>
      </storable>
      <storable name="15" storable-id="dr.WfNode" ver="2.0">
         <string name="Classname" value="com.digitalroute.wfc.analysis.AnalysisRealtimeInsp"/>
         <array classname="com.digitalroute.wf.WfNodeConfig" name="Configuration" size="1">
            <storable name="0" storable-id="dr.WfNodeConfig" ver="1.0">
               <string name="Classname" value="com.digitalroute.wfc.analysis.AnalysisRealtimeInsp"/>
               <storable name="Data" storable-id="dr.StuffyMapperData" ver="1.0">
                  <object name="Source code">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <string name="Object Internal"><![CDATA[//ultra
import ultra.ws.CCMS.PRF_WS_CCMSService.cycles;
import ultra.ws.CCMS.PRF_WS_CCMSService.tns;
import ultra.ws.LEG.PRF_WS_EscrtService.cycles;
import ultra.ws.LEG.PRF_WS_EscrtService.tns;
import ultra.CBS.UFL_DSP_Header;
import ultra.Ultra.UFL_SYSLOG;

//add by: Prapas Ngootip [18/02/2019]
import ultra.ws.SMS.PRF_WS_SMSService.cycles;
import ultra.ws.SMS.PRF_WS_SMSService.tns;

//apl
import apl.CCMS.APL_CCMSService;
import apl.LEG.APL_EscrtService;
import apl.SMS.APL_SMSService;

consume {
    bytearray socketRequest = null;
    string responseStatus = "";
    
    try{
        if(instanceOf(input.soapResponse, WSCycle_inquiryStockCard)){
             WSCycle_inquiryStockCard resp = (WSCycle_inquiryStockCard) input.soapResponse;
             
             if(resp.response.ResponseCode == "0000"){
                responseStatus = "AA";
                socketRequest = createResponseMessageDD20001_InquiryStockCard(input.tcpRequest, resp); 
             }else{
                responseStatus = "AB";
                socketRequest = createResponseMessageRejected(input.tcpRequest,input.soapResponse);
             }
             
             udrRoute(socketRequest,"toResponseTCP");
             
             //save log
             Logger log = udrCreate(Logger);
             log.uuid = input.uuid;
             log.channelName = "CCMS";
             log.serviceName = "inquiryStockCard";
             log.xmlString = (string) resp;
             log.socketString = baToStr(socketRequest,"IBM-Thai");
             log.logType = "response";
             log.responseStatus = responseStatus;
             //get execution context
             log.exContext = (string) mimGet("Workflow", "Execution Context");
             udrRoute(log,"saveResLog");    
        }
        
        if(instanceOf(input.soapResponse, WSCycle_addInstantCard)){
             WSCycle_addInstantCard resp = (WSCycle_addInstantCard) input.soapResponse;
             
             if(resp.response.ResponseCode == "0000" || resp.response.ResponseCode == "2015"){
                socketRequest = createResponseMessageDD22001_AddInstantCard(input.tcpRequest, resp);
             }else{
                socketRequest = createResponseMessageRejected(input.tcpRequest,input.soapResponse);
             }
             
             //socketRequest = createResponseMessageDD22001_AddInstantCard(input.tcpRequest, resp); 
             udrRoute(socketRequest,"toResponseTCP");
             
             //save log
             Logger log = udrCreate(Logger);
             log.uuid = input.uuid;
             log.channelName = "CCMS";
             log.serviceName = "addInstantCard";
             log.xmlString = (string) resp;
             log.socketString = baToStr(socketRequest,"IBM-Thai");
             log.logType = "response";
             log.responseStatus = responseStatus;
             //get execution context
             log.exContext = (string) mimGet("Workflow", "Execution Context");
             udrRoute(log,"saveResLog");  
        }
        
        if(instanceOf(input.soapResponse, WSCycle_inquiryCard)){
             WSCycle_inquiryCard resp = (WSCycle_inquiryCard) input.soapResponse;
             
             if(resp.response.ResponseCode == "0000"){
                socketRequest = createResponseMessageDD20001_InquiryCard(input.tcpRequest, resp); 
             }else{
                socketRequest = createResponseMessageRejected(input.tcpRequest,input.soapResponse);
             }

             udrRoute(socketRequest,"toResponseTCP");  
             
             //save log
             Logger log = udrCreate(Logger);
             log.uuid = input.uuid;
             log.channelName = "CCMS";
             log.serviceName = "inquiryCard";
             log.xmlString = (string) resp;
             log.socketString = baToStr(socketRequest,"IBM-Thai");
             log.logType = "response";
             log.responseStatus = responseStatus;
             //get execution context
             log.exContext = (string) mimGet("Workflow", "Execution Context");
             udrRoute(log,"saveResLog");    
        }
        
        if(instanceOf(input.soapResponse, WSCycle_replaceCard)){
             WSCycle_replaceCard resp = (WSCycle_replaceCard) input.soapResponse;
             
             if(resp.response.ResponseCode == "0000"){
                socketRequest = createResponseMessageDD22002_ReplaceCard(input.tcpRequest, resp); 
             }else{
                socketRequest = createResponseMessageRejected(input.tcpRequest,input.soapResponse);
             }

             udrRoute(socketRequest,"toResponseTCP");
             
             //save log
             Logger log = udrCreate(Logger);
             log.uuid = input.uuid;
             log.channelName = "CCMS";
             log.serviceName = "replaceCard";
             log.xmlString = (string) resp;
             log.socketString = baToStr(socketRequest,"IBM-Thai");
             log.logType = "response";
             log.responseStatus = responseStatus;
             //get execution context
             log.exContext = (string) mimGet("Workflow", "Execution Context");
             udrRoute(log,"saveResLog");
        }
        
        if(instanceOf(input.soapResponse, WSCycle_updateRelatedAccounts)){
             WSCycle_updateRelatedAccounts resp = (WSCycle_updateRelatedAccounts) input.soapResponse;
             
             if(resp.response.ResponseCode == "0000"){
                socketRequest = createResponseMessageDD22003_UpdateRelatedAccounts(input.tcpRequest, resp);
             }else{
                socketRequest = createResponseMessageRejected(input.tcpRequest,input.soapResponse);
             }

             udrRoute(socketRequest,"toResponseTCP");
             
             //save log
             Logger log = udrCreate(Logger);
             log.uuid = input.uuid;
             log.channelName = "CCMS";
             log.serviceName = "updateRelatedAccounts";
             log.xmlString = (string) resp;
             log.socketString = baToStr(socketRequest,"IBM-Thai");
             log.logType = "response";
             log.responseStatus = responseStatus;
             //get execution context
             log.exContext = (string) mimGet("Workflow", "Execution Context");
             udrRoute(log,"saveResLog");
        }
        if(instanceOf(input.soapResponse, WSCycle_input)){
             WSCycle_input resp = (WSCycle_input) input.soapResponse;
             debug("=========WSDL response=========");
             debug(resp);
             debug("=========End WSDL response=========");
             
             if(resp.response._return.success == true){
                socketRequest = createResponseLN87322_Success(input.tcpRequest, resp);
             }else{
                socketRequest = createResponseLN87322_Rejected(input.tcpRequest,resp.response._return.responseMessage);
             }

             udrRoute(socketRequest,"toResponseTCP");
             
             //save log
             Logger log = udrCreate(Logger);
             log.uuid = input.uuid;
             log.channelName = "LEG";
             log.serviceName = "UpdateCStatus";
             log.xmlString = (string) resp;
             log.socketString = baToStr(socketRequest,"IBM-Thai");
             log.logType = "response";
             log.responseStatus = responseStatus;
             //get execution context
             log.exContext = (string) mimGet("Workflow", "Execution Context");
             udrRoute(log,"saveResLog");
            
        }
        if(instanceOf(input.soapResponse, WSCycle_sendSMS)){
             WSCycle_sendSMS resp = (WSCycle_sendSMS) input.soapResponse;
             
             if(resp.response.statusCode == "0000"){
                socketRequest = createSocketMessageAXC804000_SendSMS(input.tcpRequest, resp);
             }else{
                socketRequest = createSocketMessageSMSRejected(input.tcpRequest,resp.response.statusMessage);
             }

             udrRoute(socketRequest,"toResponseTCP");
             
             //save log
             Logger log = udrCreate(Logger);
             log.uuid = input.uuid;
             log.channelName = "SMS";
             log.serviceName = "sendSMS";
             log.xmlString = (string) resp;
             log.socketString = baToStr(socketRequest,"IBM-Thai");
             log.logType = "response";
             log.responseStatus = responseStatus;
             log.exContext = (string) mimGet("Workflow", "Execution Context");
             udrRoute(log,"saveResLog");
        }
        debug("Request Socket");
        debug(baToStr(socketRequest, "IBM-Thai"));
        debug("End Request Socket");
    }
    catch(ExceptionDetails ex){
        debug("Exception: " + ex.message);
    }
}]]></string>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Source code active" value="true"/>
                  <string name="Source code extref key" null="true"/>
                  <enum name="Source code fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Source code mod" value="false"/>
                  <boolean name="Source code pres" value="true"/>
                  <object name="UDR types">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <array classname="com.digitalroute.devkit.drudr.DRTypeInfo" name="Object Internal" size="1">
                              <storable name="0" storable-id="dr.UltraClientInfo" ver="1.0">
                                 <string name="FormatName" value="CBS.UFL_Aggregation"/>
                                 <string name="TypeName" value="CBS.UFL_Aggregation.Matcher"/>
                              </storable>
                           </array>
                        </object>
                     </storable>
                  </object>
                  <boolean name="UDR types active" value="true"/>
                  <string name="UDR types extref key" null="true"/>
                  <enum name="UDR types fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="UDR types mod" value="false"/>
                  <boolean name="UDR types pres" value="true"/>
               </storable>
            </storable>
         </array>
         <string name="Name" value="responseSocket"/>
      </storable>
      <storable name="16" storable-id="dr.WfNode" ver="2.0">
         <string name="Classname"><![CDATA[com.digitalroute.pythonagents.agent.PythonRealtimeProcessingAgentInsp]]></string>
         <array classname="com.digitalroute.wf.WfNodeConfig" name="Configuration" size="1">
            <storable name="0" storable-id="dr.WfNodeConfig" ver="1.0">
               <string name="Classname"><![CDATA[com.digitalroute.pythonagents.agent.PythonRealtimeProcessingAgentInsp]]></string>
               <storable name="Data" storable-id="dr.PythonAgentData" ver="8.1">
                  <object name="Input Types">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <array classname="com.digitalroute.devkit.drudr.DRTypeInfo" name="Object Internal" size="1">
                              <storable name="0" storable-id="dr.UltraClientInfo" ver="1.0">
                                 <string name="FormatName" value="Ultra.UFL_SYSLOG"/>
                                 <string name="TypeName" value="Ultra.UFL_SYSLOG.Logger"/>
                              </storable>
                           </array>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Input Types active" value="true"/>
                  <string name="Input Types extref key" null="true"/>
                  <enum name="Input Types fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Input Types mod" value="false"/>
                  <boolean name="Input Types pres" value="true"/>
                  <object name="Interpreter">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <storable name="Object Internal" storable-id="dr.DRConfiguration" ver="1.0">
                              <string name="Folder" value="CM"/>
                              <string name="Key" value="MZ1523333536387"/>
                              <string name="Name" value="PRF_Python"/>
                              <string name="Type" value="Python Interpreter Profile"/>
                           </storable>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Interpreter active" value="true"/>
                  <string name="Interpreter extref key" null="true"/>
                  <enum name="Interpreter fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Interpreter mod" value="false"/>
                  <boolean name="Interpreter pres" value="true"/>
                  <object name="MIMs">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <array classname="com.digitalroute.devkit.wf.DRMIMEntry" name="Object Internal" size="0"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="MIMs active" value="true"/>
                  <string name="MIMs extref key" null="true"/>
                  <enum name="MIMs fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="MIMs mod" value="false"/>
                  <boolean name="MIMs pres" value="true"/>
                  <object name="Output Types">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <array classname="com.digitalroute.pythonagents.OutputTypeInfo" name="Object Internal" size="0"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Output Types active" value="true"/>
                  <string name="Output Types extref key" null="true"/>
                  <enum name="Output Types fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Output Types mod" value="false"/>
                  <boolean name="Output Types pres" value="true"/>
                  <object name="Source Code">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <string name="Object Internal"><![CDATA[from python.Common.PYM_SYS_Logger import *

def consume(input):
    log = input
    reqID = str(log.uuid)
    logType = str(log.logType)
    xmlString = str(log.xmlString)
    socketString = str(log.socketString)
    serviceName = str(log.serviceName)
    responseStatus = str(log.responseStatus)
    channelName = str(log.channelName)
    restString = ''
    exContext = str(log.exContext)
    
    writeLogger('Outbound', reqID, logType, xmlString, socketString, serviceName, responseStatus, channelName, restString,exContext)
    #pass
]]></string>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Source Code active" value="true"/>
                  <string name="Source Code extref key" null="true"/>
                  <enum name="Source Code fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Source Code mod" value="false"/>
                  <boolean name="Source Code pres" value="true"/>
               </storable>
            </storable>
         </array>
         <string name="Name" value="SaveLog"/>
      </storable>
      <storable name="17" storable-id="dr.WfNode" ver="2.0">
         <string name="Classname" value="com.digitalroute.wfc.ws.WSForwarderInsp"/>
         <array classname="com.digitalroute.wf.WfNodeConfig" name="Configuration" size="1">
            <storable name="0" storable-id="dr.WfNodeConfig" ver="1.0">
               <string name="Classname" value="com.digitalroute.wfc.ws.WSForwarderInsp"/>
               <storable name="Data" storable-id="dr.WSForwarderData" ver="6.3">
                  <object name="cdataSupport">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <boolean name="Object Internal" value="false"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="cdataSupport active" value="true"/>
                  <string name="cdataSupport extref key" null="true"/>
                  <enum name="cdataSupport fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="cdataSupport mod" value="false"/>
                  <boolean name="cdataSupport pres" value="true"/>
                  <object name="enableBasicAuthentication">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <boolean name="Object Internal" value="false"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="enableBasicAuthentication active" value="true"/>
                  <string name="enableBasicAuthentication extref key" null="true"/>
                  <enum name="enableBasicAuthentication fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="enableBasicAuthentication mod" value="false"/>
                  <boolean name="enableBasicAuthentication pres" value="true"/>
                  <object name="httpPassword">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <password name="Object Internal" value="DR_DEFAULT_KEY-017BB0B8FB061C1876D43DD75468AA40"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="httpPassword active" value="false"/>
                  <string name="httpPassword extref key" null="true"/>
                  <enum name="httpPassword fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="httpPassword mod" value="false"/>
                  <boolean name="httpPassword pres" value="true"/>
                  <object name="httpUsername">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <string name="Object Internal" value=""/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="httpUsername active" value="false"/>
                  <string name="httpUsername extref key" null="true"/>
                  <enum name="httpUsername fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="httpUsername mod" value="false"/>
                  <boolean name="httpUsername pres" value="true"/>
                  <object name="http_address">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <string name="Object Internal" value="http://bds.ghb.co.th/legalservice/EscrtService"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="http_address active" value="true"/>
                  <string name="http_address extref key" null="true"/>
                  <enum name="http_address fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="http_address mod" value="false"/>
                  <boolean name="http_address pres" value="true"/>
                  <object name="profile">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <storable name="Object Internal" storable-id="dr.DRConfiguration" ver="1.0">
                              <string name="Folder" value="LEG"/>
                              <string name="Key" value="MZ1537348993403"/>
                              <string name="Name" value="PRF_WS_EscrtService"/>
                              <string name="Type" value="WS Profile"/>
                           </storable>
                        </object>
                     </storable>
                  </object>
                  <boolean name="profile active" value="true"/>
                  <string name="profile extref key" null="true"/>
                  <enum name="profile fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="profile mod" value="false"/>
                  <boolean name="profile pres" value="true"/>
                  <object name="serverTimeout">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <int name="Object Internal" value="22000"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="serverTimeout active" value="true"/>
                  <string name="serverTimeout extref key" null="true"/>
                  <enum name="serverTimeout fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="serverTimeout mod" value="false"/>
                  <boolean name="serverTimeout pres" value="true"/>
               </storable>
            </storable>
         </array>
         <string name="Name" value="EscrtService_WSDL"/>
      </storable>
      <storable name="18" storable-id="dr.WfNode" ver="2.0">
         <string name="Classname" value="com.digitalroute.mz.rest.agent.RESTAgentInspRT"/>
         <array classname="com.digitalroute.wf.WfNodeConfig" name="Configuration" size="1">
            <storable name="0" storable-id="dr.WfNodeConfig" ver="1.0">
               <string name="Classname" value="com.digitalroute.mz.rest.agent.RESTAgentInspRT"/>
               <storable name="Data" storable-id="dr.RestData" ver="8.04">
                  <object name="accessTokenURI">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <string name="Object Internal" value=""/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="accessTokenURI active" value="true"/>
                  <string name="accessTokenURI extref key" null="true"/>
                  <enum name="accessTokenURI fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="accessTokenURI mod" value="false"/>
                  <boolean name="accessTokenURI pres" value="true"/>
                  <object name="authenticationType">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <enum name="Object Internal" storable-id="dr.RESTAgentAuthenticationTypes" value="None"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="authenticationType active" value="true"/>
                  <string name="authenticationType extref key" null="true"/>
                  <enum name="authenticationType fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="authenticationType mod" value="false"/>
                  <boolean name="authenticationType pres" value="true"/>
                  <object name="baseURL">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <string name="Object Internal" value="https://cbsetp.ghb.co.th/eTP"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="baseURL active" value="true"/>
                  <string name="baseURL extref key" null="true"/>
                  <enum name="baseURL fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="baseURL mod" value="false"/>
                  <boolean name="baseURL pres" value="true"/>
                  <object name="clientID">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <string name="Object Internal" value=""/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="clientID active" value="true"/>
                  <string name="clientID extref key" null="true"/>
                  <enum name="clientID fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="clientID mod" value="false"/>
                  <boolean name="clientID pres" value="true"/>
                  <object name="clientSecret">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <password name="Object Internal" value="DR_DEFAULT_KEY-017BB0B8FB061C1876D43DD75468AA40"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="clientSecret active" value="true"/>
                  <string name="clientSecret extref key" null="true"/>
                  <enum name="clientSecret fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="clientSecret mod" value="false"/>
                  <boolean name="clientSecret pres" value="true"/>
                  <object name="grantType">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <enum name="Object Internal" storable-id="dr.RESTAgentGrantType" value="ClientCredentials"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="grantType active" value="true"/>
                  <string name="grantType extref key" null="true"/>
                  <enum name="grantType fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="grantType mod" value="false"/>
                  <boolean name="grantType pres" value="true"/>
                  <object name="keystorePassword">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <password name="Object Internal" value="DR_DEFAULT_KEY-25FB75239B53E487605912194E971790"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="keystorePassword active" value="true"/>
                  <string name="keystorePassword extref key" null="true"/>
                  <enum name="keystorePassword fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="keystorePassword mod" value="false"/>
                  <boolean name="keystorePassword pres" value="true"/>
                  <object name="keystorePath">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <string name="Object Internal" value="/opt/jdk/jdk1.8.0_161/jre/lib/security/cacerts"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="keystorePath active" value="true"/>
                  <string name="keystorePath extref key" null="true"/>
                  <enum name="keystorePath fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="keystorePath mod" value="false"/>
                  <boolean name="keystorePath pres" value="true"/>
                  <object name="maxOutStandingRequests">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <int name="Object Internal" value="100"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="maxOutStandingRequests active" value="true"/>
                  <string name="maxOutStandingRequests extref key" null="true"/>
                  <enum name="maxOutStandingRequests fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="maxOutStandingRequests mod" value="false"/>
                  <boolean name="maxOutStandingRequests pres" value="true"/>
                  <object name="oauthParameters">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <list classname="java.util.ArrayList" name="Object Internal"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="oauthParameters active" value="true"/>
                  <string name="oauthParameters extref key" null="true"/>
                  <enum name="oauthParameters fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="oauthParameters mod" value="false"/>
                  <boolean name="oauthParameters pres" value="true"/>
                  <object name="oauthPassword">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <password name="Object Internal" value="DR_DEFAULT_KEY-017BB0B8FB061C1876D43DD75468AA40"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="oauthPassword active" value="true"/>
                  <string name="oauthPassword extref key" null="true"/>
                  <enum name="oauthPassword fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="oauthPassword mod" value="false"/>
                  <boolean name="oauthPassword pres" value="true"/>
                  <object name="oauthUsername">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <string name="Object Internal" value=""/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="oauthUsername active" value="true"/>
                  <string name="oauthUsername extref key" null="true"/>
                  <enum name="oauthUsername fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="oauthUsername mod" value="false"/>
                  <boolean name="oauthUsername pres" value="true"/>
                  <object name="overrideBaseURL">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <string name="Object Internal" value=""/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="overrideBaseURL active" value="true"/>
                  <string name="overrideBaseURL extref key" null="true"/>
                  <enum name="overrideBaseURL fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="overrideBaseURL mod" value="false"/>
                  <boolean name="overrideBaseURL pres" value="true"/>
                  <object name="password">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <password name="Object Internal" value="DR_DEFAULT_KEY-017BB0B8FB061C1876D43DD75468AA40"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="password active" value="true"/>
                  <string name="password extref key" null="true"/>
                  <enum name="password fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="password mod" value="false"/>
                  <boolean name="password pres" value="true"/>
                  <object name="timeout">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <int name="Object Internal" value="5000"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="timeout active" value="true"/>
                  <string name="timeout extref key" null="true"/>
                  <enum name="timeout fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="timeout mod" value="false"/>
                  <boolean name="timeout pres" value="true"/>
                  <object name="username">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <string name="Object Internal" value=""/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="username active" value="true"/>
                  <string name="username extref key" null="true"/>
                  <enum name="username fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="username mod" value="false"/>
                  <boolean name="username pres" value="true"/>
               </storable>
            </storable>
         </array>
         <string name="Name" value="REST_ETP"/>
      </storable>
      <storable name="19" storable-id="dr.WfNode" ver="2.0">
         <string name="Classname" value="com.digitalroute.wfc.analysis.AnalysisRealtimeInsp"/>
         <array classname="com.digitalroute.wf.WfNodeConfig" name="Configuration" size="1">
            <storable name="0" storable-id="dr.WfNodeConfig" ver="1.0">
               <string name="Classname" value="com.digitalroute.wfc.analysis.AnalysisRealtimeInsp"/>
               <storable name="Data" storable-id="dr.StuffyMapperData" ver="1.0">
                  <object name="Source code">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <string name="Object Internal"><![CDATA[consume {
    debug(input);
}]]></string>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Source code active" value="true"/>
                  <string name="Source code extref key" null="true"/>
                  <enum name="Source code fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Source code mod" value="false"/>
                  <boolean name="Source code pres" value="true"/>
                  <object name="UDR types">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <array classname="com.digitalroute.devkit.drudr.DRTypeInfo" name="Object Internal" size="1">
                              <storable name="0" storable-id="dr.DRTypeInfo" ver="1.0">
                                 <string name="TypeName" value="RESTClient.RESTCycleUDR"/>
                              </storable>
                           </array>
                        </object>
                     </storable>
                  </object>
                  <boolean name="UDR types active" value="true"/>
                  <string name="UDR types extref key" null="true"/>
                  <enum name="UDR types fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="UDR types mod" value="false"/>
                  <boolean name="UDR types pres" value="true"/>
               </storable>
            </storable>
         </array>
         <string name="Name" value="responseETP"/>
      </storable>
      <storable name="2" storable-id="dr.WfNode" ver="2.0">
         <string name="Classname"><![CDATA[com.digitalroute.pythonagents.agent.PythonRealtimeProcessingAgentInsp]]></string>
         <array classname="com.digitalroute.wf.WfNodeConfig" name="Configuration" size="1">
            <storable name="0" storable-id="dr.WfNodeConfig" ver="1.0">
               <string name="Classname"><![CDATA[com.digitalroute.pythonagents.agent.PythonRealtimeProcessingAgentInsp]]></string>
               <storable name="Data" storable-id="dr.PythonAgentData" ver="8.1">
                  <object name="Input Types">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <array classname="com.digitalroute.devkit.drudr.DRTypeInfo" name="Object Internal" size="2">
                              <storable name="0" storable-id="dr.UltraClientInfo" ver="1.0">
                                 <string name="FormatName" value="Ultra.UFL_CM4876005"/>
                                 <string name="TypeName" value="Ultra.UFL_CM4876005.CM4876005_RQ_TI"/>
                              </storable>
                              <storable name="1" storable-id="dr.UltraClientInfo" ver="1.0">
                                 <string name="FormatName" value="EMAIL.UFL_EmailMatcher"/>
                                 <string name="TypeName" value="EMAIL.UFL_EmailMatcher.EmailMatcher"/>
                              </storable>
                           </array>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Input Types active" value="true"/>
                  <string name="Input Types extref key" null="true"/>
                  <enum name="Input Types fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Input Types mod" value="false"/>
                  <boolean name="Input Types pres" value="true"/>
                  <object name="Interpreter">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <storable name="Object Internal" storable-id="dr.DRConfiguration" ver="1.0">
                              <string name="Folder" value="CM"/>
                              <string name="Key" value="MZ1523333536387"/>
                              <string name="Name" value="PRF_Python"/>
                              <string name="Type" value="Python Interpreter Profile"/>
                           </storable>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Interpreter active" value="true"/>
                  <string name="Interpreter extref key" null="true"/>
                  <enum name="Interpreter fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Interpreter mod" value="false"/>
                  <boolean name="Interpreter pres" value="true"/>
                  <object name="MIMs">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <array classname="com.digitalroute.devkit.wf.DRMIMEntry" name="Object Internal" size="0"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="MIMs active" value="true"/>
                  <string name="MIMs extref key" null="true"/>
                  <enum name="MIMs fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="MIMs mod" value="false"/>
                  <boolean name="MIMs pres" value="true"/>
                  <object name="Output Types">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <array classname="com.digitalroute.pythonagents.OutputTypeInfo" name="Object Internal" size="2">
                              <storable name="0" storable-id="dr.PythonOutputTypeInfo" ver="1.0">
                                 <string name="route" null="true"/>
                                 <storable name="udrTypeInfo" storable-id="dr.UltraClientInfo" ver="1.0">
                                    <string name="FormatName" value="Ultra.UFL_CM4876005"/>
                                    <string name="TypeName" value="Ultra.UFL_CM4876005.CM4876005_RS_TI"/>
                                 </storable>
                              </storable>
                              <storable name="1" storable-id="dr.PythonOutputTypeInfo" ver="1.0">
                                 <string name="route" null="true"/>
                                 <storable name="udrTypeInfo" storable-id="dr.UltraClientInfo" ver="1.0">
                                    <string name="FormatName" value="EMAIL.UFL_EmailMatcher"/>
                                    <string name="TypeName" value="EMAIL.UFL_EmailMatcher.EmailMatcher"/>
                                 </storable>
                              </storable>
                           </array>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Output Types active" value="true"/>
                  <string name="Output Types extref key" null="true"/>
                  <enum name="Output Types fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Output Types mod" value="false"/>
                  <boolean name="Output Types pres" value="true"/>
                  <object name="Source Code">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <string name="Object Internal"><![CDATA[import ftplib
import os
import socket
import xlrd
from python.CM.PYM_CMService import *
from python.EMAIL.PYM_SendEmail import *
from ultra.Ultra.UFL_CM4876005 import CM4876005_RS_TI
from ultra.Ultra.UFL_AXC805000 import AXC805000_RS_TI


#global parameter
folder = None
excelFile = None
layoutNo = None
fileName = None
date = None
completeFlag = None
errorMessage = None

def stripString(stringValue):
    return stringValue.strip()

def consume(input):
    if isinstance(input,CM4876005_RQ_TI):
        #set parameter
        folder = input.GFFDNM
        excelFile = stripString(input.GFFNAM)
        layoutNo = input.GFFTYP
        fileName = stripString(input.GFHMNM) + '.txt'
        date = input.GFCRDT
        
        print 'Excel File Name : ' + excelFile
        
        #check layout no
        completeFlag = 'C'
        if layoutNo == '1':
            errorMessage = ReadTemplate_1(folder,excelFile,fileName,date)
        elif layoutNo == '2': 
            errorMessage = ReadTemplate_2(folder,excelFile,fileName)
            
        if (errorMessage != 'C'): 
            completeFlag = 'E'
        else: errorMessage = ''
                        
        print 'Complete Flag: ' + completeFlag
        print 'Error Message: ' + errorMessage

        outgoing = CM4876005_RS_TI()   
        outgoing.GFBANK = input.GFBANK
        outgoing.GFCRDT = date
        outgoing.GFSEQN = input.GFSEQN
        outgoing.GFIPAD = input.GFIPAD
        outgoing.GFFNAM = excelFile
        outgoing.GFFDNM = folder
        outgoing.GFHMNM = fileName
        outgoing.GFFTYP = layoutNo
        #additional field
        outgoing.CMSFLG = completeFlag
        outgoing.ERRMSG = errorMessage
        
        #print outgoing
        udrRoute(outgoing,'responsePython')
   
    if isinstance(input,EmailMatcher):
        responseStatus = SendEmail(input.EMLFROM_FROM,input.EMLTO_TO,input.EMLCC_CC,input.EMLBCC_BCC,input.SUBJECT_SUBJECT,input.EMLMSG_CONTENT)
        #debug('Status : '+responseStatus)
        input.EMLSTATUS_STATUS = responseStatus
        udrRoute(input,'responsePython')]]></string>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Source Code active" value="true"/>
                  <string name="Source Code extref key" null="true"/>
                  <enum name="Source Code fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Source Code mod" value="false"/>
                  <boolean name="Source Code pres" value="true"/>
               </storable>
            </storable>
         </array>
         <string name="Name" value="PythonProcess"/>
      </storable>
      <storable name="20" storable-id="dr.WfNode" ver="2.0">
         <string name="Classname" value="com.digitalroute.wfc.ws.WSForwarderInsp"/>
         <array classname="com.digitalroute.wf.WfNodeConfig" name="Configuration" size="1">
            <storable name="0" storable-id="dr.WfNodeConfig" ver="1.0">
               <string name="Classname" value="com.digitalroute.wfc.ws.WSForwarderInsp"/>
               <storable name="Data" storable-id="dr.WSForwarderData" ver="6.3">
                  <object name="cdataSupport">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <boolean name="Object Internal" value="false"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="cdataSupport active" value="true"/>
                  <string name="cdataSupport extref key" null="true"/>
                  <enum name="cdataSupport fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="cdataSupport mod" value="false"/>
                  <boolean name="cdataSupport pres" value="true"/>
                  <object name="enableBasicAuthentication">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <boolean name="Object Internal" value="false"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="enableBasicAuthentication active" value="true"/>
                  <string name="enableBasicAuthentication extref key" null="true"/>
                  <enum name="enableBasicAuthentication fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="enableBasicAuthentication mod" value="false"/>
                  <boolean name="enableBasicAuthentication pres" value="true"/>
                  <object name="httpPassword">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <password name="Object Internal" value="DR_DEFAULT_KEY-017BB0B8FB061C1876D43DD75468AA40"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="httpPassword active" value="false"/>
                  <string name="httpPassword extref key" null="true"/>
                  <enum name="httpPassword fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="httpPassword mod" value="false"/>
                  <boolean name="httpPassword pres" value="true"/>
                  <object name="httpUsername">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <string name="Object Internal" value=""/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="httpUsername active" value="false"/>
                  <string name="httpUsername extref key" null="true"/>
                  <enum name="httpUsername fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="httpUsername mod" value="false"/>
                  <boolean name="httpUsername pres" value="true"/>
                  <object name="http_address">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <string name="Object Internal"><![CDATA[http://smsgateway.ghb.co.th:8080/ghbsmsservice/AisService]]></string>
                        </object>
                     </storable>
                  </object>
                  <boolean name="http_address active" value="true"/>
                  <string name="http_address extref key" null="true"/>
                  <enum name="http_address fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="http_address mod" value="false"/>
                  <boolean name="http_address pres" value="true"/>
                  <object name="profile">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <storable name="Object Internal" storable-id="dr.DRConfiguration" ver="1.0">
                              <string name="Folder" value="SMS"/>
                              <string name="Key" value="MZ1550475771575"/>
                              <string name="Name" value="PRF_WS_SMSService"/>
                              <string name="Type" value="WS Profile"/>
                           </storable>
                        </object>
                     </storable>
                  </object>
                  <boolean name="profile active" value="true"/>
                  <string name="profile extref key" null="true"/>
                  <enum name="profile fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="profile mod" value="false"/>
                  <boolean name="profile pres" value="true"/>
                  <object name="serverTimeout">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <int name="Object Internal" value="30000"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="serverTimeout active" value="true"/>
                  <string name="serverTimeout extref key" null="true"/>
                  <enum name="serverTimeout fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="serverTimeout mod" value="false"/>
                  <boolean name="serverTimeout pres" value="true"/>
               </storable>
            </storable>
         </array>
         <string name="Name" value="SMSService_WSDL"/>
      </storable>
      <storable name="3" storable-id="dr.WfNode" ver="2.0">
         <string name="Classname" value="com.digitalroute.wfc.tcpipcoll.TCPIPCollInsp"/>
         <array classname="com.digitalroute.wf.WfNodeConfig" name="Configuration" size="2">
            <storable name="0" storable-id="dr.WfNodeConfig" ver="1.0">
               <string name="Classname" value="com.digitalroute.wfc.tcpipcoll.TCPIPCollInsp"/>
               <storable name="Data" storable-id="dr.TCPIPCollData" ver="5.0">
                  <object name="Host">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <string name="Object Internal" value="0.0.0.0"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Host active" value="true"/>
                  <string name="Host extref key" null="true"/>
                  <enum name="Host fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Host mod" value="false"/>
                  <boolean name="Host pres" value="true"/>
                  <object name="Max connections">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <int name="Object Internal" value="10"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Max connections active" value="false"/>
                  <string name="Max connections extref key" null="true"/>
                  <enum name="Max connections fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Max connections mod" value="false"/>
                  <boolean name="Max connections pres" value="true"/>
                  <object name="Multiple">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <boolean name="Object Internal" value="false"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Multiple active" value="true"/>
                  <string name="Multiple extref key" null="true"/>
                  <enum name="Multiple fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Multiple mod" value="false"/>
                  <boolean name="Multiple pres" value="true"/>
                  <object name="Port">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <int name="Object Internal" value="28001"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Port active" value="true"/>
                  <string name="Port extref key" null="true"/>
                  <enum name="Port fit" storable-id="dr.DRFieldInstanceType" value="INSTANCE"/>
                  <boolean name="Port mod" value="false"/>
                  <boolean name="Port pres" value="true"/>
                  <object name="Response">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <boolean name="Object Internal" value="true"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Response active" value="true"/>
                  <string name="Response extref key" null="true"/>
                  <enum name="Response fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Response mod" value="false"/>
                  <boolean name="Response pres" value="true"/>
                  <object name="State UDR">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <boolean name="Object Internal" value="false"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="State UDR active" value="true"/>
                  <string name="State UDR extref key" null="true"/>
                  <enum name="State UDR fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="State UDR mod" value="false"/>
                  <boolean name="State UDR pres" value="true"/>
               </storable>
            </storable>
            <storable name="1" storable-id="dr.WfNodeConfig" ver="1.0">
               <string name="Classname"><![CDATA[com.digitalroute.wfc.ultra.server.service.RealtimeDecoderInsp]]></string>
               <storable name="Data" storable-id="dr.RealtimeDecoderConfig" ver="1.0">
                  <object name="Decoder">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <string name="Object Internal" value="CBS.UFL_DSP_Header.DSP_Header_Decoder"/>
                        </object>
                     </storable>
                  </object>
                  <object name="Decoder Config">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <null name="Object Internal"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Decoder Config active" value="true"/>
                  <string name="Decoder Config extref key" null="true"/>
                  <enum name="Decoder Config fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Decoder Config mod" value="false"/>
                  <boolean name="Decoder Config pres" value="true"/>
                  <boolean name="Decoder active" value="true"/>
                  <string name="Decoder extref key" null="true"/>
                  <enum name="Decoder fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Decoder mod" value="false"/>
                  <boolean name="Decoder pres" value="true"/>
                  <object name="Full Decode">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <boolean name="Object Internal" value="false"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Full Decode active" value="true"/>
                  <string name="Full Decode extref key" null="true"/>
                  <enum name="Full Decode fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Full Decode mod" value="false"/>
                  <boolean name="Full Decode pres" value="true"/>
               </storable>
            </storable>
         </array>
         <string name="Name" value="RequestTCP"/>
      </storable>
      <storable name="4" storable-id="dr.WfNode" ver="2.0">
         <string name="Classname" value="com.digitalroute.wfc.tcpipforw.TCPIPForwInsp"/>
         <array classname="com.digitalroute.wf.WfNodeConfig" name="Configuration" size="1">
            <storable name="0" storable-id="dr.WfNodeConfig" ver="1.0">
               <string name="Classname" value="com.digitalroute.wfc.tcpipforw.TCPIPForwInsp"/>
               <storable name="Data" storable-id="dr.TCPIPForwData" ver="7.0">
                  <object name="Advanced properties">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <string name="Object Internal"><![CDATA[# If needed for optimizing the performance, properties controlling the agent 
# can be customized here. If the properties are commented out, default values are used.

# Specifies the high water mark of the write buffer. If the number of bytes queued in the write buffer exceeds this value, the sender cannot send more data.
# writeBufferHighWaterMark 65536

# Specifies the low water mark of the write buffer.  If the number of bytes queued in the write buffer exceeds the high water mark 
# and then drops below the low water mark, sender can start to send data again.
# writeBufferLowWaterMark 32768

# Specifies the size in bytes of the socket's data receive buffer.
# receiveBufferSize 1048576

# Specifies the size in bytes of the socket's data send buffer.
# sendBufferSize 1048576

# Set this property to "true" to keep the connection alive by sending probes across the network.
# keepAlive false

# Set this property to "true" to disable Nagle's algorithm for this connection.
# tcpNoDelay false

# Set this property to "true" to allow other sockets to bind() to this port, unless there is an active listening socket bound to the port already.
# reuseAddress false

# When an event arrives to the collector, the delivery will, by default, be made on a different thread than the one the message arrived on. 
# This gives the best overall throughput and scalability, especially on multi-core machines. However, it also introduces some extra latency due to the extra context switch required. 
# If you want the lowest latency, and can accept the possible reduction in throughput, then you can set direct-deliver to "true".
# direct-deliver true

# Specifies the time interval (in ms) in which the agent will try to reconnect. 
# Note that the first reconnect attempt will be made directly.
# reconnectInterval 3000

# Specifies the queue size in number of UDRs for the Forwarding Agent.
# forwardingQueueSize 1000

# Specifies the timeout in milliseconds that are allowed to put a message on the queue of Forwarding Agent.
# forwardingQueueTimeout 0

# Set this property to "true" if you have problems with one connection slowing down the rest.
# useForwardingQueue false

# Specifies the time(ms) for how long events will be supressed once a event has been sent.
# suppressDuplicateEvents 60000

# Specifies the interface to use for the agent, default is wildcard
# localInterface 

]]></string>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Advanced properties active" value="false"/>
                  <string name="Advanced properties extref key" null="true"/>
                  <enum name="Advanced properties fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Advanced properties mod" value="false"/>
                  <boolean name="Advanced properties pres" value="true"/>
                  <object name="Receive Response">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <boolean name="Object Internal" value="true"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Receive Response active" value="true"/>
                  <string name="Receive Response extref key" null="true"/>
                  <enum name="Receive Response fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Receive Response mod" value="false"/>
                  <boolean name="Receive Response pres" value="true"/>
                  <object name="Remote Host Addresses">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <list classname="java.util.ArrayList" name="Object Internal">
                              <udr classname="com.digitalroute.tcpipforw.udr.RemoteHostConfig" name="0" type="udr" ver="3.0">
                                 <string name="Host" value="cbssibs.ghb.co.th"/>
                                 <int name="Port" value="18701"/>
                              </udr>
                           </list>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Remote Host Addresses active" value="true"/>
                  <string name="Remote Host Addresses extref key" null="true"/>
                  <enum name="Remote Host Addresses fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Remote Host Addresses mod" value="false"/>
                  <boolean name="Remote Host Addresses pres" value="true"/>
               </storable>
            </storable>
         </array>
         <string name="Name" value="TCPToSliverlake"/>
      </storable>
      <storable name="5" storable-id="dr.WfNode" ver="2.0">
         <string name="Classname" value="com.digitalroute.wfc.analysis.AnalysisRealtimeInsp"/>
         <array classname="com.digitalroute.wf.WfNodeConfig" name="Configuration" size="1">
            <storable name="0" storable-id="dr.WfNodeConfig" ver="1.0">
               <string name="Classname" value="com.digitalroute.wfc.analysis.AnalysisRealtimeInsp"/>
               <storable name="Data" storable-id="dr.StuffyMapperData" ver="1.0">
                  <object name="Source code">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <string name="Object Internal"><![CDATA[import ultra.CBS.UFL_DSP_Header;
import ultra.CBS.UFL_Aggregation;

any decoder;
initialize {
    // we use MassDecoder here as the response arrives in multiple packets and we must wait for the 
    // full package with length SKTMLEN-9 to be delivered before we push it to next agent.
    decoder = udrMassCreateDecoder("CBS.UFL_DSP_Header.DSP_Header_Decoder");    
}

consume {
    try{
        debug(input);
        if(instanceOf(input, ResponseUDR)){        
            ResponseUDR resp = (ResponseUDR) input;
            
            list<DSP_Header_TgIn> packetList = listCreate(DSP_Header_TgIn);
            udrMassDecode(decoder, packetList, resp.data, false);
            debug("Decoder Message: " + packetList);
            for (DSP_Header_TgIn fullPacket: packetList) {
                Matcher match = udrCreate(Matcher);
                match.uuid = fullPacket.I13ACQN + fullPacket.I13TMNO;
                match.tcpResponse = fullPacket;
                udrRoute(match);            
            }
            
            /*DSP_Header_TgIn dsp = listGet(packetList,0);
            debug("DSP response code : " + dsp.I13MSTA);*/
        } else {
            debug(input);
        }    
    }
    catch(ExceptionDetails ex){
        debug("Exception: " + ex.message);    
    }    
}]]></string>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Source code active" value="true"/>
                  <string name="Source code extref key" null="true"/>
                  <enum name="Source code fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Source code mod" value="false"/>
                  <boolean name="Source code pres" value="true"/>
                  <object name="UDR types">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <array classname="com.digitalroute.devkit.drudr.DRTypeInfo" name="Object Internal" size="3">
                              <storable name="0" storable-id="dr.DRTypeInfo" ver="1.0">
                                 <string name="TypeName" value="TCPIP.ConnectionStateUDR"/>
                              </storable>
                              <storable name="1" storable-id="dr.DRTypeInfo" ver="1.0">
                                 <string name="TypeName" value="TCPIP.ErrorUDR"/>
                              </storable>
                              <storable name="2" storable-id="dr.DRTypeInfo" ver="1.0">
                                 <string name="TypeName" value="TCPIP.ResponseUDR"/>
                              </storable>
                           </array>
                        </object>
                     </storable>
                  </object>
                  <boolean name="UDR types active" value="true"/>
                  <string name="UDR types extref key" null="true"/>
                  <enum name="UDR types fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="UDR types mod" value="false"/>
                  <boolean name="UDR types pres" value="true"/>
               </storable>
            </storable>
         </array>
         <string name="Name" value="packetWait"/>
      </storable>
      <storable name="6" storable-id="dr.WfNode" ver="2.0">
         <string name="Classname"><![CDATA[com.digitalroute.wfc.aggregation.AggregationRealtimeInsp]]></string>
         <array classname="com.digitalroute.wf.WfNodeConfig" name="Configuration" size="1">
            <storable name="0" storable-id="dr.WfNodeConfig" ver="1.0">
               <string name="Classname"><![CDATA[com.digitalroute.wfc.aggregation.AggregationRealtimeInsp]]></string>
               <storable name="Data" storable-id="dr.AggregationConfig" ver="10.6">
                  <object name="Commit Count">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <int name="Object Internal" value="1000"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Commit Count active" value="true"/>
                  <string name="Commit Count extref key" null="true"/>
                  <enum name="Commit Count fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Commit Count mod" value="false"/>
                  <boolean name="Commit Count pres" value="true"/>
                  <object name="Commit Timeout">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <int name="Object Internal" value="60"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Commit Timeout active" value="true"/>
                  <string name="Commit Timeout extref key" null="true"/>
                  <enum name="Commit Timeout fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Commit Timeout mod" value="false"/>
                  <boolean name="Commit Timeout pres" value="true"/>
                  <object name="Default Timeout">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <int name="Object Internal" value="60"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Default Timeout active" value="true"/>
                  <string name="Default Timeout extref key" null="true"/>
                  <enum name="Default Timeout fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Default Timeout mod" value="false"/>
                  <boolean name="Default Timeout pres" value="true"/>
                  <object name="Defragmentation">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <enum name="Object Internal" storable-id="dr.DefragType" value="NONE"/>
                        </object>
                     </storable>
                  </object>
                  <object name="Defragmentation After Each Batch Time Limit">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <int name="Object Internal" value="5"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Defragmentation After Each Batch Time Limit active" value="false"/>
                  <string name="Defragmentation After Each Batch Time Limit extref key" null="true"/>
                  <enum name="Defragmentation After Each Batch Time Limit fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Defragmentation After Each Batch Time Limit mod" value="false"/>
                  <boolean name="Defragmentation After Each Batch Time Limit pres" value="true"/>
                  <object name="Defragmentation After Number of Batches">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <int name="Object Internal" value="1"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Defragmentation After Number of Batches active" value="false"/>
                  <string name="Defragmentation After Number of Batches extref key" null="true"/>
                  <enum name="Defragmentation After Number of Batches fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Defragmentation After Number of Batches mod" value="false"/>
                  <boolean name="Defragmentation After Number of Batches pres" value="true"/>
                  <object name="Defragmentation File Age Limit">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <int name="Object Internal" value="5"/>
                        </object>
                     </storable>
                  </object>
                  <object name="Defragmentation File Age Limit Time Unit">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <string name="Object Internal" value="MINUTES"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Defragmentation File Age Limit Time Unit active" value="false"/>
                  <string name="Defragmentation File Age Limit Time Unit extref key" null="true"/>
                  <enum name="Defragmentation File Age Limit Time Unit fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Defragmentation File Age Limit Time Unit mod" value="false"/>
                  <boolean name="Defragmentation File Age Limit Time Unit pres" value="true"/>
                  <boolean name="Defragmentation File Age Limit active" value="false"/>
                  <string name="Defragmentation File Age Limit extref key" null="true"/>
                  <enum name="Defragmentation File Age Limit fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Defragmentation File Age Limit mod" value="false"/>
                  <boolean name="Defragmentation File Age Limit pres" value="true"/>
                  <boolean name="Defragmentation active" value="false"/>
                  <string name="Defragmentation extref key" null="true"/>
                  <enum name="Defragmentation fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Defragmentation mod" value="false"/>
                  <boolean name="Defragmentation pres" value="true"/>
                  <object name="Disable Timeout">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <boolean name="Object Internal" value="false"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Disable Timeout active" value="true"/>
                  <string name="Disable Timeout extref key" null="true"/>
                  <enum name="Disable Timeout fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Disable Timeout mod" value="false"/>
                  <boolean name="Disable Timeout pres" value="true"/>
                  <object name="Interval Timeout">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <int name="Object Internal" value="60"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Interval Timeout active" value="true"/>
                  <string name="Interval Timeout extref key" null="true"/>
                  <enum name="Interval Timeout fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Interval Timeout mod" value="false"/>
                  <boolean name="Interval Timeout pres" value="true"/>
                  <object name="Main script">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <string name="Object Internal"><![CDATA[sessionInit {
    session.match = udrCreate(Matcher);    
}

consume {
    debug(input.uuid);
    if (input.socketRequest!=null) {
        debug("Socket Request");
        session.match.socketRequest = input.socketRequest;
        //session.match.requestDatetime = input.requestDatetime;
        //session.match.requestMillisec = input.requestMillisec;
    }
    
    if (input.tcpResponse!=null) {
        debug("TCP Response");
        session.match.tcpResponse = input.tcpResponse;
    }
    
    if (session.match.socketRequest!=null && session.match.tcpResponse!=null) {
        debug("Matched");
        udrRoute(session.match);
        sessionRemove(session);
    } else {
        debug("Unmatched");
    }
}

timeout {
    debug("Session is timeout. Removing session");
    sessionRemove(session);
}]]></string>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Main script active" value="true"/>
                  <string name="Main script extref key" null="true"/>
                  <enum name="Main script fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Main script mod" value="false"/>
                  <boolean name="Main script pres" value="true"/>
                  <object name="No Match">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <int name="Object Internal" value="0"/>
                        </object>
                     </storable>
                  </object>
                  <object name="No Match Router">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <string name="Object Internal" value="encodeResponse"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="No Match Router active" value="true"/>
                  <string name="No Match Router extref key" null="true"/>
                  <enum name="No Match Router fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="No Match Router mod" value="false"/>
                  <boolean name="No Match Router pres" value="true"/>
                  <boolean name="No Match active" value="true"/>
                  <string name="No Match extref key" null="true"/>
                  <enum name="No Match fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="No Match mod" value="false"/>
                  <boolean name="No Match pres" value="true"/>
                  <object name="No Storage Behaviour">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <int name="Object Internal" value="0"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="No Storage Behaviour active" value="true"/>
                  <string name="No Storage Behaviour extref key" null="true"/>
                  <enum name="No Storage Behaviour fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="No Storage Behaviour mod" value="false"/>
                  <boolean name="No Storage Behaviour pres" value="true"/>
                  <object name="No Storage Router">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <null name="Object Internal"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="No Storage Router active" value="true"/>
                  <string name="No Storage Router extref key" null="true"/>
                  <enum name="No Storage Router fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="No Storage Router mod" value="false"/>
                  <boolean name="No Storage Router pres" value="true"/>
                  <object name="Null Timeout">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <int name="Object Internal" value="2"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Null Timeout active" value="true"/>
                  <string name="Null Timeout extref key" null="true"/>
                  <enum name="Null Timeout fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Null Timeout mod" value="false"/>
                  <boolean name="Null Timeout pres" value="true"/>
                  <object name="Profile Key">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <storable name="Object Internal" storable-id="dr.DRConfiguration" ver="1.0">
                              <string name="Folder" value="CM"/>
                              <string name="Key" value="MZ1527133834305"/>
                              <string name="Name" value="PRF_Aggregation_OutboundService"/>
                              <string name="Type" value="Aggregation Profile"/>
                           </storable>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Profile Key active" value="true"/>
                  <string name="Profile Key extref key" null="true"/>
                  <enum name="Profile Key fit" storable-id="dr.DRFieldInstanceType" value="DEFAULT"/>
                  <boolean name="Profile Key mod" value="false"/>
                  <boolean name="Profile Key pres" value="true"/>
                  <object name="Read Only">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <boolean name="Object Internal" value="false"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Read Only active" value="true"/>
                  <string name="Read Only extref key" null="true"/>
                  <enum name="Read Only fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Read Only mod" value="false"/>
                  <boolean name="Read Only pres" value="true"/>
               </storable>
            </storable>
         </array>
         <string name="Name" value="matchRequestToResponse"/>
      </storable>
      <storable name="7" storable-id="dr.WfNode" ver="2.0">
         <string name="Classname" value="com.digitalroute.wfc.analysis.AnalysisRealtimeInsp"/>
         <array classname="com.digitalroute.wf.WfNodeConfig" name="Configuration" size="1">
            <storable name="0" storable-id="dr.WfNodeConfig" ver="1.0">
               <string name="Classname" value="com.digitalroute.wfc.analysis.AnalysisRealtimeInsp"/>
               <storable name="Data" storable-id="dr.StuffyMapperData" ver="1.0">
                  <object name="Source code">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <string name="Object Internal"><![CDATA[import ultra.CBS.UFL_Aggregation;
import apl.CM.APL_CMSService;
import ultra.CBS.UFL_MBASE_Header;
consume {
    try{
        list<MBASE_Header_With_Payload_TI> mbaseList = listCreate(MBASE_Header_With_Payload_TI);
        udrDecode("MBASE_Header_With_Payload_Decode",mbaseList,input.tcpResponse.data);
        MBASE_Header_With_Payload_TI mbase = listGet(mbaseList,0);
        debug("Mbase header response code : " + mbase.mbaseHeader.HDRIND);
        
        debug("Response Message:" + baToStr(input.tcpResponse.data, "IBM-Thai"));
        //udrRoute(responseMessage_CM4876006(input.tcpResponse), "toResponseHTTP");
        //debug(baToStr(input.tcpResponse, "IBM-Thai"));
        
    }
    catch(ExceptionDetails ex){
        debug("Exception: " + ex.message);
    }  
}]]></string>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Source code active" value="true"/>
                  <string name="Source code extref key" null="true"/>
                  <enum name="Source code fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Source code mod" value="false"/>
                  <boolean name="Source code pres" value="true"/>
                  <object name="UDR types">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <array classname="com.digitalroute.devkit.drudr.DRTypeInfo" name="Object Internal" size="1">
                              <storable name="0" storable-id="dr.UltraClientInfo" ver="1.0">
                                 <string name="FormatName" value="CBS.UFL_Aggregation"/>
                                 <string name="TypeName" value="CBS.UFL_Aggregation.Matcher"/>
                              </storable>
                           </array>
                        </object>
                     </storable>
                  </object>
                  <boolean name="UDR types active" value="true"/>
                  <string name="UDR types extref key" null="true"/>
                  <enum name="UDR types fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="UDR types mod" value="false"/>
                  <boolean name="UDR types pres" value="true"/>
               </storable>
            </storable>
         </array>
         <string name="Name" value="responseMapping"/>
      </storable>
      <storable name="8" storable-id="dr.WfNode" ver="2.0">
         <string name="Classname" value="com.digitalroute.wfc.analysis.AnalysisRealtimeInsp"/>
         <array classname="com.digitalroute.wf.WfNodeConfig" name="Configuration" size="1">
            <storable name="0" storable-id="dr.WfNodeConfig" ver="1.0">
               <string name="Classname" value="com.digitalroute.wfc.analysis.AnalysisRealtimeInsp"/>
               <storable name="Data" storable-id="dr.StuffyMapperData" ver="1.0">
                  <object name="Source code">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <string name="Object Internal"><![CDATA[consume {
    debug("save disk error");
    debug(input);
}]]></string>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Source code active" value="true"/>
                  <string name="Source code extref key" null="true"/>
                  <enum name="Source code fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Source code mod" value="false"/>
                  <boolean name="Source code pres" value="true"/>
                  <object name="UDR types">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <array classname="com.digitalroute.devkit.drudr.DRTypeInfo" name="Object Internal" size="1">
                              <storable name="0" storable-id="dr.DRTypeInfo" ver="1.0">
                                 <string name="TypeName" value="diskrtforwarding.ErrorUDR"/>
                              </storable>
                           </array>
                        </object>
                     </storable>
                  </object>
                  <boolean name="UDR types active" value="true"/>
                  <string name="UDR types extref key" null="true"/>
                  <enum name="UDR types fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="UDR types mod" value="false"/>
                  <boolean name="UDR types pres" value="true"/>
               </storable>
            </storable>
         </array>
         <string name="Name" value="saveToDiskError"/>
      </storable>
      <storable name="9" storable-id="dr.WfNode" ver="2.0">
         <string name="Classname"><![CDATA[com.digitalroute.mz.diskrtforwarding.agent.RealTimeDiskFwdInsp]]></string>
         <array classname="com.digitalroute.wf.WfNodeConfig" name="Configuration" size="2">
            <storable name="0" storable-id="dr.WfNodeConfig" ver="1.0">
               <string name="Classname"><![CDATA[com.digitalroute.mz.diskrtforwarding.agent.RealTimeDiskFwdInsp]]></string>
               <storable name="Data" storable-id="dr.RealTimeDiskFwdConfig" ver="7.0">
                  <object name="BackPressureBufferLimit">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <int name="Object Internal" value="100"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="BackPressureBufferLimit active" value="true"/>
                  <string name="BackPressureBufferLimit extref key" null="true"/>
                  <enum name="BackPressureBufferLimit fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="BackPressureBufferLimit mod" value="false"/>
                  <boolean name="BackPressureBufferLimit pres" value="true"/>
                  <object name="BackPressureBufferTimeout">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <int name="Object Internal" value="10"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="BackPressureBufferTimeout active" value="true"/>
                  <string name="BackPressureBufferTimeout extref key" null="true"/>
                  <enum name="BackPressureBufferTimeout fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="BackPressureBufferTimeout mod" value="false"/>
                  <boolean name="BackPressureBufferTimeout pres" value="true"/>
                  <object name="ByteCountBatch">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <int name="Object Internal" value="0"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="ByteCountBatch active" value="true"/>
                  <string name="ByteCountBatch extref key" null="true"/>
                  <enum name="ByteCountBatch fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="ByteCountBatch mod" value="false"/>
                  <boolean name="ByteCountBatch pres" value="true"/>
                  <object name="ByteCountSync">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <int name="Object Internal" value="0"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="ByteCountSync active" value="true"/>
                  <string name="ByteCountSync extref key" null="true"/>
                  <enum name="ByteCountSync fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="ByteCountSync mod" value="false"/>
                  <boolean name="ByteCountSync pres" value="true"/>
                  <object name="ClosingCriteriaDuration">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <int name="Object Internal" value="0"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="ClosingCriteriaDuration active" value="true"/>
                  <string name="ClosingCriteriaDuration extref key" null="true"/>
                  <enum name="ClosingCriteriaDuration fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="ClosingCriteriaDuration mod" value="false"/>
                  <boolean name="ClosingCriteriaDuration pres" value="true"/>
                  <object name="Compression">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <enum name="Object Internal" storable-id="dr.CompressionType" value="NONE"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Compression active" value="true"/>
                  <string name="Compression extref key" null="true"/>
                  <enum name="Compression fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Compression mod" value="false"/>
                  <boolean name="Compression pres" value="true"/>
                  <object name="ConcurrentBatchesLimit">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <int name="Object Internal" value="0"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="ConcurrentBatchesLimit active" value="true"/>
                  <string name="ConcurrentBatchesLimit extref key" null="true"/>
                  <enum name="ConcurrentBatchesLimit fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="ConcurrentBatchesLimit mod" value="false"/>
                  <boolean name="ConcurrentBatchesLimit pres" value="true"/>
                  <object name="Create Non-Existing Base Directory">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <boolean name="Object Internal" value="true"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Create Non-Existing Base Directory active" value="true"/>
                  <string name="Create Non-Existing Base Directory extref key" null="true"/>
                  <enum name="Create Non-Existing Base Directory fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Create Non-Existing Base Directory mod" value="false"/>
                  <boolean name="Create Non-Existing Base Directory pres" value="true"/>
                  <object name="Create empty files">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <boolean name="Object Internal" value="false"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Create empty files active" value="true"/>
                  <string name="Create empty files extref key" null="true"/>
                  <enum name="Create empty files fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Create empty files mod" value="false"/>
                  <boolean name="Create empty files pres" value="true"/>
                  <object name="Distribution directory">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <string name="Object Internal" value="/home/mzadmin/mzdata/ncb_log"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Distribution directory active" value="true"/>
                  <string name="Distribution directory extref key" null="true"/>
                  <enum name="Distribution directory fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Distribution directory mod" value="false"/>
                  <boolean name="Distribution directory pres" value="true"/>
                  <object name="FileRenameRetries">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <int name="Object Internal" value="999"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="FileRenameRetries active" value="true"/>
                  <string name="FileRenameRetries extref key" null="true"/>
                  <enum name="FileRenameRetries fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="FileRenameRetries mod" value="false"/>
                  <boolean name="FileRenameRetries pres" value="true"/>
                  <object name="Input type">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <enum name="Object Internal" storable-id="dr.InputType" value="MultiForwardingUDR"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Input type active" value="true"/>
                  <string name="Input type extref key" null="true"/>
                  <enum name="Input type fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Input type mod" value="false"/>
                  <boolean name="Input type pres" value="true"/>
                  <object name="OrphanSuffix">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <string name="Object Internal" value=""/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="OrphanSuffix active" value="true"/>
                  <string name="OrphanSuffix extref key" null="true"/>
                  <enum name="OrphanSuffix fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="OrphanSuffix mod" value="false"/>
                  <boolean name="OrphanSuffix pres" value="true"/>
                  <object name="RecoveryAttemptInterval">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <int name="Object Internal" value="30"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="RecoveryAttemptInterval active" value="true"/>
                  <string name="RecoveryAttemptInterval extref key" null="true"/>
                  <enum name="RecoveryAttemptInterval fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="RecoveryAttemptInterval mod" value="false"/>
                  <boolean name="RecoveryAttemptInterval pres" value="true"/>
                  <object name="Retries">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <int name="Object Internal" value="10"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Retries active" value="true"/>
                  <string name="Retries extref key" null="true"/>
                  <enum name="Retries fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Retries mod" value="false"/>
                  <boolean name="Retries pres" value="true"/>
                  <object name="SynchronizationInterval">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <int name="Object Internal" value="0"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="SynchronizationInterval active" value="true"/>
                  <string name="SynchronizationInterval extref key" null="true"/>
                  <enum name="SynchronizationInterval fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="SynchronizationInterval mod" value="false"/>
                  <boolean name="SynchronizationInterval pres" value="true"/>
                  <object name="UDRCountBatch">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <int name="Object Internal" value="1"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="UDRCountBatch active" value="true"/>
                  <string name="UDRCountBatch extref key" null="true"/>
                  <enum name="UDRCountBatch fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="UDRCountBatch mod" value="false"/>
                  <boolean name="UDRCountBatch pres" value="true"/>
                  <object name="UDRCountSync">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <int name="Object Internal" value="1"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="UDRCountSync active" value="true"/>
                  <string name="UDRCountSync extref key" null="true"/>
                  <enum name="UDRCountSync fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="UDRCountSync mod" value="false"/>
                  <boolean name="UDRCountSync pres" value="true"/>
                  <object name="WorkerQueueSize">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <int name="Object Internal" value="5000"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="WorkerQueueSize active" value="true"/>
                  <string name="WorkerQueueSize extref key" null="true"/>
                  <enum name="WorkerQueueSize fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="WorkerQueueSize mod" value="false"/>
                  <boolean name="WorkerQueueSize pres" value="true"/>
               </storable>
            </storable>
            <storable name="1" storable-id="dr.WfNodeConfig" ver="1.0">
               <string name="Classname" value="com.digitalroute.devkit.wf.DRFNTServiceInsp"/>
               <storable name="Data" storable-id="dr.DRFNTServiceConfig" ver="10.0">
                  <object name="FNT Entries">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <array classname="com.digitalroute.devkit.hidden.DRFNTServiceEntry" name="Object Internal" size="0"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="FNT Entries active" value="true"/>
                  <string name="FNT Entries extref key" null="true"/>
                  <enum name="FNT Entries fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="FNT Entries mod" value="false"/>
                  <boolean name="FNT Entries pres" value="true"/>
                  <object name="FNT list enabled">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <boolean name="Object Internal" value="false"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="FNT list enabled active" value="false"/>
                  <string name="FNT list enabled extref key" null="true"/>
                  <enum name="FNT list enabled fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="FNT list enabled mod" value="false"/>
                  <boolean name="FNT list enabled pres" value="true"/>
                  <object name="FNT_CREATE_DIRS">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <boolean name="Object Internal" value="true"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="FNT_CREATE_DIRS active" value="true"/>
                  <string name="FNT_CREATE_DIRS extref key" null="true"/>
                  <enum name="FNT_CREATE_DIRS fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="FNT_CREATE_DIRS mod" value="false"/>
                  <boolean name="FNT_CREATE_DIRS pres" value="true"/>
               </storable>
            </storable>
         </array>
         <string name="Name" value="SaveRequestLog"/>
      </storable>
   </list>
   <storable name="Persistent" storable-id="dr.WorkflowPersistentConfig" ver="6.0">
      <object name="Persistent Inspector">
         <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
            <object name="Value">
               <null name="Object Internal"/>
            </object>
         </storable>
      </object>
      <boolean name="Persistent Inspector active" value="true"/>
      <string name="Persistent Inspector extref key" null="true"/>
      <enum name="Persistent Inspector fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
      <boolean name="Persistent Inspector mod" value="false"/>
      <boolean name="Persistent Inspector pres" value="true"/>
      <object name="Persistent Storage Config">
         <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
            <object name="Value">
               <null name="Object Internal"/>
            </object>
         </storable>
      </object>
      <boolean name="Persistent Storage Config active" value="true"/>
      <string name="Persistent Storage Config extref key" null="true"/>
      <enum name="Persistent Storage Config fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
      <boolean name="Persistent Storage Config mod" value="false"/>
      <boolean name="Persistent Storage Config pres" value="true"/>
      <object name="Persistent Timeout Handler">
         <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
            <object name="Value">
               <null name="Object Internal"/>
            </object>
         </storable>
      </object>
      <boolean name="Persistent Timeout Handler active" value="true"/>
      <string name="Persistent Timeout Handler extref key" null="true"/>
      <enum name="Persistent Timeout Handler fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
      <boolean name="Persistent Timeout Handler mod" value="false"/>
      <boolean name="Persistent Timeout Handler pres" value="true"/>
   </storable>
   <list classname="java.util.ArrayList" name="Routes">
      <storable name="0" storable-id="dr.WfRoute" ver="2.0">
         <string name="Name" value="pulseRequest"/>
         <int name="Realtime mode" value="0"/>
      </storable>
      <storable name="1" storable-id="dr.WfRoute" ver="2.0">
         <string name="Name" value="requestTCP"/>
         <int name="Realtime mode" value="0"/>
      </storable>
      <storable name="10" storable-id="dr.WfRoute" ver="2.0">
         <string name="Name" value="CreateKeepAliveReq"/>
         <int name="Realtime mode" value="0"/>
      </storable>
      <storable name="11" storable-id="dr.WfRoute" ver="2.0">
         <string name="Name" value="keepAliveReq"/>
         <int name="Realtime mode" value="0"/>
      </storable>
      <storable name="12" storable-id="dr.WfRoute" ver="2.0">
         <string name="Name" value="requestSOAP"/>
         <int name="Realtime mode" value="0"/>
      </storable>
      <storable name="13" storable-id="dr.WfRoute" ver="2.0">
         <string name="Name" value="responseSOAP"/>
         <int name="Realtime mode" value="0"/>
      </storable>
      <storable name="14" storable-id="dr.WfRoute" ver="2.0">
         <string name="Name" value="ccmsAggregation"/>
         <int name="Realtime mode" value="0"/>
      </storable>
      <storable name="15" storable-id="dr.WfRoute" ver="2.0">
         <string name="Name" value="fullSOAPResponse"/>
         <int name="Realtime mode" value="0"/>
      </storable>
      <storable name="16" storable-id="dr.WfRoute" ver="2.0">
         <string name="Name" value="response"/>
         <int name="Realtime mode" value="0"/>
      </storable>
      <storable name="17" storable-id="dr.WfRoute" ver="2.0">
         <string name="Name" value="toResponseTCP"/>
         <int name="Realtime mode" value="0"/>
      </storable>
      <storable name="18" storable-id="dr.WfRoute" ver="2.0">
         <string name="Name" value="responsePython"/>
         <int name="Realtime mode" value="0"/>
      </storable>
      <storable name="19" storable-id="dr.WfRoute" ver="2.0">
         <string name="Name" value="processPython"/>
         <int name="Realtime mode" value="0"/>
      </storable>
      <storable name="2" storable-id="dr.WfRoute" ver="2.0">
         <string name="Name" value="responseTCP"/>
         <int name="Realtime mode" value="0"/>
      </storable>
      <storable name="20" storable-id="dr.WfRoute" ver="2.0">
         <string name="Name" value="saveReqLog"/>
         <int name="Realtime mode" value="0"/>
      </storable>
      <storable name="21" storable-id="dr.WfRoute" ver="2.0">
         <string name="Name" value="saveResLog"/>
         <int name="Realtime mode" value="0"/>
      </storable>
      <storable name="22" storable-id="dr.WfRoute" ver="2.0">
         <string name="Name" value="requestEscrtSOAP"/>
         <int name="Realtime mode" value="0"/>
      </storable>
      <storable name="23" storable-id="dr.WfRoute" ver="2.0">
         <string name="Name" value="responseEscrtSOAP"/>
         <int name="Realtime mode" value="0"/>
      </storable>
      <storable name="24" storable-id="dr.WfRoute" ver="2.0">
         <string name="Name" value="requestTrigger"/>
         <int name="Realtime mode" value="0"/>
      </storable>
      <storable name="25" storable-id="dr.WfRoute" ver="2.0">
         <string name="Name" value="responseETPREST"/>
         <int name="Realtime mode" value="0"/>
      </storable>
      <storable name="26" storable-id="dr.WfRoute" ver="2.0">
         <string name="Name" value="requestSMSSOAP"/>
         <int name="Realtime mode" value="0"/>
      </storable>
      <storable name="27" storable-id="dr.WfRoute" ver="2.0">
         <string name="Name" value="responseSMSSOAP"/>
         <int name="Realtime mode" value="0"/>
      </storable>
      <storable name="3" storable-id="dr.WfRoute" ver="2.0">
         <string name="Name" value="responsePackets"/>
         <int name="Realtime mode" value="0"/>
      </storable>
      <storable name="4" storable-id="dr.WfRoute" ver="2.0">
         <string name="Name" value="toSocket"/>
         <int name="Realtime mode" value="0"/>
      </storable>
      <storable name="5" storable-id="dr.WfRoute" ver="2.0">
         <string name="Name" value="encodeResponse"/>
         <int name="Realtime mode" value="0"/>
      </storable>
      <storable name="6" storable-id="dr.WfRoute" ver="2.0">
         <string name="Name" value="fullResponse"/>
         <int name="Realtime mode" value="0"/>
      </storable>
      <storable name="7" storable-id="dr.WfRoute" ver="2.0">
         <string name="Name" value="toAggregation"/>
         <int name="Realtime mode" value="0"/>
      </storable>
      <storable name="8" storable-id="dr.WfRoute" ver="2.0">
         <string name="Name" value="SaveReq"/>
         <int name="Realtime mode" value="0"/>
      </storable>
      <storable name="9" storable-id="dr.WfRoute" ver="2.0">
         <string name="Name" value="errorRequestLog"/>
         <int name="Realtime mode" value="0"/>
      </storable>
   </list>
   <list classname="java.util.ArrayList" name="Service"/>
   <boolean name="Template Valid" value="true"/>
   <storable name="Thread data" storable-id="dr.WorkflowExecutionRealtimeConfig" ver="8.0">
      <object name="Processed UDRs count interval">
         <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
            <object name="Value">
               <int name="Object Internal" value="1"/>
            </object>
         </storable>
      </object>
      <boolean name="Processed UDRs count interval active" value="true"/>
      <string name="Processed UDRs count interval extref key" null="true"/>
      <enum name="Processed UDRs count interval fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
      <boolean name="Processed UDRs count interval mod" value="false"/>
      <boolean name="Processed UDRs count interval pres" value="true"/>
      <object name="Queue Size">
         <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
            <object name="Value">
               <int name="Object Internal" value="1000"/>
            </object>
         </storable>
      </object>
      <boolean name="Queue Size active" value="true"/>
      <string name="Queue Size extref key" null="true"/>
      <enum name="Queue Size fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
      <boolean name="Queue Size mod" value="false"/>
      <boolean name="Queue Size pres" value="true"/>
      <object name="Queue strategies">
         <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
            <object name="Value">
               <string name="Object Internal" value="Blocking queue"/>
            </object>
         </storable>
      </object>
      <boolean name="Queue strategies active" value="true"/>
      <string name="Queue strategies extref key" null="true"/>
      <enum name="Queue strategies fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
      <boolean name="Queue strategies mod" value="false"/>
      <boolean name="Queue strategies pres" value="true"/>
      <object name="Queue worker strategies">
         <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
            <object name="Value">
               <string name="Object Internal" value="RoundRobin"/>
            </object>
         </storable>
      </object>
      <boolean name="Queue worker strategies active" value="true"/>
      <string name="Queue worker strategies extref key" null="true"/>
      <enum name="Queue worker strategies fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
      <boolean name="Queue worker strategies mod" value="false"/>
      <boolean name="Queue worker strategies pres" value="true"/>
      <object name="Stand-alone">
         <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
            <object name="Value">
               <boolean name="Object Internal" value="true"/>
            </object>
         </storable>
      </object>
      <boolean name="Stand-alone active" value="true"/>
      <string name="Stand-alone extref key" null="true"/>
      <enum name="Stand-alone fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
      <boolean name="Stand-alone mod" value="false"/>
      <boolean name="Stand-alone pres" value="true"/>
      <object name="Threads">
         <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
            <object name="Value">
               <int name="Object Internal" value="8"/>
            </object>
         </storable>
      </object>
      <boolean name="Threads active" value="true"/>
      <string name="Threads extref key" null="true"/>
      <enum name="Threads fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
      <boolean name="Threads mod" value="false"/>
      <boolean name="Threads pres" value="true"/>
   </storable>
   <storable name="Timer Trigger" null="true"/>
</exportmultiplex>
