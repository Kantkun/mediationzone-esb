<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE exportmultiplex SYSTEM "jar:/mz/dtd/export_multiplex.dtd">
<exportmultiplex category="Template" ref_path="workflow_data[Internal]/storable[workflow_data]/storable[Data]">
   <Multiplex_Ref ref_path="exportmultiplex[Workflow_Table]/storable[InstanceTable]">
      <int name="Field Count" value="2"/>
      <int name="Node ID 0" value="2147483647"/>
      <int name="Node ID 1" value="1811779486"/>
      <string name="Node Name 0" value="Workflow"/>
      <string name="Node Name 1" value="Aggregation"/>
   </Multiplex_Ref>
   <storable name="Execution Config" storable-id="dr.WorkflowExecutionConfig" ver="8.0">
      <object name="Debug Type">
         <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
            <object name="Value">
               <enum name="Object Internal" storable-id="dr.DebugType" value="EVENT"/>
            </object>
         </storable>
      </object>
      <boolean name="Debug Type active" value="true"/>
      <string name="Debug Type extref key" null="true"/>
      <enum name="Debug Type fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
      <boolean name="Debug Type mod" value="false"/>
      <boolean name="Debug Type pres" value="true"/>
      <object name="Execution Settings">
         <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
            <object name="Value">
               <storable name="Object Internal" storable-id="dr.ExecutionSettings" ver="2.0">
                  <enum name="dist" storable-id="dr.WorkflowDistType" value="ROUND_ROBIN"/>
                  <list classname="java.util.LinkedList" name="ecList">
                     <storable name="0" storable-id="dr.PicoInstanceEntity" ver="1.0">
                        <string name="Name" value="ecsa1"/>
                        <int name="Type" value="3"/>
                     </storable>
                     <storable name="1" storable-id="dr.PicoInstanceEntity" ver="1.0">
                        <string name="Name" value="ecsa2"/>
                        <int name="Type" value="3"/>
                     </storable>
                  </list>
                  <boolean name="enabled" value="true"/>
                  <list classname="java.util.LinkedList" name="groupList"/>
               </storable>
            </object>
         </storable>
      </object>
      <boolean name="Execution Settings active" value="true"/>
      <string name="Execution Settings extref key" null="true"/>
      <enum name="Execution Settings fit" storable-id="dr.DRFieldInstanceType" value="INSTANCE"/>
      <boolean name="Execution Settings mod" value="false"/>
      <boolean name="Execution Settings pres" value="true"/>
      <object name="Number of Files to Keep">
         <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
            <object name="Value">
               <int name="Object Internal" value="0"/>
            </object>
         </storable>
      </object>
      <boolean name="Number of Files to Keep active" value="true"/>
      <string name="Number of Files to Keep extref key" null="true"/>
      <enum name="Number of Files to Keep fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
      <boolean name="Number of Files to Keep mod" value="false"/>
      <boolean name="Number of Files to Keep pres" value="true"/>
      <object name="Throughput MIM">
         <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
            <object name="Value">
               <null name="Object Internal"/>
            </object>
         </storable>
      </object>
      <boolean name="Throughput MIM active" value="true"/>
      <string name="Throughput MIM extref key" null="true"/>
      <enum name="Throughput MIM fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
      <boolean name="Throughput MIM mod" value="false"/>
      <boolean name="Throughput MIM pres" value="true"/>
      <object name="Transaction Handler">
         <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
            <object name="Value">
               <null name="Object Internal"/>
            </object>
         </storable>
      </object>
      <boolean name="Transaction Handler active" value="true"/>
      <string name="Transaction Handler extref key" null="true"/>
      <enum name="Transaction Handler fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
      <boolean name="Transaction Handler mod" value="false"/>
      <boolean name="Transaction Handler pres" value="true"/>
   </storable>
   <list classname="java.util.ArrayList" name="Field Types">
      <storable name="0" storable-id="dr.WorkflowData$FieldAndType" ver="1.0">
         <string name="Field Name" value="Execution - Execution Settings"/>
         <enum name="Field Type" storable-id="dr.DRFieldInstanceType" value="INSTANCE"/>
         <int name="Node Id" value="2147483647"/>
         <string name="Node Name" value="Workflow"/>
      </storable>
      <storable name="1" storable-id="dr.WorkflowData$FieldAndType" ver="1.0">
         <string name="Field Name" value="Configuration - Profile"/>
         <enum name="Field Type" storable-id="dr.DRFieldInstanceType" value="DEFAULT"/>
         <int name="Node Id" value="1811779486"/>
         <string name="Node Name" value="Aggregation"/>
      </storable>
   </list>
   <int name="Flow Counters Interval" value="0"/>
   <list classname="java.util.ArrayList" name="Logged error MIM"/>
   <list classname="java.util.ArrayList" name="Nodes">
      <storable name="0" storable-id="dr.WfNode" ver="2.0">
         <string name="Classname"><![CDATA[com.digitalroute.mz.pulse.agent.PulseCollectorAgentInspRT]]></string>
         <array classname="com.digitalroute.wf.WfNodeConfig" name="Configuration" size="1">
            <storable name="0" storable-id="dr.WfNodeConfig" ver="1.0">
               <string name="Classname"><![CDATA[com.digitalroute.mz.pulse.agent.PulseCollectorAgentInspRT]]></string>
               <storable name="Data" storable-id="dr.PulseData" ver="7.0">
                  <object name="Center Value">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <double name="Object Internal" value="1.0"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Center Value active" value="false"/>
                  <string name="Center Value extref key" null="true"/>
                  <enum name="Center Value fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Center Value mod" value="false"/>
                  <boolean name="Center Value pres" value="true"/>
                  <object name="Data">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <string name="Object Internal" value=""/>
                        </object>
                     </storable>
                  </object>
                  <object name="Data Entered">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <boolean name="Object Internal" value="true"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Data Entered active" value="true"/>
                  <string name="Data Entered extref key" null="true"/>
                  <enum name="Data Entered fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Data Entered mod" value="false"/>
                  <boolean name="Data Entered pres" value="true"/>
                  <object name="Data Size">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <int name="Object Internal" value="1"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Data Size active" value="false"/>
                  <string name="Data Size extref key" null="true"/>
                  <enum name="Data Size fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Data Size mod" value="false"/>
                  <boolean name="Data Size pres" value="true"/>
                  <object name="Data Unit">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <enum name="Object Internal" storable-id="dr.PulseDataSizeUnit" value="Bytes"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Data Unit active" value="false"/>
                  <string name="Data Unit extref key" null="true"/>
                  <enum name="Data Unit fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Data Unit mod" value="false"/>
                  <boolean name="Data Unit pres" value="true"/>
                  <boolean name="Data active" value="true"/>
                  <string name="Data extref key" null="true"/>
                  <enum name="Data fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Data mod" value="false"/>
                  <boolean name="Data pres" value="true"/>
                  <object name="Fixed Interval">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <long name="Object Internal" value="1"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Fixed Interval active" value="true"/>
                  <string name="Fixed Interval extref key" null="true"/>
                  <enum name="Fixed Interval fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Fixed Interval mod" value="false"/>
                  <boolean name="Fixed Interval pres" value="true"/>
                  <object name="Interval Type">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <string name="Object Internal" value="Fixed"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Interval Type active" value="true"/>
                  <string name="Interval Type extref key" null="true"/>
                  <enum name="Interval Type fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Interval Type mod" value="false"/>
                  <boolean name="Interval Type pres" value="true"/>
                  <object name="Poisson Rate">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <double name="Object Internal" value="1.0"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Poisson Rate active" value="false"/>
                  <string name="Poisson Rate extref key" null="true"/>
                  <enum name="Poisson Rate fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Poisson Rate mod" value="false"/>
                  <boolean name="Poisson Rate pres" value="true"/>
                  <object name="Random Order">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <boolean name="Object Internal" value="false"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Random Order active" value="true"/>
                  <string name="Random Order extref key" null="true"/>
                  <enum name="Random Order fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Random Order mod" value="false"/>
                  <boolean name="Random Order pres" value="true"/>
                  <object name="Random data">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <boolean name="Object Internal" value="false"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Random data active" value="true"/>
                  <string name="Random data extref key" null="true"/>
                  <enum name="Random data fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Random data mod" value="false"/>
                  <boolean name="Random data pres" value="true"/>
                  <object name="Range End">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <int name="Object Internal" value="10"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Range End active" value="false"/>
                  <string name="Range End extref key" null="true"/>
                  <enum name="Range End fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Range End mod" value="false"/>
                  <boolean name="Range End pres" value="true"/>
                  <object name="Range Start">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <int name="Object Internal" value="0"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Range Start active" value="false"/>
                  <string name="Range Start extref key" null="true"/>
                  <enum name="Range Start fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Range Start mod" value="false"/>
                  <boolean name="Range Start pres" value="true"/>
                  <object name="Rate Value Value">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <long name="Object Internal" value="1"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Rate Value Value active" value="false"/>
                  <string name="Rate Value Value extref key" null="true"/>
                  <enum name="Rate Value Value fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Rate Value Value mod" value="false"/>
                  <boolean name="Rate Value Value pres" value="true"/>
                  <object name="Sequential Order">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <boolean name="Object Internal" value="true"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Sequential Order active" value="true"/>
                  <string name="Sequential Order extref key" null="true"/>
                  <enum name="Sequential Order fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Sequential Order mod" value="false"/>
                  <boolean name="Sequential Order pres" value="true"/>
                  <object name="Sequential Range">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <boolean name="Object Internal" value="false"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Sequential Range active" value="true"/>
                  <string name="Sequential Range extref key" null="true"/>
                  <enum name="Sequential Range fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Sequential Range mod" value="false"/>
                  <boolean name="Sequential Range pres" value="true"/>
                  <object name="Start Value">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <long name="Object Internal" value="1"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Start Value active" value="false"/>
                  <string name="Start Value extref key" null="true"/>
                  <enum name="Start Value fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Start Value mod" value="false"/>
                  <boolean name="Start Value pres" value="true"/>
                  <object name="Stop Value">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <long name="Object Internal" value="10"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Stop Value active" value="false"/>
                  <string name="Stop Value extref key" null="true"/>
                  <enum name="Stop Value fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Stop Value mod" value="false"/>
                  <boolean name="Stop Value pres" value="true"/>
                  <object name="Time Unit">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <enum name="Object Internal" storable-id="dr.PulseTimeUnit" value="SECONDS"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Time Unit active" value="true"/>
                  <string name="Time Unit extref key" null="true"/>
                  <enum name="Time Unit fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Time Unit mod" value="false"/>
                  <boolean name="Time Unit pres" value="true"/>
                  <object name="Width Value">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <double name="Object Internal" value="1.0"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Width Value active" value="false"/>
                  <string name="Width Value extref key" null="true"/>
                  <enum name="Width Value fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Width Value mod" value="false"/>
                  <boolean name="Width Value pres" value="true"/>
               </storable>
            </storable>
         </array>
         <string name="Name" value="FULL"/>
      </storable>
      <storable name="1" storable-id="dr.WfNode" ver="2.0">
         <string name="Classname" value="com.digitalroute.wfc.analysis.AnalysisRealtimeInsp"/>
         <array classname="com.digitalroute.wf.WfNodeConfig" name="Configuration" size="1">
            <storable name="0" storable-id="dr.WfNodeConfig" ver="1.0">
               <string name="Classname" value="com.digitalroute.wfc.analysis.AnalysisRealtimeInsp"/>
               <storable name="Data" storable-id="dr.StuffyMapperData" ver="1.0">
                  <object name="Source code">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <string name="Object Internal"><![CDATA[import ultra.CBS.UFL_DSP_Header;
import ultra.CBS.UFL_MBASE_Header;
import ultra.Ultra.UFL_MBASE_CFC810001IR;
import ultra.NCB.UFL_NcbSlRequestPack_Aggregation;
import apl.NCB.APL_NCBService;
import apl.Common.APL_Common_Utilities;

int activeCount;
boolean allowCheckFileList;

synchronized boolean isAllowCheckFileList(){
    return allowCheckFileList;
}
synchronized void setAllowCheckFileList(){
    allowCheckFileList = true;
}
synchronized void setNotAllowCheckFileList(){
    allowCheckFileList = false;
}

/*
synchronized int getActiveCount(){
    return activeCount;
}
synchronized void increaseActiveCount(){
    activeCount = activeCount + 1;
}
synchronized void decreaseActiveCount(){
    activeCount = activeCount - 1;
    if(activeCount < 0){
        activeCount = 0;
    }
}
*/

initialize{
    //activeCount = 0;
    allowCheckFileList = true;
}

consume {
    debug("Allow check file ?");
    debug(allowCheckFileList);
    if(allowCheckFileList){
        setNotAllowCheckFileList();
    if(instanceOf(input,bytearray)){
        //get file list
        string queuePath = "/home/mzadmin/mzdata/ncb_log/request_from_sl_log";
        list<string> filenameList = fileListFiles(queuePath);
        debug("file name list");
        debug(filenameList);
        
        //if has file
        if(listSize(filenameList)>0){
        //collect file name
        string filename = listGet(filenameList,0);
        debug("file name to use");
        debug(filename);
        
        //move file to done folder
        date logDatetime = dateCreateNow();
        string actionLogDatetime; dateToString(actionLogDatetime, logDatetime, "yyyyMMdd");
        string toPath = queuePath + "/done/" + actionLogDatetime + "/" + filename;
        string deleteResult = fileDelete(toPath);
        debug("delete result : " + deleteResult);
        string fromPath = queuePath + "/" + filename;
        debug("from : " + fromPath);
        debug("to : " + toPath);
        string moveResult = fileMove(fromPath, toPath); //if success return null
        debug("move to done dir Result: " + moveResult);
        
        if(moveResult == null){
            //move success then set allowCheckFileList to true
            setAllowCheckFileList();
        }
        
        //get file data
        bytearray fileDataBa = readFileBinary(toPath);
        
        //convert file data to object cfc810001  
        list<DSP_Header_TgIn> dspList = listCreate(DSP_Header_TgIn);
        udrDecode("DSP_Header_Decoder",dspList,fileDataBa);
        
        debug("DSP");
        debug(listGet(dspList,0));
        
        list<MBASE_Header_With_Payload_TI> mbaseList = listCreate(MBASE_Header_With_Payload_TI);
        udrDecode("MBASE_Header_With_Payload_Decode",mbaseList,listGet(dspList, 0).data);          
        MBASE_Header_With_Payload_TI mbase = listGet(mbaseList,0);
        
        debug("MBASE");
        debug(mbase);
        
        list<CFC810001I_RQ_TI> cfc810001List = listCreate(CFC810001I_RQ_TI);
        bytearray mbaseData = refillTrimedColumn(mbase.data,sizeOf_CFC180001IR_Rq);
        udrDecode("CFC810001I_RQ_Decode",cfc810001List,mbaseData);
        CFC810001I_RQ_TI cfc810001 = listGet(cfc810001List,0);
        
        debug("cfc810001");
        debug(cfc810001);
        
//set for test
        /*
        debug("BEFORE SET FOR TEST");
        debug(cfc810001);
        cfc810001.ConsentFlag = "Y";
        //cfc810001.CustomerFormattedName = "ทดสอบ สมมุติ";
        //cfc810001.CustomerNumber = "";
        //cfc810001.DateofBirth = "";
        cfc810001.IDCountryCode = "TH";
        cfc810001.IDNumber = "3129900330793";
        cfc810001.IDType ="07";
        //cfc810001.InquiryAmount = "0";
        cfc810001.InquiryCode = "01";
        //cfc810001.OriginalData = "";
        //cfc810001.ReferenceNumber = "";
        //cfc810001.Reserved = "";
        //cfc810001.ReturnCode = "";
        debug("AFTER SET FOR TEST");
        debug(cfc810001);
        */
//end set for test

//ok variable for test
        boolean ok = true;
        if(ok){
            //sl pack to python
            NcbSlRequestPack matcher = udrCreate(NcbSlRequestPack);
            matcher.dsp = listGet(dspList,0);
            matcher.mbase = mbase;
            matcher.cfc810001 = cfc810001;
            udrRoute(matcher,"toCreateXMLRequest");
        }
        
        }else{
            setAllowCheckFileList();
        }
        
    }
    }
}]]></string>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Source code active" value="true"/>
                  <string name="Source code extref key" null="true"/>
                  <enum name="Source code fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Source code mod" value="false"/>
                  <boolean name="Source code pres" value="true"/>
                  <object name="UDR types">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <array classname="com.digitalroute.devkit.drudr.DRTypeInfo" name="Object Internal" size="1">
                              <storable name="0" storable-id="dr.DRTypeInfo" ver="1.0">
                                 <string name="TypeName" value="bytearray"/>
                              </storable>
                           </array>
                        </object>
                     </storable>
                  </object>
                  <boolean name="UDR types active" value="true"/>
                  <string name="UDR types extref key" null="true"/>
                  <enum name="UDR types fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="UDR types mod" value="false"/>
                  <boolean name="UDR types pres" value="true"/>
               </storable>
            </storable>
         </array>
         <string name="Name" value="CheckSLRequestFile"/>
      </storable>
      <storable name="10" storable-id="dr.WfNode" ver="2.0">
         <string name="Classname" value="com.digitalroute.wfc.analysis.AnalysisRealtimeInsp"/>
         <array classname="com.digitalroute.wf.WfNodeConfig" name="Configuration" size="1">
            <storable name="0" storable-id="dr.WfNodeConfig" ver="1.0">
               <string name="Classname" value="com.digitalroute.wfc.analysis.AnalysisRealtimeInsp"/>
               <storable name="Data" storable-id="dr.StuffyMapperData" ver="1.0">
                  <object name="Source code">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <string name="Object Internal"><![CDATA[import ultra.CBS.UFL_Aggregation;
import ultra.CBS.UFL_DSP_Header;
import ultra.CBS.UFL_MBASE_Header;
import ultra.Ultra.UFL_MBASE_CFC810010IR;

any decoder;
initialize {
    // we use MassDecoder here as the response arrives in multiple packets and we must wait for the 
    // full package with length SKTMLEN-9 to be delivered before we push it to next agent.
    decoder = udrMassCreateDecoder("CBS.UFL_DSP_Header.DSP_Header_Decoder");    
}

consume {
    if(instanceOf(input, ResponseUDR)){ //Response
        debug("is ResponseUDR.");

        ResponseUDR resp = (ResponseUDR) input;        
        list<DSP_Header_TgIn> packetList = listCreate(DSP_Header_TgIn);
        udrMassDecode(decoder, packetList, resp.data, false);
        debug("Decoder Message: " + packetList);
        
         for (DSP_Header_TgIn fullPacket: packetList) {
            Matcher match = udrCreate(Matcher);
            match.uuid = fullPacket.I13ACQN + fullPacket.I13TMNO;
            debug("UUID : "+fullPacket.I13ACQN);            
            
            //
            list<MBASE_Header_With_Payload_TI> mbaseList = listCreate(MBASE_Header_With_Payload_TI);
            udrDecode("MBASE_Header_With_Payload_Decode",mbaseList,fullPacket.data);
            MBASE_Header_With_Payload_TI mbase = listGet(mbaseList,0);
            debug("DSP Response Code : " + fullPacket.I13MSTA);
            //debug(mbase);
            if(mbase.data != null){
                debug("MBase Data");
                debug(baToStr(mbase.data, "IBM-Thai"));
            }else{
                debug("MBASE data empty");
            }
            debug("------------------------------");
            //
            
            match.tcpResponse = fullPacket;
            udrRoute(match);            
        }
    }

    if(instanceOf(input, ConnectionStateUDR)){ //ConnectionState
        debug("is ConnectionStateUDR.");
    }
    
    if(instanceOf(input, ErrorUDR)){ //Error
        debug("is ErrorUDR.");
    }    
}]]></string>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Source code active" value="true"/>
                  <string name="Source code extref key" null="true"/>
                  <enum name="Source code fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Source code mod" value="false"/>
                  <boolean name="Source code pres" value="true"/>
                  <object name="UDR types">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <array classname="com.digitalroute.devkit.drudr.DRTypeInfo" name="Object Internal" size="3">
                              <storable name="0" storable-id="dr.DRTypeInfo" ver="1.0">
                                 <string name="TypeName" value="TCPIP.ConnectionStateUDR"/>
                              </storable>
                              <storable name="1" storable-id="dr.DRTypeInfo" ver="1.0">
                                 <string name="TypeName" value="TCPIP.ErrorUDR"/>
                              </storable>
                              <storable name="2" storable-id="dr.DRTypeInfo" ver="1.0">
                                 <string name="TypeName" value="TCPIP.ResponseUDR"/>
                              </storable>
                           </array>
                        </object>
                     </storable>
                  </object>
                  <boolean name="UDR types active" value="true"/>
                  <string name="UDR types extref key" null="true"/>
                  <enum name="UDR types fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="UDR types mod" value="false"/>
                  <boolean name="UDR types pres" value="true"/>
               </storable>
            </storable>
         </array>
         <string name="Name" value="WaitPackets"/>
      </storable>
      <storable name="11" storable-id="dr.WfNode" ver="2.0">
         <string name="Classname"><![CDATA[com.digitalroute.wfc.aggregation.AggregationRealtimeInsp]]></string>
         <array classname="com.digitalroute.wf.WfNodeConfig" name="Configuration" size="1">
            <storable name="0" storable-id="dr.WfNodeConfig" ver="1.0">
               <string name="Classname"><![CDATA[com.digitalroute.wfc.aggregation.AggregationRealtimeInsp]]></string>
               <storable name="Data" storable-id="dr.AggregationConfig" ver="10.6">
                  <object name="Commit Count">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <int name="Object Internal" value="100"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Commit Count active" value="true"/>
                  <string name="Commit Count extref key" null="true"/>
                  <enum name="Commit Count fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Commit Count mod" value="false"/>
                  <boolean name="Commit Count pres" value="true"/>
                  <object name="Commit Timeout">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <int name="Object Internal" value="60"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Commit Timeout active" value="true"/>
                  <string name="Commit Timeout extref key" null="true"/>
                  <enum name="Commit Timeout fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Commit Timeout mod" value="false"/>
                  <boolean name="Commit Timeout pres" value="true"/>
                  <object name="Default Timeout">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <int name="Object Internal" value="60"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Default Timeout active" value="true"/>
                  <string name="Default Timeout extref key" null="true"/>
                  <enum name="Default Timeout fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Default Timeout mod" value="false"/>
                  <boolean name="Default Timeout pres" value="true"/>
                  <object name="Defragmentation">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <enum name="Object Internal" storable-id="dr.DefragType" value="NONE"/>
                        </object>
                     </storable>
                  </object>
                  <object name="Defragmentation After Each Batch Time Limit">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <int name="Object Internal" value="5"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Defragmentation After Each Batch Time Limit active" value="false"/>
                  <string name="Defragmentation After Each Batch Time Limit extref key" null="true"/>
                  <enum name="Defragmentation After Each Batch Time Limit fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Defragmentation After Each Batch Time Limit mod" value="false"/>
                  <boolean name="Defragmentation After Each Batch Time Limit pres" value="true"/>
                  <object name="Defragmentation After Number of Batches">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <int name="Object Internal" value="1"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Defragmentation After Number of Batches active" value="false"/>
                  <string name="Defragmentation After Number of Batches extref key" null="true"/>
                  <enum name="Defragmentation After Number of Batches fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Defragmentation After Number of Batches mod" value="false"/>
                  <boolean name="Defragmentation After Number of Batches pres" value="true"/>
                  <object name="Defragmentation File Age Limit">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <int name="Object Internal" value="5"/>
                        </object>
                     </storable>
                  </object>
                  <object name="Defragmentation File Age Limit Time Unit">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <string name="Object Internal" value="MINUTES"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Defragmentation File Age Limit Time Unit active" value="false"/>
                  <string name="Defragmentation File Age Limit Time Unit extref key" null="true"/>
                  <enum name="Defragmentation File Age Limit Time Unit fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Defragmentation File Age Limit Time Unit mod" value="false"/>
                  <boolean name="Defragmentation File Age Limit Time Unit pres" value="true"/>
                  <boolean name="Defragmentation File Age Limit active" value="false"/>
                  <string name="Defragmentation File Age Limit extref key" null="true"/>
                  <enum name="Defragmentation File Age Limit fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Defragmentation File Age Limit mod" value="false"/>
                  <boolean name="Defragmentation File Age Limit pres" value="true"/>
                  <boolean name="Defragmentation active" value="false"/>
                  <string name="Defragmentation extref key" null="true"/>
                  <enum name="Defragmentation fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Defragmentation mod" value="false"/>
                  <boolean name="Defragmentation pres" value="true"/>
                  <object name="Disable Timeout">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <boolean name="Object Internal" value="false"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Disable Timeout active" value="true"/>
                  <string name="Disable Timeout extref key" null="true"/>
                  <enum name="Disable Timeout fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Disable Timeout mod" value="false"/>
                  <boolean name="Disable Timeout pres" value="true"/>
                  <object name="Interval Timeout">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <int name="Object Internal" value="60"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Interval Timeout active" value="true"/>
                  <string name="Interval Timeout extref key" null="true"/>
                  <enum name="Interval Timeout fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Interval Timeout mod" value="false"/>
                  <boolean name="Interval Timeout pres" value="true"/>
                  <object name="Main script">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <string name="Object Internal"><![CDATA[sessionInit {
    session.match = udrCreate(Matcher);    
}

consume {
    debug(input.uuid);
    if (input.socketRequest!=null) {
        debug("Socket Request");
        session.match.socketRequest = input.socketRequest;
        session.match.reference = input.reference;
        session.match.sequence = input.sequence;
        //session.match.requestDatetime = input.requestDatetime;
        //session.match.requestMillisec = input.requestMillisec;
    }
    
    if (input.tcpResponse!=null) {
        debug("TCP Response");
        session.match.tcpResponse = input.tcpResponse;
    }
    
    if (session.match.socketRequest!=null && session.match.tcpResponse!=null) {
        debug("Matched");
        udrRoute(session.match);
        sessionRemove(session);
    } else {
        debug("Unmatched");
    }
}]]></string>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Main script active" value="true"/>
                  <string name="Main script extref key" null="true"/>
                  <enum name="Main script fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Main script mod" value="false"/>
                  <boolean name="Main script pres" value="true"/>
                  <object name="No Match">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <int name="Object Internal" value="0"/>
                        </object>
                     </storable>
                  </object>
                  <object name="No Match Router">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <string name="Object Internal" value="toCheckResponseFromSL"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="No Match Router active" value="true"/>
                  <string name="No Match Router extref key" null="true"/>
                  <enum name="No Match Router fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="No Match Router mod" value="false"/>
                  <boolean name="No Match Router pres" value="true"/>
                  <boolean name="No Match active" value="true"/>
                  <string name="No Match extref key" null="true"/>
                  <enum name="No Match fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="No Match mod" value="false"/>
                  <boolean name="No Match pres" value="true"/>
                  <object name="No Storage Behaviour">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <int name="Object Internal" value="0"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="No Storage Behaviour active" value="true"/>
                  <string name="No Storage Behaviour extref key" null="true"/>
                  <enum name="No Storage Behaviour fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="No Storage Behaviour mod" value="false"/>
                  <boolean name="No Storage Behaviour pres" value="true"/>
                  <object name="No Storage Router">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <null name="Object Internal"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="No Storage Router active" value="true"/>
                  <string name="No Storage Router extref key" null="true"/>
                  <enum name="No Storage Router fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="No Storage Router mod" value="false"/>
                  <boolean name="No Storage Router pres" value="true"/>
                  <object name="Null Timeout">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <int name="Object Internal" value="2"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Null Timeout active" value="true"/>
                  <string name="Null Timeout extref key" null="true"/>
                  <enum name="Null Timeout fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Null Timeout mod" value="false"/>
                  <boolean name="Null Timeout pres" value="true"/>
                  <object name="Profile Key">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <storable name="Object Internal" storable-id="dr.DRConfiguration" ver="1.0">
                              <string name="Folder" value="NCB"/>
                              <string name="Key" value="MZ1527225458927"/>
                              <string name="Name" value="PRF_Aggregation_NCB"/>
                              <string name="Type" value="Aggregation Profile"/>
                           </storable>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Profile Key active" value="true"/>
                  <string name="Profile Key extref key" null="true"/>
                  <enum name="Profile Key fit" storable-id="dr.DRFieldInstanceType" value="DEFAULT"/>
                  <boolean name="Profile Key mod" value="false"/>
                  <boolean name="Profile Key pres" value="true"/>
                  <object name="Read Only">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <boolean name="Object Internal" value="false"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Read Only active" value="true"/>
                  <string name="Read Only extref key" null="true"/>
                  <enum name="Read Only fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Read Only mod" value="false"/>
                  <boolean name="Read Only pres" value="true"/>
               </storable>
            </storable>
         </array>
         <string name="Name" value="Aggregation"/>
      </storable>
      <storable name="12" storable-id="dr.WfNode" ver="2.0">
         <string name="Classname"><![CDATA[com.digitalroute.mz.diskrtforwarding.agent.RealTimeDiskFwdInsp]]></string>
         <array classname="com.digitalroute.wf.WfNodeConfig" name="Configuration" size="2">
            <storable name="0" storable-id="dr.WfNodeConfig" ver="1.0">
               <string name="Classname"><![CDATA[com.digitalroute.mz.diskrtforwarding.agent.RealTimeDiskFwdInsp]]></string>
               <storable name="Data" storable-id="dr.RealTimeDiskFwdConfig" ver="7.0">
                  <object name="BackPressureBufferLimit">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <int name="Object Internal" value="100"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="BackPressureBufferLimit active" value="true"/>
                  <string name="BackPressureBufferLimit extref key" null="true"/>
                  <enum name="BackPressureBufferLimit fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="BackPressureBufferLimit mod" value="false"/>
                  <boolean name="BackPressureBufferLimit pres" value="true"/>
                  <object name="BackPressureBufferTimeout">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <int name="Object Internal" value="10"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="BackPressureBufferTimeout active" value="true"/>
                  <string name="BackPressureBufferTimeout extref key" null="true"/>
                  <enum name="BackPressureBufferTimeout fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="BackPressureBufferTimeout mod" value="false"/>
                  <boolean name="BackPressureBufferTimeout pres" value="true"/>
                  <object name="ByteCountBatch">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <int name="Object Internal" value="0"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="ByteCountBatch active" value="true"/>
                  <string name="ByteCountBatch extref key" null="true"/>
                  <enum name="ByteCountBatch fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="ByteCountBatch mod" value="false"/>
                  <boolean name="ByteCountBatch pres" value="true"/>
                  <object name="ByteCountSync">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <int name="Object Internal" value="0"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="ByteCountSync active" value="true"/>
                  <string name="ByteCountSync extref key" null="true"/>
                  <enum name="ByteCountSync fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="ByteCountSync mod" value="false"/>
                  <boolean name="ByteCountSync pres" value="true"/>
                  <object name="ClosingCriteriaDuration">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <int name="Object Internal" value="0"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="ClosingCriteriaDuration active" value="true"/>
                  <string name="ClosingCriteriaDuration extref key" null="true"/>
                  <enum name="ClosingCriteriaDuration fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="ClosingCriteriaDuration mod" value="false"/>
                  <boolean name="ClosingCriteriaDuration pres" value="true"/>
                  <object name="Compression">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <enum name="Object Internal" storable-id="dr.CompressionType" value="NONE"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Compression active" value="true"/>
                  <string name="Compression extref key" null="true"/>
                  <enum name="Compression fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Compression mod" value="false"/>
                  <boolean name="Compression pres" value="true"/>
                  <object name="ConcurrentBatchesLimit">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <int name="Object Internal" value="0"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="ConcurrentBatchesLimit active" value="true"/>
                  <string name="ConcurrentBatchesLimit extref key" null="true"/>
                  <enum name="ConcurrentBatchesLimit fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="ConcurrentBatchesLimit mod" value="false"/>
                  <boolean name="ConcurrentBatchesLimit pres" value="true"/>
                  <object name="Create Non-Existing Base Directory">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <boolean name="Object Internal" value="true"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Create Non-Existing Base Directory active" value="true"/>
                  <string name="Create Non-Existing Base Directory extref key" null="true"/>
                  <enum name="Create Non-Existing Base Directory fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Create Non-Existing Base Directory mod" value="false"/>
                  <boolean name="Create Non-Existing Base Directory pres" value="true"/>
                  <object name="Create empty files">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <boolean name="Object Internal" value="false"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Create empty files active" value="true"/>
                  <string name="Create empty files extref key" null="true"/>
                  <enum name="Create empty files fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Create empty files mod" value="false"/>
                  <boolean name="Create empty files pres" value="true"/>
                  <object name="Distribution directory">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <string name="Object Internal" value="/home/mzadmin/mzdata/ncb_log"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Distribution directory active" value="true"/>
                  <string name="Distribution directory extref key" null="true"/>
                  <enum name="Distribution directory fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Distribution directory mod" value="false"/>
                  <boolean name="Distribution directory pres" value="true"/>
                  <object name="FileRenameRetries">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <int name="Object Internal" value="999"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="FileRenameRetries active" value="true"/>
                  <string name="FileRenameRetries extref key" null="true"/>
                  <enum name="FileRenameRetries fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="FileRenameRetries mod" value="false"/>
                  <boolean name="FileRenameRetries pres" value="true"/>
                  <object name="Input type">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <enum name="Object Internal" storable-id="dr.InputType" value="MultiForwardingUDR"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Input type active" value="true"/>
                  <string name="Input type extref key" null="true"/>
                  <enum name="Input type fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Input type mod" value="false"/>
                  <boolean name="Input type pres" value="true"/>
                  <object name="OrphanSuffix">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <string name="Object Internal" value=""/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="OrphanSuffix active" value="true"/>
                  <string name="OrphanSuffix extref key" null="true"/>
                  <enum name="OrphanSuffix fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="OrphanSuffix mod" value="false"/>
                  <boolean name="OrphanSuffix pres" value="true"/>
                  <object name="RecoveryAttemptInterval">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <int name="Object Internal" value="30"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="RecoveryAttemptInterval active" value="true"/>
                  <string name="RecoveryAttemptInterval extref key" null="true"/>
                  <enum name="RecoveryAttemptInterval fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="RecoveryAttemptInterval mod" value="false"/>
                  <boolean name="RecoveryAttemptInterval pres" value="true"/>
                  <object name="Retries">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <int name="Object Internal" value="10"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Retries active" value="true"/>
                  <string name="Retries extref key" null="true"/>
                  <enum name="Retries fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Retries mod" value="false"/>
                  <boolean name="Retries pres" value="true"/>
                  <object name="SynchronizationInterval">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <int name="Object Internal" value="0"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="SynchronizationInterval active" value="true"/>
                  <string name="SynchronizationInterval extref key" null="true"/>
                  <enum name="SynchronizationInterval fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="SynchronizationInterval mod" value="false"/>
                  <boolean name="SynchronizationInterval pres" value="true"/>
                  <object name="UDRCountBatch">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <int name="Object Internal" value="1"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="UDRCountBatch active" value="true"/>
                  <string name="UDRCountBatch extref key" null="true"/>
                  <enum name="UDRCountBatch fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="UDRCountBatch mod" value="false"/>
                  <boolean name="UDRCountBatch pres" value="true"/>
                  <object name="UDRCountSync">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <int name="Object Internal" value="1"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="UDRCountSync active" value="true"/>
                  <string name="UDRCountSync extref key" null="true"/>
                  <enum name="UDRCountSync fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="UDRCountSync mod" value="false"/>
                  <boolean name="UDRCountSync pres" value="true"/>
                  <object name="WorkerQueueSize">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <int name="Object Internal" value="5000"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="WorkerQueueSize active" value="true"/>
                  <string name="WorkerQueueSize extref key" null="true"/>
                  <enum name="WorkerQueueSize fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="WorkerQueueSize mod" value="false"/>
                  <boolean name="WorkerQueueSize pres" value="true"/>
               </storable>
            </storable>
            <storable name="1" storable-id="dr.WfNodeConfig" ver="1.0">
               <string name="Classname" value="com.digitalroute.devkit.wf.DRFNTServiceInsp"/>
               <storable name="Data" storable-id="dr.DRFNTServiceConfig" ver="10.0">
                  <object name="FNT Entries">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <array classname="com.digitalroute.devkit.hidden.DRFNTServiceEntry" name="Object Internal" size="0"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="FNT Entries active" value="true"/>
                  <string name="FNT Entries extref key" null="true"/>
                  <enum name="FNT Entries fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="FNT Entries mod" value="false"/>
                  <boolean name="FNT Entries pres" value="true"/>
                  <object name="FNT list enabled">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <boolean name="Object Internal" value="false"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="FNT list enabled active" value="false"/>
                  <string name="FNT list enabled extref key" null="true"/>
                  <enum name="FNT list enabled fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="FNT list enabled mod" value="false"/>
                  <boolean name="FNT list enabled pres" value="true"/>
                  <object name="FNT_CREATE_DIRS">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <boolean name="Object Internal" value="true"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="FNT_CREATE_DIRS active" value="true"/>
                  <string name="FNT_CREATE_DIRS extref key" null="true"/>
                  <enum name="FNT_CREATE_DIRS fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="FNT_CREATE_DIRS mod" value="false"/>
                  <boolean name="FNT_CREATE_DIRS pres" value="true"/>
               </storable>
            </storable>
         </array>
         <string name="Name" value="SaveSLLog"/>
      </storable>
      <storable name="13" storable-id="dr.WfNode" ver="2.0">
         <string name="Classname" value="com.digitalroute.wfc.analysis.AnalysisRealtimeInsp"/>
         <array classname="com.digitalroute.wf.WfNodeConfig" name="Configuration" size="1">
            <storable name="0" storable-id="dr.WfNodeConfig" ver="1.0">
               <string name="Classname" value="com.digitalroute.wfc.analysis.AnalysisRealtimeInsp"/>
               <storable name="Data" storable-id="dr.StuffyMapperData" ver="1.0">
                  <object name="Source code">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <string name="Object Internal"><![CDATA[consume {
    debug("save socket error");
    debug(input);
}]]></string>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Source code active" value="true"/>
                  <string name="Source code extref key" null="true"/>
                  <enum name="Source code fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Source code mod" value="false"/>
                  <boolean name="Source code pres" value="true"/>
                  <object name="UDR types">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <array classname="com.digitalroute.devkit.drudr.DRTypeInfo" name="Object Internal" size="1">
                              <storable name="0" storable-id="dr.DRTypeInfo" ver="1.0">
                                 <string name="TypeName" value="diskrtforwarding.ErrorUDR"/>
                              </storable>
                           </array>
                        </object>
                     </storable>
                  </object>
                  <boolean name="UDR types active" value="true"/>
                  <string name="UDR types extref key" null="true"/>
                  <enum name="UDR types fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="UDR types mod" value="false"/>
                  <boolean name="UDR types pres" value="true"/>
               </storable>
            </storable>
         </array>
         <string name="Name" value="SaveSLLogError"/>
      </storable>
      <storable name="14" storable-id="dr.WfNode" ver="2.0">
         <string name="Classname"><![CDATA[com.digitalroute.pythonagents.agent.PythonRealtimeProcessingAgentInsp]]></string>
         <array classname="com.digitalroute.wf.WfNodeConfig" name="Configuration" size="1">
            <storable name="0" storable-id="dr.WfNodeConfig" ver="1.0">
               <string name="Classname"><![CDATA[com.digitalroute.pythonagents.agent.PythonRealtimeProcessingAgentInsp]]></string>
               <storable name="Data" storable-id="dr.PythonAgentData" ver="8.1">
                  <object name="Input Types">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <array classname="com.digitalroute.devkit.drudr.DRTypeInfo" name="Object Internal" size="1">
                              <storable name="0" storable-id="dr.DRTypeInfo" ver="1.0">
                                 <string name="TypeName" value="PulseUDR"/>
                              </storable>
                           </array>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Input Types active" value="true"/>
                  <string name="Input Types extref key" null="true"/>
                  <enum name="Input Types fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Input Types mod" value="false"/>
                  <boolean name="Input Types pres" value="true"/>
                  <object name="Interpreter">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <storable name="Object Internal" storable-id="dr.DRConfiguration" ver="1.0">
                              <string name="Folder" value="NCB"/>
                              <string name="Key" value="MZ1526370701671"/>
                              <string name="Name" value="PRF_PythonNCB"/>
                              <string name="Type" value="Python Interpreter Profile"/>
                           </storable>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Interpreter active" value="true"/>
                  <string name="Interpreter extref key" null="true"/>
                  <enum name="Interpreter fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Interpreter mod" value="false"/>
                  <boolean name="Interpreter pres" value="true"/>
                  <object name="MIMs">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <array classname="com.digitalroute.devkit.wf.DRMIMEntry" name="Object Internal" size="0"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="MIMs active" value="true"/>
                  <string name="MIMs extref key" null="true"/>
                  <enum name="MIMs fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="MIMs mod" value="false"/>
                  <boolean name="MIMs pres" value="true"/>
                  <object name="Output Types">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <array classname="com.digitalroute.pythonagents.OutputTypeInfo" name="Object Internal" size="1">
                              <storable name="0" storable-id="dr.PythonOutputTypeInfo" ver="1.0">
                                 <string name="route" null="true"/>
                                 <storable name="udrTypeInfo" storable-id="dr.DRTypeInfo" ver="1.0">
                                    <string name="TypeName" value="bytearray"/>
                                 </storable>
                              </storable>
                           </array>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Output Types active" value="true"/>
                  <string name="Output Types extref key" null="true"/>
                  <enum name="Output Types fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Output Types mod" value="false"/>
                  <boolean name="Output Types pres" value="true"/>
                  <object name="Source Code">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <string name="Object Internal"><![CDATA[def consume(input):
    
    import datetime
    dateStr = datetime.date.today().strftime("%Y%m%d")
    debug("date str : " + dateStr)
    
    directory = "/home/mzadmin/mzdata/ncb_log/request_from_sl_log/done/" + dateStr
    #debug("dir name : " + directory)
    
    import os
    if not os.path.exists(directory):
        os.makedirs(directory)
        debug("make dir.")
    else:
        debug("dir exist.")
    
    checkedDate = dateStr
    
    out = bytearray()
    udrRoute(out)
    
    
    #pass
]]></string>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Source Code active" value="true"/>
                  <string name="Source Code extref key" null="true"/>
                  <enum name="Source Code fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Source Code mod" value="false"/>
                  <boolean name="Source Code pres" value="true"/>
               </storable>
            </storable>
         </array>
         <string name="Name" value="CheckDir"/>
      </storable>
      <storable name="15" storable-id="dr.WfNode" ver="2.0">
         <string name="Classname"><![CDATA[com.digitalroute.pythonagents.agent.PythonRealtimeProcessingAgentInsp]]></string>
         <array classname="com.digitalroute.wf.WfNodeConfig" name="Configuration" size="1">
            <storable name="0" storable-id="dr.WfNodeConfig" ver="1.0">
               <string name="Classname"><![CDATA[com.digitalroute.pythonagents.agent.PythonRealtimeProcessingAgentInsp]]></string>
               <storable name="Data" storable-id="dr.PythonAgentData" ver="8.1">
                  <object name="Input Types">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <array classname="com.digitalroute.devkit.drudr.DRTypeInfo" name="Object Internal" size="1">
                              <storable name="0" storable-id="dr.UltraClientInfo" ver="1.0">
                                 <string name="FormatName" value="Ultra.UFL_MBASE_CFC810001IR"/>
                                 <string name="TypeName"><![CDATA[Ultra.UFL_MBASE_CFC810001IR.CFC810001I_PYTHON_DATASET_TI]]></string>
                              </storable>
                           </array>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Input Types active" value="true"/>
                  <string name="Input Types extref key" null="true"/>
                  <enum name="Input Types fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Input Types mod" value="false"/>
                  <boolean name="Input Types pres" value="true"/>
                  <object name="Interpreter">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <storable name="Object Internal" storable-id="dr.DRConfiguration" ver="1.0">
                              <string name="Folder" value="NCB"/>
                              <string name="Key" value="MZ1526370701671"/>
                              <string name="Name" value="PRF_PythonNCB"/>
                              <string name="Type" value="Python Interpreter Profile"/>
                           </storable>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Interpreter active" value="true"/>
                  <string name="Interpreter extref key" null="true"/>
                  <enum name="Interpreter fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Interpreter mod" value="false"/>
                  <boolean name="Interpreter pres" value="true"/>
                  <object name="MIMs">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <array classname="com.digitalroute.devkit.wf.DRMIMEntry" name="Object Internal" size="0"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="MIMs active" value="true"/>
                  <string name="MIMs extref key" null="true"/>
                  <enum name="MIMs fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="MIMs mod" value="false"/>
                  <boolean name="MIMs pres" value="true"/>
                  <object name="Output Types">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <array classname="com.digitalroute.pythonagents.OutputTypeInfo" name="Object Internal" size="1">
                              <storable name="0" storable-id="dr.PythonOutputTypeInfo" ver="1.0">
                                 <string name="route" value="pymCheckResNCB"/>
                                 <storable name="udrTypeInfo" storable-id="dr.UltraClientInfo" ver="1.0">
                                    <string name="FormatName" value="Ultra.UFL_MBASE_CFC810010IR"/>
                                    <string name="TypeName"><![CDATA[Ultra.UFL_MBASE_CFC810010IR.CFC810010I_PYTHON_DATASET_TI]]></string>
                                 </storable>
                              </storable>
                           </array>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Output Types active" value="true"/>
                  <string name="Output Types extref key" null="true"/>
                  <enum name="Output Types fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Output Types mod" value="false"/>
                  <boolean name="Output Types pres" value="true"/>
                  <object name="Source Code">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <string name="Object Internal"><![CDATA[import requests
from ultra.Ultra.UFL_MBASE_CFC810010IR import CFC810010I_PYTHON_DATASET_TI
from datetime import datetime, date
import os

def consume(input):
    
    #declare
    #r = raw string literals
    requestNcbLogPath = r"/home/mzadmin/mzdata/ncb_log/request_to_ncb_log"
    xmlRequestSet = input
    xmlRequestBa = xmlRequestSet.XmlRequestBa
    xmlRequestStr = xmlRequestBa.decode('utf-8')
    refNo = xmlRequestSet.ReferenceNumber
    ncbRequestURI ="http://192.168.1.5:80/ncrs/servlet/xmladapter"
    #ncbRequestURI ="http://172.29.20.244:8080"
    rqTimeout = 30 #second
    headers = {'Content-Type': 'application/x-www-form-urlencoded'}
    payload = {'q': xmlRequestStr}
    
    #response data value
    resHeader = ""
    resData = ""
    resCode = 0
    resMsg = ""
    resOk = False
    reqURI = ncbRequestURI
    
    try:
        #send post request
        r = requests.post(ncbRequestURI, headers=headers, timeout=rqTimeout, data=payload)
        
        #response data
        debug("RESPONSE")
        resHeader = str(r.headers)
        #resData = r.text
        resData = r.content.decode("utf-8") 
        resCode = r.status_code
        resMsg = r.reason
        resOk = False
        if r.status_code == 200:
            resOk = True
         
    except Exception, e:
        debug("EXCEPTION!")
        debug(str(e))
        logError("NCB_flow_exception! Request to ncrs " + ncbRequestURI + ". , Error: " + str(e))
        resHeader = ""
        resData = ""
        resCode = 0
        resMsg = str(e)
        resOk = False
    
    '''    
    #test data
    fileData = ""
    filePath = "/home/mzadmin/mzdata/ncb_log/ncbres1.log"
    with open(filePath, 'r') as myfile:
        fileData=myfile.read().replace('\n', '')
    resData = fileData
    '''
    
    #save response log
    debug("Save response from NCB log")
    logDate = "{:%Y%m%d}".format(datetime.now())
    logDatetimefnt = "{:%Y%m%d_%H%M%S_}".format(datetime.now()) + "{:%f}".format(datetime.now())[:3]
    ncbResponseLogFileName = logDatetimefnt + "_" + refNo + "_response_xml_ncb.log"
    debug(ncbResponseLogFileName)
    
    #create full path file
    fullpathfile = os.path.join(requestNcbLogPath, logDate, ncbResponseLogFileName)
    debug("full path: " + fullpathfile)
    
    try:
        file = open(fullpathfile, "w")
        #file = open(requestNcbLogPath + "/" + logDate + "/" + ncbResponseLogFileName, "w")
        
        responseString = ""
        if resOk == False:
            responseString = "Response Error!" + "\r\n"
            responseString = responseString + "Ref No: " + refNo + "\r\n"
            responseString = responseString + "request URI: " + reqURI + "\r\n"
            responseString = responseString + "Response Code: " + str(resCode) + "\r\n"
            responseString = responseString + "Response Message: " + resMsg + "\r\n"
            responseString = responseString + "Response Header: " + resHeader + "\r\n"
            responseString = responseString + "--Response Data--" + "\r\n"
            responseString = responseString + resData + "\r\n"
            responseString = responseString + "--/Response Data--" + "\r\n"
        else:
            responseString = "Response Received" + "\r\n"
            responseString = responseString + "Ref No: " + refNo + "\r\n"
            responseString = responseString + "request URI: " + reqURI + "\r\n"
            responseString = responseString + "Response Code: " + str(resCode) + "\r\n"
            responseString = responseString + "Response Message: " + resMsg + "\r\n"
            responseString = responseString + "Response Header: " + resHeader + "\r\n"
            responseString = responseString + "--Response Data--" + "\r\n"
            responseString = responseString + resData + "\r\n"
            responseString = responseString + "--/Response Data--" + "\r\n"
        file.write(responseString)
        file.close()
    
        #send to check response object
        debug("send dataset to check response object")
        dataset = udrCreate(CFC810010I_PYTHON_DATASET_TI)
        dataset.Cfc810010Ba = bytearray(resData,"utf-8")
        dataset.RefNoBa =  bytearray(refNo,"utf-8")
        udrRoute(dataset,"pymCheckResNCB");
        debug("--------------------")
        
    except Exception, e:
            debug("NCB_flow_exception! Cannot write log file " + fullpathfile + " , Error: " + str(e))
            logError("NCB_flow_exception! Cannot write log file " + fullpathfile + " , Error: " + str(e))
            
    
    #pass
]]></string>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Source Code active" value="true"/>
                  <string name="Source Code extref key" null="true"/>
                  <enum name="Source Code fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Source Code mod" value="false"/>
                  <boolean name="Source Code pres" value="true"/>
               </storable>
            </storable>
         </array>
         <string name="Name" value="PymRq"/>
      </storable>
      <storable name="16" storable-id="dr.WfNode" ver="2.0">
         <string name="Classname"><![CDATA[com.digitalroute.mz.pulse.agent.PulseCollectorAgentInspRT]]></string>
         <array classname="com.digitalroute.wf.WfNodeConfig" name="Configuration" size="1">
            <storable name="0" storable-id="dr.WfNodeConfig" ver="1.0">
               <string name="Classname"><![CDATA[com.digitalroute.mz.pulse.agent.PulseCollectorAgentInspRT]]></string>
               <storable name="Data" storable-id="dr.PulseData" ver="7.0">
                  <object name="Center Value">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <double name="Object Internal" value="1.0"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Center Value active" value="false"/>
                  <string name="Center Value extref key" null="true"/>
                  <enum name="Center Value fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Center Value mod" value="false"/>
                  <boolean name="Center Value pres" value="true"/>
                  <object name="Data">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <string name="Object Internal" value=""/>
                        </object>
                     </storable>
                  </object>
                  <object name="Data Entered">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <boolean name="Object Internal" value="true"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Data Entered active" value="true"/>
                  <string name="Data Entered extref key" null="true"/>
                  <enum name="Data Entered fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Data Entered mod" value="false"/>
                  <boolean name="Data Entered pres" value="true"/>
                  <object name="Data Size">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <int name="Object Internal" value="1"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Data Size active" value="false"/>
                  <string name="Data Size extref key" null="true"/>
                  <enum name="Data Size fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Data Size mod" value="false"/>
                  <boolean name="Data Size pres" value="true"/>
                  <object name="Data Unit">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <enum name="Object Internal" storable-id="dr.PulseDataSizeUnit" value="Bytes"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Data Unit active" value="false"/>
                  <string name="Data Unit extref key" null="true"/>
                  <enum name="Data Unit fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Data Unit mod" value="false"/>
                  <boolean name="Data Unit pres" value="true"/>
                  <boolean name="Data active" value="true"/>
                  <string name="Data extref key" null="true"/>
                  <enum name="Data fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Data mod" value="false"/>
                  <boolean name="Data pres" value="true"/>
                  <object name="Fixed Interval">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <long name="Object Internal" value="45"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Fixed Interval active" value="true"/>
                  <string name="Fixed Interval extref key" null="true"/>
                  <enum name="Fixed Interval fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Fixed Interval mod" value="false"/>
                  <boolean name="Fixed Interval pres" value="true"/>
                  <object name="Interval Type">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <string name="Object Internal" value="Fixed"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Interval Type active" value="true"/>
                  <string name="Interval Type extref key" null="true"/>
                  <enum name="Interval Type fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Interval Type mod" value="false"/>
                  <boolean name="Interval Type pres" value="true"/>
                  <object name="Poisson Rate">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <double name="Object Internal" value="1.0"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Poisson Rate active" value="false"/>
                  <string name="Poisson Rate extref key" null="true"/>
                  <enum name="Poisson Rate fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Poisson Rate mod" value="false"/>
                  <boolean name="Poisson Rate pres" value="true"/>
                  <object name="Random Order">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <boolean name="Object Internal" value="false"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Random Order active" value="true"/>
                  <string name="Random Order extref key" null="true"/>
                  <enum name="Random Order fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Random Order mod" value="false"/>
                  <boolean name="Random Order pres" value="true"/>
                  <object name="Random data">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <boolean name="Object Internal" value="false"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Random data active" value="true"/>
                  <string name="Random data extref key" null="true"/>
                  <enum name="Random data fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Random data mod" value="false"/>
                  <boolean name="Random data pres" value="true"/>
                  <object name="Range End">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <int name="Object Internal" value="10"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Range End active" value="false"/>
                  <string name="Range End extref key" null="true"/>
                  <enum name="Range End fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Range End mod" value="false"/>
                  <boolean name="Range End pres" value="true"/>
                  <object name="Range Start">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <int name="Object Internal" value="0"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Range Start active" value="false"/>
                  <string name="Range Start extref key" null="true"/>
                  <enum name="Range Start fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Range Start mod" value="false"/>
                  <boolean name="Range Start pres" value="true"/>
                  <object name="Rate Value Value">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <long name="Object Internal" value="1"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Rate Value Value active" value="false"/>
                  <string name="Rate Value Value extref key" null="true"/>
                  <enum name="Rate Value Value fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Rate Value Value mod" value="false"/>
                  <boolean name="Rate Value Value pres" value="true"/>
                  <object name="Sequential Order">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <boolean name="Object Internal" value="true"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Sequential Order active" value="true"/>
                  <string name="Sequential Order extref key" null="true"/>
                  <enum name="Sequential Order fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Sequential Order mod" value="false"/>
                  <boolean name="Sequential Order pres" value="true"/>
                  <object name="Sequential Range">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <boolean name="Object Internal" value="false"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Sequential Range active" value="true"/>
                  <string name="Sequential Range extref key" null="true"/>
                  <enum name="Sequential Range fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Sequential Range mod" value="false"/>
                  <boolean name="Sequential Range pres" value="true"/>
                  <object name="Start Value">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <long name="Object Internal" value="1"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Start Value active" value="false"/>
                  <string name="Start Value extref key" null="true"/>
                  <enum name="Start Value fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Start Value mod" value="false"/>
                  <boolean name="Start Value pres" value="true"/>
                  <object name="Stop Value">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <long name="Object Internal" value="10"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Stop Value active" value="false"/>
                  <string name="Stop Value extref key" null="true"/>
                  <enum name="Stop Value fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Stop Value mod" value="false"/>
                  <boolean name="Stop Value pres" value="true"/>
                  <object name="Time Unit">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <enum name="Object Internal" storable-id="dr.PulseTimeUnit" value="MINUTES"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Time Unit active" value="true"/>
                  <string name="Time Unit extref key" null="true"/>
                  <enum name="Time Unit fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Time Unit mod" value="false"/>
                  <boolean name="Time Unit pres" value="true"/>
                  <object name="Width Value">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <double name="Object Internal" value="1.0"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Width Value active" value="false"/>
                  <string name="Width Value extref key" null="true"/>
                  <enum name="Width Value fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Width Value mod" value="false"/>
                  <boolean name="Width Value pres" value="true"/>
               </storable>
            </storable>
         </array>
         <string name="Name" value="Pulse_KeepAlive"/>
      </storable>
      <storable name="17" storable-id="dr.WfNode" ver="2.0">
         <string name="Classname" value="com.digitalroute.wfc.analysis.AnalysisRealtimeInsp"/>
         <array classname="com.digitalroute.wf.WfNodeConfig" name="Configuration" size="1">
            <storable name="0" storable-id="dr.WfNodeConfig" ver="1.0">
               <string name="Classname" value="com.digitalroute.wfc.analysis.AnalysisRealtimeInsp"/>
               <storable name="Data" storable-id="dr.StuffyMapperData" ver="1.0">
                  <object name="Source code">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <string name="Object Internal"><![CDATA[import ultra.CBS.UFL_DSP_Header;
import ultra.CBS.UFL_MBASE_Header;
import apl.Common.APL_Common_MBASE;
import apl.Common.APL_Common_Utilities;
import apl.CBS.APL_UtilityService_MBASE;

consume {
     
    if(instanceOf(input,PulseUDR)){
        debug("--- Pulse keep alive ---");
        
        int sizeOfContent = 0;
        string uniqKey = generateAcquireReferenceNumberV2();
        bytearray socketRequest = null;
        debug("UUID : " + uniqKey);
        
        socketRequest = generateHandShakeConnectionRequest(uniqKey);
        
        debug(baToStr(socketRequest, "IBM-Thai"));
        udrRoute(socketRequest);
    }
    debug("--- END ----------------------");
}]]></string>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Source code active" value="true"/>
                  <string name="Source code extref key" null="true"/>
                  <enum name="Source code fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Source code mod" value="false"/>
                  <boolean name="Source code pres" value="true"/>
                  <object name="UDR types">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <array classname="com.digitalroute.devkit.drudr.DRTypeInfo" name="Object Internal" size="1">
                              <storable name="0" storable-id="dr.DRTypeInfo" ver="1.0">
                                 <string name="TypeName" value="PulseUDR"/>
                              </storable>
                           </array>
                        </object>
                     </storable>
                  </object>
                  <boolean name="UDR types active" value="true"/>
                  <string name="UDR types extref key" null="true"/>
                  <enum name="UDR types fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="UDR types mod" value="false"/>
                  <boolean name="UDR types pres" value="true"/>
               </storable>
            </storable>
         </array>
         <string name="Name" value="CreateKeepAliveSocket"/>
      </storable>
      <storable name="2" storable-id="dr.WfNode" ver="2.0">
         <string name="Classname" value="com.digitalroute.wfc.analysis.AnalysisRealtimeInsp"/>
         <array classname="com.digitalroute.wf.WfNodeConfig" name="Configuration" size="1">
            <storable name="0" storable-id="dr.WfNodeConfig" ver="1.0">
               <string name="Classname" value="com.digitalroute.wfc.analysis.AnalysisRealtimeInsp"/>
               <storable name="Data" storable-id="dr.StuffyMapperData" ver="1.0">
                  <object name="Source code">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <string name="Object Internal"><![CDATA[import ultra.RESTClient;
import ultra.CBS.UFL_DSP_Header;
import ultra.CBS.UFL_MBASE_Header;
import ultra.Ultra.UFL_MBASE_CFC810001IR;
import ultra.Ultra.UFL_MBASE_CFC810010IR;
import ultra.NCB.UFL_NcbSlRequestPack_Aggregation;

import apl.Common.APL_Common_Utilities;
import apl.NCB.APL_NCBService;

import ultra.FNT;
    mimPublish( global, "SaveXmlToDisk" , any );
    
consume {
    //string acqRefNo = generateAcquireReferenceNumber();
    string nowDateStr; dateToString(nowDateStr, dateCreateNow(), "yyyyMMdd");
    
    //"192.168.1.5";
    //"80";
    string ncbRequestUrl = "/ncrs/servlet/xmladapter";
    string ncbRequestCommand = "BB01001";
    
    try{
        //start request to NCB
        if(instanceOf(input,CFC810001I_PYTHON_DATASET_TI)){
            
            ////create request string
            CFC810001I_PYTHON_DATASET_TI inputDataset = (CFC810001I_PYTHON_DATASET_TI)input;
            string referenceNumber = inputDataset.ReferenceNumber;
            bytearray xmlRequestBa = inputDataset.XmlRequestBa;
            string xmlrequestBodyStr = baToStr(xmlRequestBa, "UTF-8");
            debug("REFNO: " + referenceNumber);
            debug(xmlrequestBodyStr);
            
            ////save request file by multiforwarding.
            debug("Start save xml request ncb");
            FNTUDR fntudr = udrCreate(FNTUDR);
            date logDatetime = dateCreateNow();
            string logDatetimefnt; dateToString(logDatetimefnt, logDatetime, "yyyyMMdd_HHmmss_SSS");                        
            bytearray requestXMLBa; strToBA(requestXMLBa, xmlrequestBodyStr);
            string saveFileName = logDatetimefnt + "_" + referenceNumber + "_" + ncbRequestCommand + "_request_xml_ncb.log";
            udrRoute(createMultiForwardingUDR("/request_to_ncb_log/" + nowDateStr, saveFileName, xmlRequestBa),"toDisk");
            debug("request xml saved");
            
            ////request to NCB
            udrRoute(inputDataset,"pythonRequestNCB");
            
            debug("END REQUEST----------------------------------------------");
        }
        
        //error from disk
        if(instanceOf(input, ErrorUDR)){
            debug("Save to disk error!");
            debug(input);
        }
        
        
    }catch(ExceptionDetails ex){
        debug("Exception: " + ex.message);    
    }
}]]></string>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Source code active" value="true"/>
                  <string name="Source code extref key" null="true"/>
                  <enum name="Source code fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Source code mod" value="false"/>
                  <boolean name="Source code pres" value="true"/>
                  <object name="UDR types">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <array classname="com.digitalroute.devkit.drudr.DRTypeInfo" name="Object Internal" size="3">
                              <storable name="0" storable-id="dr.DRTypeInfo" ver="1.0">
                                 <string name="TypeName" value="bytearray"/>
                              </storable>
                              <storable name="1" storable-id="dr.UltraClientInfo" ver="1.0">
                                 <string name="FormatName" value="Ultra.UFL_MBASE_CFC810001IR"/>
                                 <string name="TypeName"><![CDATA[Ultra.UFL_MBASE_CFC810001IR.CFC810001I_PYTHON_DATASET_TI]]></string>
                              </storable>
                              <storable name="2" storable-id="dr.DRTypeInfo" ver="1.0">
                                 <string name="TypeName" value="diskrtforwarding.ErrorUDR"/>
                              </storable>
                           </array>
                        </object>
                     </storable>
                  </object>
                  <boolean name="UDR types active" value="true"/>
                  <string name="UDR types extref key" null="true"/>
                  <enum name="UDR types fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="UDR types mod" value="false"/>
                  <boolean name="UDR types pres" value="true"/>
               </storable>
            </storable>
         </array>
         <string name="Name" value="CreateRequestToNCB"/>
      </storable>
      <storable name="3" storable-id="dr.WfNode" ver="2.0">
         <string name="Classname" value="com.digitalroute.wfc.analysis.AnalysisRealtimeInsp"/>
         <array classname="com.digitalroute.wf.WfNodeConfig" name="Configuration" size="1">
            <storable name="0" storable-id="dr.WfNodeConfig" ver="1.0">
               <string name="Classname" value="com.digitalroute.wfc.analysis.AnalysisRealtimeInsp"/>
               <storable name="Data" storable-id="dr.StuffyMapperData" ver="1.0">
                  <object name="Source code">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <string name="Object Internal"><![CDATA[consume {
    if(instanceOf(input,CFC810010I_PYTHON_DATASET_TI)){
        debug("response body");
        CFC810010I_PYTHON_DATASET_TI dataset = (CFC810010I_PYTHON_DATASET_TI)input;
        string refNo = strTrim(baToStr(dataset.RefNoBa, "UTF-8"));
        string xmlStr = strTrim(baToStr(dataset.Cfc810010Ba, "UTF-8"));
        debug(xmlStr);
        debug("----------------------------------");
        udrRoute(dataset);
    }
}]]></string>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Source code active" value="true"/>
                  <string name="Source code extref key" null="true"/>
                  <enum name="Source code fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Source code mod" value="false"/>
                  <boolean name="Source code pres" value="true"/>
                  <object name="UDR types">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <array classname="com.digitalroute.devkit.drudr.DRTypeInfo" name="Object Internal" size="1">
                              <storable name="0" storable-id="dr.UltraClientInfo" ver="1.0">
                                 <string name="FormatName" value="Ultra.UFL_MBASE_CFC810010IR"/>
                                 <string name="TypeName"><![CDATA[Ultra.UFL_MBASE_CFC810010IR.CFC810010I_PYTHON_DATASET_TI]]></string>
                              </storable>
                           </array>
                        </object>
                     </storable>
                  </object>
                  <boolean name="UDR types active" value="true"/>
                  <string name="UDR types extref key" null="true"/>
                  <enum name="UDR types fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="UDR types mod" value="false"/>
                  <boolean name="UDR types pres" value="true"/>
               </storable>
            </storable>
         </array>
         <string name="Name" value="CheckResponseFromNCB"/>
      </storable>
      <storable name="4" storable-id="dr.WfNode" ver="2.0">
         <string name="Classname"><![CDATA[com.digitalroute.mz.diskrtforwarding.agent.RealTimeDiskFwdInsp]]></string>
         <array classname="com.digitalroute.wf.WfNodeConfig" name="Configuration" size="2">
            <storable name="0" storable-id="dr.WfNodeConfig" ver="1.0">
               <string name="Classname"><![CDATA[com.digitalroute.mz.diskrtforwarding.agent.RealTimeDiskFwdInsp]]></string>
               <storable name="Data" storable-id="dr.RealTimeDiskFwdConfig" ver="7.0">
                  <object name="BackPressureBufferLimit">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <int name="Object Internal" value="100"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="BackPressureBufferLimit active" value="true"/>
                  <string name="BackPressureBufferLimit extref key" null="true"/>
                  <enum name="BackPressureBufferLimit fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="BackPressureBufferLimit mod" value="false"/>
                  <boolean name="BackPressureBufferLimit pres" value="true"/>
                  <object name="BackPressureBufferTimeout">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <int name="Object Internal" value="10"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="BackPressureBufferTimeout active" value="true"/>
                  <string name="BackPressureBufferTimeout extref key" null="true"/>
                  <enum name="BackPressureBufferTimeout fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="BackPressureBufferTimeout mod" value="false"/>
                  <boolean name="BackPressureBufferTimeout pres" value="true"/>
                  <object name="ByteCountBatch">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <int name="Object Internal" value="0"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="ByteCountBatch active" value="true"/>
                  <string name="ByteCountBatch extref key" null="true"/>
                  <enum name="ByteCountBatch fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="ByteCountBatch mod" value="false"/>
                  <boolean name="ByteCountBatch pres" value="true"/>
                  <object name="ByteCountSync">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <int name="Object Internal" value="0"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="ByteCountSync active" value="true"/>
                  <string name="ByteCountSync extref key" null="true"/>
                  <enum name="ByteCountSync fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="ByteCountSync mod" value="false"/>
                  <boolean name="ByteCountSync pres" value="true"/>
                  <object name="ClosingCriteriaDuration">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <int name="Object Internal" value="0"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="ClosingCriteriaDuration active" value="true"/>
                  <string name="ClosingCriteriaDuration extref key" null="true"/>
                  <enum name="ClosingCriteriaDuration fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="ClosingCriteriaDuration mod" value="false"/>
                  <boolean name="ClosingCriteriaDuration pres" value="true"/>
                  <object name="Compression">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <enum name="Object Internal" storable-id="dr.CompressionType" value="NONE"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Compression active" value="true"/>
                  <string name="Compression extref key" null="true"/>
                  <enum name="Compression fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Compression mod" value="false"/>
                  <boolean name="Compression pres" value="true"/>
                  <object name="ConcurrentBatchesLimit">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <int name="Object Internal" value="0"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="ConcurrentBatchesLimit active" value="true"/>
                  <string name="ConcurrentBatchesLimit extref key" null="true"/>
                  <enum name="ConcurrentBatchesLimit fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="ConcurrentBatchesLimit mod" value="false"/>
                  <boolean name="ConcurrentBatchesLimit pres" value="true"/>
                  <object name="Create Non-Existing Base Directory">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <boolean name="Object Internal" value="true"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Create Non-Existing Base Directory active" value="true"/>
                  <string name="Create Non-Existing Base Directory extref key" null="true"/>
                  <enum name="Create Non-Existing Base Directory fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Create Non-Existing Base Directory mod" value="false"/>
                  <boolean name="Create Non-Existing Base Directory pres" value="true"/>
                  <object name="Create empty files">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <boolean name="Object Internal" value="false"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Create empty files active" value="true"/>
                  <string name="Create empty files extref key" null="true"/>
                  <enum name="Create empty files fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Create empty files mod" value="false"/>
                  <boolean name="Create empty files pres" value="true"/>
                  <object name="Distribution directory">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <string name="Object Internal" value="/home/mzadmin/mzdata/ncb_log"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Distribution directory active" value="true"/>
                  <string name="Distribution directory extref key" null="true"/>
                  <enum name="Distribution directory fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Distribution directory mod" value="false"/>
                  <boolean name="Distribution directory pres" value="true"/>
                  <object name="FileRenameRetries">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <int name="Object Internal" value="999"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="FileRenameRetries active" value="true"/>
                  <string name="FileRenameRetries extref key" null="true"/>
                  <enum name="FileRenameRetries fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="FileRenameRetries mod" value="false"/>
                  <boolean name="FileRenameRetries pres" value="true"/>
                  <object name="Input type">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <enum name="Object Internal" storable-id="dr.InputType" value="MultiForwardingUDR"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Input type active" value="true"/>
                  <string name="Input type extref key" null="true"/>
                  <enum name="Input type fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Input type mod" value="false"/>
                  <boolean name="Input type pres" value="true"/>
                  <object name="OrphanSuffix">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <string name="Object Internal" value=""/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="OrphanSuffix active" value="true"/>
                  <string name="OrphanSuffix extref key" null="true"/>
                  <enum name="OrphanSuffix fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="OrphanSuffix mod" value="false"/>
                  <boolean name="OrphanSuffix pres" value="true"/>
                  <object name="RecoveryAttemptInterval">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <int name="Object Internal" value="30"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="RecoveryAttemptInterval active" value="true"/>
                  <string name="RecoveryAttemptInterval extref key" null="true"/>
                  <enum name="RecoveryAttemptInterval fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="RecoveryAttemptInterval mod" value="false"/>
                  <boolean name="RecoveryAttemptInterval pres" value="true"/>
                  <object name="Retries">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <int name="Object Internal" value="10"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Retries active" value="true"/>
                  <string name="Retries extref key" null="true"/>
                  <enum name="Retries fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Retries mod" value="false"/>
                  <boolean name="Retries pres" value="true"/>
                  <object name="SynchronizationInterval">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <int name="Object Internal" value="0"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="SynchronizationInterval active" value="true"/>
                  <string name="SynchronizationInterval extref key" null="true"/>
                  <enum name="SynchronizationInterval fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="SynchronizationInterval mod" value="false"/>
                  <boolean name="SynchronizationInterval pres" value="true"/>
                  <object name="UDRCountBatch">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <int name="Object Internal" value="1"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="UDRCountBatch active" value="true"/>
                  <string name="UDRCountBatch extref key" null="true"/>
                  <enum name="UDRCountBatch fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="UDRCountBatch mod" value="false"/>
                  <boolean name="UDRCountBatch pres" value="true"/>
                  <object name="UDRCountSync">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <int name="Object Internal" value="1"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="UDRCountSync active" value="true"/>
                  <string name="UDRCountSync extref key" null="true"/>
                  <enum name="UDRCountSync fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="UDRCountSync mod" value="false"/>
                  <boolean name="UDRCountSync pres" value="true"/>
                  <object name="WorkerQueueSize">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <int name="Object Internal" value="5000"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="WorkerQueueSize active" value="true"/>
                  <string name="WorkerQueueSize extref key" null="true"/>
                  <enum name="WorkerQueueSize fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="WorkerQueueSize mod" value="false"/>
                  <boolean name="WorkerQueueSize pres" value="true"/>
               </storable>
            </storable>
            <storable name="1" storable-id="dr.WfNodeConfig" ver="1.0">
               <string name="Classname" value="com.digitalroute.devkit.wf.DRFNTServiceInsp"/>
               <storable name="Data" storable-id="dr.DRFNTServiceConfig" ver="10.0">
                  <object name="FNT Entries">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <array classname="com.digitalroute.devkit.hidden.DRFNTServiceEntry" name="Object Internal" size="0"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="FNT Entries active" value="true"/>
                  <string name="FNT Entries extref key" null="true"/>
                  <enum name="FNT Entries fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="FNT Entries mod" value="false"/>
                  <boolean name="FNT Entries pres" value="true"/>
                  <object name="FNT list enabled">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <boolean name="Object Internal" value="false"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="FNT list enabled active" value="false"/>
                  <string name="FNT list enabled extref key" null="true"/>
                  <enum name="FNT list enabled fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="FNT list enabled mod" value="false"/>
                  <boolean name="FNT list enabled pres" value="true"/>
                  <object name="FNT_CREATE_DIRS">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <boolean name="Object Internal" value="true"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="FNT_CREATE_DIRS active" value="true"/>
                  <string name="FNT_CREATE_DIRS extref key" null="true"/>
                  <enum name="FNT_CREATE_DIRS fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="FNT_CREATE_DIRS mod" value="false"/>
                  <boolean name="FNT_CREATE_DIRS pres" value="true"/>
               </storable>
            </storable>
         </array>
         <string name="Name" value="saveLog"/>
      </storable>
      <storable name="5" storable-id="dr.WfNode" ver="2.0">
         <string name="Classname" value="com.digitalroute.wfc.analysis.AnalysisRealtimeInsp"/>
         <array classname="com.digitalroute.wf.WfNodeConfig" name="Configuration" size="1">
            <storable name="0" storable-id="dr.WfNodeConfig" ver="1.0">
               <string name="Classname" value="com.digitalroute.wfc.analysis.AnalysisRealtimeInsp"/>
               <storable name="Data" storable-id="dr.StuffyMapperData" ver="1.0">
                  <object name="Source code">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <string name="Object Internal"><![CDATA[//ultra
import ultra.CBS.UFL_DSP_Header;
import ultra.CBS.UFL_MBASE_Header;
import ultra.CBS.UFL_Aggregation;
import ultra.Ultra.UFL_MBASE_CFC810001IR;
import ultra.Ultra.UFL_MBASE_CFC810010IR;
import ultra.TCPIP;
import ultra.CBS.UFL_Aggregation;

//apl
import apl.Common.APL_Common_Utilities;
import apl.NCB.APL_NCBService;

import ultra.FNT;
    mimPublish( global, "SaveSocketSLRequestToDisk" , any );
    
consume {
    string acqRefNo = generateAcquireReferenceNumberV2();
    
    if(instanceOf(input,CFC810010I_RQ_TI)){        
        //debug(input);
        //debug("-----------------------------------------");
        
        CFC810010I_RQ_TI cfc810010Obj = (CFC810010I_RQ_TI)input;
        bytearray requestSocket = createRequestSocketCfc810010ToSL(acqRefNo, cfc810010Obj);
        string referenceNumber = cfc810010Obj.ReferenceNumber;
        string runningNumber = cfc810010Obj.RunningNumber;
        
        debug(referenceNumber + " - " + runningNumber);
        debug("-----------------------------------------");
        debug(cfc810010Obj);        
        debug("-----------------------------------------");
        debug(baToStr(requestSocket, "IBM-Thai"));
        debug("-----------------------------------------");
        debug("-----------------------------------------");
        debug("-----------------------------------------");
        
        debug("Set SL IP and Port");
        //set SL port
        RequestUDR tcpReq = udrCreate(RequestUDR);
        RemoteHostConfig remoteCon = udrCreate(RemoteHostConfig);
        remoteCon.host = "cbssibs.ghb.co.th"; //PROD
        remoteCon.port = 18701; //PROD
        //remoteCon.host = "172.29.48.11"; //SIT
        //remoteCon.port = 21321; //SIT
        tcpReq.remoteHost = remoteCon;
        tcpReq.data = requestSocket;
        //debug("tcpip request");
        //debug(tcpReq);
        //debug("end request");
        
//ok variable for test
        boolean ok = true;
        if(ok){     
            //send request result
            udrRoute(tcpReq,"toSocket");
            debug("Request socket sent");
        }
        
        //save request to SL log
        FNTUDR fntudr = udrCreate(FNTUDR);
        string nowDateStr; dateToString(nowDateStr, dateCreateNow(), "yyyyMMdd");
        date logDatetime = dateCreateNow();
        string logDatetimefnt; dateToString(logDatetimefnt, logDatetime, "yyyyMMdd_HHmmss_SSS");
        //string saveFileName = logDatetimefnt + "_" + referenceNumber + "_" + runningNumber + "_CFC810010_" + "_request_socket_sl.req";            
        //udrRoute(createMultiForwardingUDR("/request_to_sl_log/" + nowDateStr, saveFileName, requestSocket),"saveSLRequest");
        string saveFileName = logDatetimefnt + "_" + referenceNumber + "_" + runningNumber + "_CFC810010_" + "_request_socket_sl.log";
        string logRequestSocketStr = baToStr(requestSocket, "IBM-Thai");
        bytearray logRequestSocketBa; strToBA(logRequestSocketBa, logRequestSocketStr, "UTF-8");
        udrRoute(createMultiForwardingUDR("/request_to_sl_log/" + nowDateStr, saveFileName, logRequestSocketBa),"saveSLRequest");
        debug("request socket to SL saved");
        
        /*
        ////save request to action log
        debug("Start save action log request SL");
        string actionLogDatetimeFull; dateToString(actionLogDatetimeFull, logDatetime, "yyyy-MM-dd HH:mm:ss_SSS");
        string actionLogDatetime; dateToString(actionLogDatetime, logDatetime, "yyyyMMdd");
        string actionLogFileName = actionLogDatetime + "_request_SL_action_log.log";
        string actionLogPath = "/action_log/" + actionLogDatetime;            
        
        list<string> fileList = fileListFiles("/home/mzadmin/mzdata/ncb_log" + actionLogPath);
        debug("current action log file list.");
        boolean foundFile = false;
        string loadActionLogStr = "";
        if(fileList != null){
            for(int i = 0 ; i < listSize(fileList); i++){
                if(listGet(fileList,i) == actionLogFileName){
                    foundFile = true;                        
                }
            }
            if(foundFile){
                debug("File found. "  + actionLogFileName);
                bytearray loadActionLog = readFileBinary("/home/mzadmin/mzdata/ncb_log" + actionLogPath + "/" + actionLogFileName);
                loadActionLogStr = baToStr(loadActionLog);
                string deleteFileResult = fileDelete("/home/mzadmin/mzdata/ncb_log" + actionLogPath + "/" + actionLogFileName);
                if(deleteFileResult==null){
                    debug("delete origin file success.");
                }else{
                    debug("delete origin file failure. " + deleteFileResult);
                }
            }
        }
        string actionMessage = loadActionLogStr + actionLogDatetimeFull + " RefNo: " + referenceNumber + " RunningNo: " + runningNumber +  " Socket request SL saved. (" + saveFileName + ") \r\n";
        bytearray contentBa; strToBA(contentBa, actionMessage);
        udrRoute(createMultiForwardingUDR("/action_log/" + actionLogDatetime, actionLogFileName, contentBa),"saveSLRequest");            
        debug("action log request SL saved");
        */
        
        //aggregation
        debug("Create matcher for aggregation");
        Matcher match = udrCreate(Matcher);
        match.uuid = acqRefNo;
        match.reference = referenceNumber;
        match.requestDatetime = dateCreateNow();
        match.requestMillisec = dateCreateNowMilliseconds();
        match.socketRequest = requestSocket;
        int seq = 0; strToInt(seq, runningNumber);
        match.sequence = seq;
        //debug("-----------------------------------------");
        //debug("Matcher");
        //debug(match);
        udrRoute(match, "toAggr1");
        
        debug("-----------------------------------------");
        debug("-----------------------------------------");
        debug("-----------------------------------------");
    }
    
}]]></string>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Source code active" value="true"/>
                  <string name="Source code extref key" null="true"/>
                  <enum name="Source code fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Source code mod" value="false"/>
                  <boolean name="Source code pres" value="true"/>
                  <object name="UDR types">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <array classname="com.digitalroute.devkit.drudr.DRTypeInfo" name="Object Internal" size="1">
                              <storable name="0" storable-id="dr.UltraClientInfo" ver="1.0">
                                 <string name="FormatName" value="Ultra.UFL_MBASE_CFC810010IR"/>
                                 <string name="TypeName" value="Ultra.UFL_MBASE_CFC810010IR.CFC810010I_RQ_TI"/>
                              </storable>
                           </array>
                        </object>
                     </storable>
                  </object>
                  <boolean name="UDR types active" value="true"/>
                  <string name="UDR types extref key" null="true"/>
                  <enum name="UDR types fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="UDR types mod" value="false"/>
                  <boolean name="UDR types pres" value="true"/>
               </storable>
            </storable>
         </array>
         <string name="Name" value="CreateRequestSocketToSL"/>
      </storable>
      <storable name="6" storable-id="dr.WfNode" ver="2.0">
         <string name="Classname" value="com.digitalroute.wfc.tcpipforw.TCPIPForwInsp"/>
         <array classname="com.digitalroute.wf.WfNodeConfig" name="Configuration" size="1">
            <storable name="0" storable-id="dr.WfNodeConfig" ver="1.0">
               <string name="Classname" value="com.digitalroute.wfc.tcpipforw.TCPIPForwInsp"/>
               <storable name="Data" storable-id="dr.TCPIPForwData" ver="7.0">
                  <object name="Advanced properties">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <string name="Object Internal"><![CDATA[# If needed for optimizing the performance, properties controlling the agent 
# can be customized here. If the properties are commented out, default values are used.

# Specifies the high water mark of the write buffer. If the number of bytes queued in the write buffer exceeds this value, the sender cannot send more data.
# writeBufferHighWaterMark 65536

# Specifies the low water mark of the write buffer.  If the number of bytes queued in the write buffer exceeds the high water mark 
# and then drops below the low water mark, sender can start to send data again.
# writeBufferLowWaterMark 32768

# Specifies the size in bytes of the socket's data receive buffer.
# receiveBufferSize 1048576

# Specifies the size in bytes of the socket's data send buffer.
# sendBufferSize 1048576

# Set this property to "true" to keep the connection alive by sending probes across the network.
# keepAlive false

# Set this property to "true" to disable Nagle's algorithm for this connection.
# tcpNoDelay false

# Set this property to "true" to allow other sockets to bind() to this port, unless there is an active listening socket bound to the port already.
# reuseAddress false

# When an event arrives to the collector, the delivery will, by default, be made on a different thread than the one the message arrived on. 
# This gives the best overall throughput and scalability, especially on multi-core machines. However, it also introduces some extra latency due to the extra context switch required. 
# If you want the lowest latency, and can accept the possible reduction in throughput, then you can set direct-deliver to "true".
# direct-deliver true

# Specifies the time interval (in ms) in which the agent will try to reconnect. 
# Note that the first reconnect attempt will be made directly.
# reconnectInterval 3000

# Specifies the queue size in number of UDRs for the Forwarding Agent.
# forwardingQueueSize 1000

# Specifies the timeout in milliseconds that are allowed to put a message on the queue of Forwarding Agent.
# forwardingQueueTimeout 0

# Set this property to "true" if you have problems with one connection slowing down the rest.
# useForwardingQueue false

# Specifies the time(ms) for how long events will be supressed once a event has been sent.
# suppressDuplicateEvents 60000

# Specifies the interface to use for the agent, default is wildcard
# localInterface 

]]></string>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Advanced properties active" value="false"/>
                  <string name="Advanced properties extref key" null="true"/>
                  <enum name="Advanced properties fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Advanced properties mod" value="false"/>
                  <boolean name="Advanced properties pres" value="true"/>
                  <object name="Receive Response">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <boolean name="Object Internal" value="true"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Receive Response active" value="true"/>
                  <string name="Receive Response extref key" null="true"/>
                  <enum name="Receive Response fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Receive Response mod" value="false"/>
                  <boolean name="Receive Response pres" value="true"/>
                  <object name="Remote Host Addresses">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <list classname="java.util.ArrayList" name="Object Internal">
                              <udr classname="com.digitalroute.tcpipforw.udr.RemoteHostConfig" name="0" type="udr" ver="3.0">
                                 <string name="Host" value="cbssibs.ghb.co.th"/>
                                 <int name="Port" value="18701"/>
                              </udr>
                           </list>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Remote Host Addresses active" value="true"/>
                  <string name="Remote Host Addresses extref key" null="true"/>
                  <enum name="Remote Host Addresses fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Remote Host Addresses mod" value="false"/>
                  <boolean name="Remote Host Addresses pres" value="true"/>
               </storable>
            </storable>
         </array>
         <string name="Name" value="TCP_IP_SL"/>
      </storable>
      <storable name="7" storable-id="dr.WfNode" ver="2.0">
         <string name="Classname"><![CDATA[com.digitalroute.pythonagents.agent.PythonRealtimeProcessingAgentInsp]]></string>
         <array classname="com.digitalroute.wf.WfNodeConfig" name="Configuration" size="1">
            <storable name="0" storable-id="dr.WfNodeConfig" ver="1.0">
               <string name="Classname"><![CDATA[com.digitalroute.pythonagents.agent.PythonRealtimeProcessingAgentInsp]]></string>
               <storable name="Data" storable-id="dr.PythonAgentData" ver="8.1">
                  <object name="Input Types">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <array classname="com.digitalroute.devkit.drudr.DRTypeInfo" name="Object Internal" size="1">
                              <storable name="0" storable-id="dr.UltraClientInfo" ver="1.0">
                                 <string name="FormatName" value="NCB.UFL_NcbSlRequestPack_Aggregation"/>
                                 <string name="TypeName"><![CDATA[NCB.UFL_NcbSlRequestPack_Aggregation.NcbSlRequestPack]]></string>
                              </storable>
                           </array>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Input Types active" value="true"/>
                  <string name="Input Types extref key" null="true"/>
                  <enum name="Input Types fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Input Types mod" value="false"/>
                  <boolean name="Input Types pres" value="true"/>
                  <object name="Interpreter">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <storable name="Object Internal" storable-id="dr.DRConfiguration" ver="1.0">
                              <string name="Folder" value="NCB"/>
                              <string name="Key" value="MZ1526370701671"/>
                              <string name="Name" value="PRF_PythonNCB"/>
                              <string name="Type" value="Python Interpreter Profile"/>
                           </storable>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Interpreter active" value="true"/>
                  <string name="Interpreter extref key" null="true"/>
                  <enum name="Interpreter fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Interpreter mod" value="false"/>
                  <boolean name="Interpreter pres" value="true"/>
                  <object name="MIMs">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <array classname="com.digitalroute.devkit.wf.DRMIMEntry" name="Object Internal" size="0"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="MIMs active" value="true"/>
                  <string name="MIMs extref key" null="true"/>
                  <enum name="MIMs fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="MIMs mod" value="false"/>
                  <boolean name="MIMs pres" value="true"/>
                  <object name="Output Types">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <array classname="com.digitalroute.pythonagents.OutputTypeInfo" name="Object Internal" size="2">
                              <storable name="0" storable-id="dr.PythonOutputTypeInfo" ver="1.0">
                                 <string name="route" null="true"/>
                                 <storable name="udrTypeInfo" storable-id="dr.DRTypeInfo" ver="1.0">
                                    <string name="TypeName" value="bytearray"/>
                                 </storable>
                              </storable>
                              <storable name="1" storable-id="dr.PythonOutputTypeInfo" ver="1.0">
                                 <string name="route" null="true"/>
                                 <storable name="udrTypeInfo" storable-id="dr.UltraClientInfo" ver="1.0">
                                    <string name="FormatName" value="Ultra.UFL_MBASE_CFC810001IR"/>
                                    <string name="TypeName"><![CDATA[Ultra.UFL_MBASE_CFC810001IR.CFC810001I_PYTHON_DATASET_TI]]></string>
                                 </storable>
                              </storable>
                           </array>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Output Types active" value="true"/>
                  <string name="Output Types extref key" null="true"/>
                  <enum name="Output Types fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Output Types mod" value="false"/>
                  <boolean name="Output Types pres" value="true"/>
                  <object name="Source Code">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <string name="Object Internal"><![CDATA[from python.NCB.PYM_PythonNCB import *
from ultra.Ultra.UFL_MBASE_CFC810001IR import CFC810001I_RQ_TI
from ultra.Ultra.UFL_MBASE_CFC810001IR import CFC810001I_PYTHON_DATASET_TI

def consume(input):
    
    if isinstance(input,NcbSlRequestPack):
        
        matcher = input
        
        ##SL request data
        userId = matcher.mbase.mbaseHeader.HDUSID        
        xmlRequest = createXMLRequestNCRS(matcher.cfc810001, userId)
                
        #convert to bytearray
        xmlRequestBa = bytearray(xmlRequest,"utf-8")

#ok variable for test        
        ok = True
        if ok == True:
            xmlRequestSet = CFC810001I_PYTHON_DATASET_TI()
            xmlRequestSet.ReferenceNumber = matcher.cfc810001.ReferenceNumber
            xmlRequestSet.XmlRequestBa = xmlRequestBa
            udrRoute(xmlRequestSet)
        #pass
        ]]></string>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Source Code active" value="true"/>
                  <string name="Source Code extref key" null="true"/>
                  <enum name="Source Code fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Source Code mod" value="false"/>
                  <boolean name="Source Code pres" value="true"/>
               </storable>
            </storable>
         </array>
         <string name="Name" value="CreateXMLRequest"/>
      </storable>
      <storable name="8" storable-id="dr.WfNode" ver="2.0">
         <string name="Classname"><![CDATA[com.digitalroute.pythonagents.agent.PythonRealtimeProcessingAgentInsp]]></string>
         <array classname="com.digitalroute.wf.WfNodeConfig" name="Configuration" size="1">
            <storable name="0" storable-id="dr.WfNodeConfig" ver="1.0">
               <string name="Classname"><![CDATA[com.digitalroute.pythonagents.agent.PythonRealtimeProcessingAgentInsp]]></string>
               <storable name="Data" storable-id="dr.PythonAgentData" ver="8.1">
                  <object name="Input Types">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <array classname="com.digitalroute.devkit.drudr.DRTypeInfo" name="Object Internal" size="1">
                              <storable name="0" storable-id="dr.UltraClientInfo" ver="1.0">
                                 <string name="FormatName" value="Ultra.UFL_MBASE_CFC810010IR"/>
                                 <string name="TypeName"><![CDATA[Ultra.UFL_MBASE_CFC810010IR.CFC810010I_PYTHON_DATASET_TI]]></string>
                              </storable>
                           </array>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Input Types active" value="true"/>
                  <string name="Input Types extref key" null="true"/>
                  <enum name="Input Types fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Input Types mod" value="false"/>
                  <boolean name="Input Types pres" value="true"/>
                  <object name="Interpreter">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <storable name="Object Internal" storable-id="dr.DRConfiguration" ver="1.0">
                              <string name="Folder" value="NCB"/>
                              <string name="Key" value="MZ1526370701671"/>
                              <string name="Name" value="PRF_PythonNCB"/>
                              <string name="Type" value="Python Interpreter Profile"/>
                           </storable>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Interpreter active" value="true"/>
                  <string name="Interpreter extref key" null="true"/>
                  <enum name="Interpreter fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Interpreter mod" value="false"/>
                  <boolean name="Interpreter pres" value="true"/>
                  <object name="MIMs">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <array classname="com.digitalroute.devkit.wf.DRMIMEntry" name="Object Internal" size="0"/>
                        </object>
                     </storable>
                  </object>
                  <boolean name="MIMs active" value="true"/>
                  <string name="MIMs extref key" null="true"/>
                  <enum name="MIMs fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="MIMs mod" value="false"/>
                  <boolean name="MIMs pres" value="true"/>
                  <object name="Output Types">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <array classname="com.digitalroute.pythonagents.OutputTypeInfo" name="Object Internal" size="1">
                              <storable name="0" storable-id="dr.PythonOutputTypeInfo" ver="1.0">
                                 <string name="route" null="true"/>
                                 <storable name="udrTypeInfo" storable-id="dr.UltraClientInfo" ver="1.0">
                                    <string name="FormatName" value="Ultra.UFL_MBASE_CFC810010IR"/>
                                    <string name="TypeName" value="Ultra.UFL_MBASE_CFC810010IR.CFC810010I_RQ_TI"/>
                                 </storable>
                              </storable>
                           </array>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Output Types active" value="true"/>
                  <string name="Output Types extref key" null="true"/>
                  <enum name="Output Types fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Output Types mod" value="false"/>
                  <boolean name="Output Types pres" value="true"/>
                  <object name="Source Code">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <string name="Object Internal"><![CDATA[from python.NCB.PYM_PythonNCB import createNCBResponseObject
from ultra.Ultra.UFL_MBASE_CFC810010IR import CFC810010I_RQ_TI
from ultra.Ultra.UFL_MBASE_CFC810010IR import CFC810010I_PYTHON_DATASET_TI
import time

def consume(input):
    
    inputStr = input.Cfc810010Ba.decode("UTF-8")
    refNo = input.RefNoBa.decode("UTF-8").strip()
    
    #debug("xml input")
    #debug(inputStr)
    debug("ref no")
    debug(refNo)
    
    objectList = createNCBResponseObject(inputStr,refNo)
    
    debug("END CREATE NCB RESPONSE OBJECT")
    debug("Object Result")
    debug("object count : " + str(len(objectList)))
    debug("-----------------------------------------------------")
    
    #debug(objectList)
    
    for resObject in objectList:
        udrRoute(resObject)
        time.sleep(0.3)
        
    #pass
]]></string>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Source Code active" value="true"/>
                  <string name="Source Code extref key" null="true"/>
                  <enum name="Source Code fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Source Code mod" value="false"/>
                  <boolean name="Source Code pres" value="true"/>
               </storable>
            </storable>
         </array>
         <string name="Name" value="CreateNCBResponseObject"/>
      </storable>
      <storable name="9" storable-id="dr.WfNode" ver="2.0">
         <string name="Classname" value="com.digitalroute.wfc.analysis.AnalysisRealtimeInsp"/>
         <array classname="com.digitalroute.wf.WfNodeConfig" name="Configuration" size="1">
            <storable name="0" storable-id="dr.WfNodeConfig" ver="1.0">
               <string name="Classname" value="com.digitalroute.wfc.analysis.AnalysisRealtimeInsp"/>
               <storable name="Data" storable-id="dr.StuffyMapperData" ver="1.0">
                  <object name="Source code">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <string name="Object Internal"><![CDATA[//ultra
import ultra.CBS.UFL_DSP_Header;
import ultra.CBS.UFL_MBASE_Header;
import ultra.CBS.UFL_Aggregation;
import ultra.Ultra.UFL_MBASE_CFC810001IR;
import ultra.Ultra.UFL_MBASE_CFC810010IR;
import ultra.TCPIP;
import ultra.CBS.UFL_Aggregation;

//apl
import apl.Common.APL_Common_Utilities;
import apl.NCB.APL_NCBService;

import ultra.FNT;
    mimPublish( global, "SaveSocketSLResponseToDisk" , any );

any decoder;
initialize {
    // we use MassDecoder here as the response arrives in multiple packets and we must wait for the 
    // full package with length SKTMLEN-9 to be delivered before we push it to next agent.
    decoder = udrMassCreateDecoder("CBS.UFL_DSP_Header.DSP_Header_Decoder");    
}

consume{
    //respoonse result from socket
    try{
        DSP_Header_TgIn dsp = (DSP_Header_TgIn)input.tcpResponse;
        list<MBASE_Header_With_Payload_TI> mbaseList = listCreate(MBASE_Header_With_Payload_TI);
        udrDecode("MBASE_Header_With_Payload_Decode",mbaseList,input.tcpResponse.data);
        //debug(baToStr(listGet(mbaseList,0).data, "IBM-Thai"));
        MBASE_Header_With_Payload_TI mbase = listGet(mbaseList,0);
        string referenceNumber = input.reference;
        string runningNumber = (string)input.sequence;
        debug("RefNo : " + referenceNumber);
        debug("RunningNo : " + runningNumber);
        debug("DSP Response Code : " + dsp.I13MSTA);
        //debug("-----------------------------------------");
        //debug(dsp);
        //debug("-----------------------------------------");
        //debug(mbase);
        //debug("-----------------------------------------");
        debug("MBase");
        debug(baToStr(mbase.data, "IBM-Thai"));
        debug("-----------------------------------------");
        debug("-----------------------------------------");
        debug("-----------------------------------------");
        
        //save response from SL log
debug("dsp.I13MSTA: " + dsp.I13MSTA);
        string dspStatus = "";
        if(dsp.I13MSTA != null && dsp.I13MSTA != ""){
            dspStatus = strTrim(strREReplaceAll(strREReplaceAll(dsp.I13MSTA, "/",""), "\\.",""));
        }
debug("DSP status: " + dspStatus);
        bytearray responseSocket = udrEncode("DSP_Header_Encoder",input.tcpResponse);
        FNTUDR fntudr = udrCreate(FNTUDR);
        string nowDateStr; dateToString(nowDateStr, dateCreateNow(), "yyyyMMdd");
debug("now date: " + nowDateStr);
        date logDatetime = dateCreateNow();
        string logDatetimefnt; dateToString(logDatetimefnt, logDatetime, "yyyyMMdd_HHmmss_SSS");
        //string saveFileName = logDatetimefnt + "_" + referenceNumber + "_" + runningNumber + "_CFC810010_" + dspStatus + "_response_socket_sl.res";            
        //udrRoute(createMultiForwardingUDR("/request_to_sl_log/" + nowDateStr, saveFileName, responseSocket),"saveSLResponse");
        string saveFileName = logDatetimefnt + "_" + referenceNumber + "_" + runningNumber + "_CFC810010_" + dspStatus + "_response_socket_sl.log";
        string logResponseSocketStr = baToStr(responseSocket, "IBM-Thai");
        bytearray logResponseSocketBa; strToBA(logResponseSocketBa, logResponseSocketStr, "UTF-8");
        udrRoute(createMultiForwardingUDR("/request_to_sl_log/" + nowDateStr, saveFileName, logResponseSocketBa),"saveSLResponse");
debug("log datetime fnt: " + logDatetimefnt);
debug("save filename: " + saveFileName);
        debug("response socket from SL saved");
        debug("-----------------------------------------");
        
    }catch(ExceptionDetails ex){
        debug("Exception: " + ex.message);
    }
}]]></string>
                        </object>
                     </storable>
                  </object>
                  <boolean name="Source code active" value="true"/>
                  <string name="Source code extref key" null="true"/>
                  <enum name="Source code fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="Source code mod" value="false"/>
                  <boolean name="Source code pres" value="true"/>
                  <object name="UDR types">
                     <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
                        <object name="Value">
                           <array classname="com.digitalroute.devkit.drudr.DRTypeInfo" name="Object Internal" size="1">
                              <storable name="0" storable-id="dr.UltraClientInfo" ver="1.0">
                                 <string name="FormatName" value="CBS.UFL_Aggregation"/>
                                 <string name="TypeName" value="CBS.UFL_Aggregation.Matcher"/>
                              </storable>
                           </array>
                        </object>
                     </storable>
                  </object>
                  <boolean name="UDR types active" value="true"/>
                  <string name="UDR types extref key" null="true"/>
                  <enum name="UDR types fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
                  <boolean name="UDR types mod" value="false"/>
                  <boolean name="UDR types pres" value="true"/>
               </storable>
            </storable>
         </array>
         <string name="Name" value="CheckResponseFromSL"/>
      </storable>
   </list>
   <storable name="Persistent" storable-id="dr.WorkflowPersistentConfig" ver="6.0">
      <object name="Persistent Inspector">
         <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
            <object name="Value">
               <null name="Object Internal"/>
            </object>
         </storable>
      </object>
      <boolean name="Persistent Inspector active" value="true"/>
      <string name="Persistent Inspector extref key" null="true"/>
      <enum name="Persistent Inspector fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
      <boolean name="Persistent Inspector mod" value="false"/>
      <boolean name="Persistent Inspector pres" value="true"/>
      <object name="Persistent Storage Config">
         <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
            <object name="Value">
               <null name="Object Internal"/>
            </object>
         </storable>
      </object>
      <boolean name="Persistent Storage Config active" value="true"/>
      <string name="Persistent Storage Config extref key" null="true"/>
      <enum name="Persistent Storage Config fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
      <boolean name="Persistent Storage Config mod" value="false"/>
      <boolean name="Persistent Storage Config pres" value="true"/>
      <object name="Persistent Timeout Handler">
         <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
            <object name="Value">
               <null name="Object Internal"/>
            </object>
         </storable>
      </object>
      <boolean name="Persistent Timeout Handler active" value="true"/>
      <string name="Persistent Timeout Handler extref key" null="true"/>
      <enum name="Persistent Timeout Handler fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
      <boolean name="Persistent Timeout Handler mod" value="false"/>
      <boolean name="Persistent Timeout Handler pres" value="true"/>
   </storable>
   <list classname="java.util.ArrayList" name="Routes">
      <storable name="0" storable-id="dr.WfRoute" ver="2.0">
         <string name="Name" value="toCreateRequestNCB"/>
         <int name="Realtime mode" value="0"/>
      </storable>
      <storable name="1" storable-id="dr.WfRoute" ver="2.0">
         <string name="Name" value="toDisk"/>
         <int name="Realtime mode" value="0"/>
      </storable>
      <storable name="10" storable-id="dr.WfRoute" ver="2.0">
         <string name="Name" value="toAggr1"/>
         <int name="Realtime mode" value="0"/>
      </storable>
      <storable name="11" storable-id="dr.WfRoute" ver="2.0">
         <string name="Name" value="toCheckResponseFromSL"/>
         <int name="Realtime mode" value="0"/>
      </storable>
      <storable name="12" storable-id="dr.WfRoute" ver="2.0">
         <string name="Name" value="saveSLRequest"/>
         <int name="Realtime mode" value="0"/>
      </storable>
      <storable name="13" storable-id="dr.WfRoute" ver="2.0">
         <string name="Name" value="saveSLLogError"/>
         <int name="Realtime mode" value="0"/>
      </storable>
      <storable name="14" storable-id="dr.WfRoute" ver="2.0">
         <string name="Name" value="saveSLResponse"/>
         <int name="Realtime mode" value="0"/>
      </storable>
      <storable name="15" storable-id="dr.WfRoute" ver="2.0">
         <string name="Name" value="start"/>
         <int name="Realtime mode" value="0"/>
      </storable>
      <storable name="16" storable-id="dr.WfRoute" ver="2.0">
         <string name="Name" value="continue"/>
         <int name="Realtime mode" value="0"/>
      </storable>
      <storable name="17" storable-id="dr.WfRoute" ver="2.0">
         <string name="Name" value="pythonRequestNCB"/>
         <int name="Realtime mode" value="0"/>
      </storable>
      <storable name="18" storable-id="dr.WfRoute" ver="2.0">
         <string name="Name" value="pymCheckResNCB"/>
         <int name="Realtime mode" value="0"/>
      </storable>
      <storable name="19" storable-id="dr.WfRoute" ver="2.0">
         <string name="Name" value="CreateKeepAliveReq"/>
         <int name="Realtime mode" value="0"/>
      </storable>
      <storable name="2" storable-id="dr.WfRoute" ver="2.0">
         <string name="Name" value="fromDisk"/>
         <int name="Realtime mode" value="0"/>
      </storable>
      <storable name="20" storable-id="dr.WfRoute" ver="2.0">
         <string name="Name" value="keepAliveReq"/>
         <int name="Realtime mode" value="0"/>
      </storable>
      <storable name="3" storable-id="dr.WfRoute" ver="2.0">
         <string name="Name" value="checkResponseNCB"/>
         <int name="Realtime mode" value="0"/>
      </storable>
      <storable name="4" storable-id="dr.WfRoute" ver="2.0">
         <string name="Name" value="toCreateNCBResponseObject"/>
         <int name="Realtime mode" value="0"/>
      </storable>
      <storable name="5" storable-id="dr.WfRoute" ver="2.0">
         <string name="Name" value="toCreateRequestSocketToSL"/>
         <int name="Realtime mode" value="0"/>
      </storable>
      <storable name="6" storable-id="dr.WfRoute" ver="2.0">
         <string name="Name" value="toSocket"/>
         <int name="Realtime mode" value="0"/>
      </storable>
      <storable name="7" storable-id="dr.WfRoute" ver="2.0">
         <string name="Name" value="toCreateXMLRequest"/>
         <int name="Realtime mode" value="0"/>
      </storable>
      <storable name="8" storable-id="dr.WfRoute" ver="2.0">
         <string name="Name" value="SocketResponse"/>
         <int name="Realtime mode" value="0"/>
      </storable>
      <storable name="9" storable-id="dr.WfRoute" ver="2.0">
         <string name="Name" value="toAggr2"/>
         <int name="Realtime mode" value="0"/>
      </storable>
   </list>
   <list classname="java.util.ArrayList" name="Service"/>
   <boolean name="Template Valid" value="true"/>
   <storable name="Thread data" storable-id="dr.WorkflowExecutionRealtimeConfig" ver="8.0">
      <object name="Processed UDRs count interval">
         <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
            <object name="Value">
               <int name="Object Internal" value="1"/>
            </object>
         </storable>
      </object>
      <boolean name="Processed UDRs count interval active" value="true"/>
      <string name="Processed UDRs count interval extref key" null="true"/>
      <enum name="Processed UDRs count interval fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
      <boolean name="Processed UDRs count interval mod" value="false"/>
      <boolean name="Processed UDRs count interval pres" value="true"/>
      <object name="Queue Size">
         <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
            <object name="Value">
               <int name="Object Internal" value="1000"/>
            </object>
         </storable>
      </object>
      <boolean name="Queue Size active" value="true"/>
      <string name="Queue Size extref key" null="true"/>
      <enum name="Queue Size fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
      <boolean name="Queue Size mod" value="false"/>
      <boolean name="Queue Size pres" value="true"/>
      <object name="Queue strategies">
         <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
            <object name="Value">
               <string name="Object Internal" value="Blocking queue"/>
            </object>
         </storable>
      </object>
      <boolean name="Queue strategies active" value="true"/>
      <string name="Queue strategies extref key" null="true"/>
      <enum name="Queue strategies fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
      <boolean name="Queue strategies mod" value="false"/>
      <boolean name="Queue strategies pres" value="true"/>
      <object name="Queue worker strategies">
         <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
            <object name="Value">
               <string name="Object Internal" value="RoundRobin"/>
            </object>
         </storable>
      </object>
      <boolean name="Queue worker strategies active" value="true"/>
      <string name="Queue worker strategies extref key" null="true"/>
      <enum name="Queue worker strategies fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
      <boolean name="Queue worker strategies mod" value="false"/>
      <boolean name="Queue worker strategies pres" value="true"/>
      <object name="Stand-alone">
         <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
            <object name="Value">
               <boolean name="Object Internal" value="true"/>
            </object>
         </storable>
      </object>
      <boolean name="Stand-alone active" value="true"/>
      <string name="Stand-alone extref key" null="true"/>
      <enum name="Stand-alone fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
      <boolean name="Stand-alone mod" value="false"/>
      <boolean name="Stand-alone pres" value="true"/>
      <object name="Threads">
         <storable name="Object Internal" storable-id="dr.DRGeneratedFromContract$Field$FieldWrapper" ver="1.0">
            <object name="Value">
               <int name="Object Internal" value="8"/>
            </object>
         </storable>
      </object>
      <boolean name="Threads active" value="true"/>
      <string name="Threads extref key" null="true"/>
      <enum name="Threads fit" storable-id="dr.DRFieldInstanceType" value="FINAL"/>
      <boolean name="Threads mod" value="false"/>
      <boolean name="Threads pres" value="true"/>
   </storable>
   <storable name="Timer Trigger" null="true"/>
</exportmultiplex>
