<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE exportmultiplex SYSTEM "jar:/mz/dtd/export_multiplex.dtd">
<exportmultiplex category="Ultra_Format" ref_path="ultra_format[Internal]/storable[ultra_format]/storable[Data]">
   <string name="Definition"><![CDATA[external ReturnsPaymentHistory_RQ {
ascii	ReferenceNumber	:static_size(40)	,padded_with(0x40),align(left),character_encoding("cp838");	//40
ascii	RunningNumber	:static_size(5)	,padded_with(0xf0),align(right),character_encoding("cp838");	//5,0
ascii	AsofDate	:static_size(8)	,padded_with(0xf0),align(right),character_encoding("cp838");	//8,0
ascii	OverDueMonth	:static_size(6)	,padded_with(0x40),align(left),character_encoding("cp838");	//6
ascii	CreditLimit	:static_size(6)	,padded_with(0x40),align(left),character_encoding("cp838");	//6
ascii	LoanBalance	:static_size(17)	,padded_with(0xf0),align(right),character_encoding("cp838");	//17,2
};

external ReturnsPaymentHistory_RS {
ascii	ReferenceNumber	:static_size(40)	,padded_with(0x40),align(left),character_encoding("cp838");	//40
ascii	RunningNumber	:static_size(5)	,padded_with(0xf0),align(right),character_encoding("cp838");	//5,0
ascii	AsofDate	:static_size(8)	,padded_with(0xf0),align(right),character_encoding("cp838");	//8,0
ascii	OverDueMonth	:static_size(6)	,padded_with(0x40),align(left),character_encoding("cp838");	//6
ascii	CreditLimit	:static_size(6)	,padded_with(0x40),align(left),character_encoding("cp838");	//6
ascii	LoanBalance	:static_size(17)	,padded_with(0xf0),align(right),character_encoding("cp838");	//17,2
};

//Input Encoder
in_map ReturnsPaymentHistory_RQ_InMap: external (ReturnsPaymentHistory_RQ), target_internal(ReturnsPaymentHistory_RQ_TI){automatic;};
out_map ReturnsPaymentHistory_RQ_OutMap: external (ReturnsPaymentHistory_RQ), internal(ReturnsPaymentHistory_RQ_TI) {automatic;};
encoder ReturnsPaymentHistory_RQ_Encode: out_map(ReturnsPaymentHistory_RQ_OutMap);
decoder ReturnsPaymentHistory_RQ_Decode: in_map(ReturnsPaymentHistory_RQ_InMap);

// Response Decoders
in_map ReturnsPaymentHistory_RS_InMap: external(ReturnsPaymentHistory_RS), target_internal(ReturnsPaymentHistory_RS_TI) {automatic;};
out_map ReturnsPaymentHistory_RS_OutMap: external (ReturnsPaymentHistory_RS), internal(ReturnsPaymentHistory_RS_TI) {automatic;};
encoder ReturnsPaymentHistory_RS_Encode: out_map(ReturnsPaymentHistory_RS_OutMap);
decoder ReturnsPaymentHistory_RS_Decode: in_map(ReturnsPaymentHistory_RS_InMap);
]]></string>
   <boolean name="IsValid" value="true"/>
</exportmultiplex>
